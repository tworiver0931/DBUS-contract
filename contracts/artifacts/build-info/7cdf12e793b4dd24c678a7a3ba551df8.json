{
	"id": "7cdf12e793b4dd24c678a7a3ba551df8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/burnTest.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\";\n\ncontract MyToken is ERC1155, Ownable, ERC1155Burnable {\n    constructor(address initialOwner) ERC1155(\"\") Ownable(initialOwner) {}\n\n    function setURI(string memory newuri) public onlyOwner {\n        _setURI(newuri);\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155} from \"../ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burnBatch(account, ids, values);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"ERC1155Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xdfab949ba677f4b122d0c14225e6db7ca8a65524e2f00049e57b04f68eceeb87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d240211d484954a409a8870c3a971af9e2eb6b6d0ab46b50c193c4a1576006\",\"dweb:/ipfs/QmdzSJoJ6iqoWrGKNeDjV4KVfCqna7Vc7AMoQxpxTdTMpF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209ddeb7f30316ca043df9ae887f9e40324d506221a9b0525d847bb63ccfe2e59164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209ddeb7f30316ca043df9ae887f9e40324d506221a9b0525d847bb63ccfe2e59164736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xDE 0xB7 RETURN SUB AND 0xCA DIV RETURNDATASIZE 0xF9 0xAE DUP9 PUSH32 0x9E40324D506221A9B0525D847BB63CCFE2E59164736F6C634300081400330000 ",
							"sourceMap": "276:4526:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209ddeb7f30316ca043df9ae887f9e40324d506221a9b0525d847bb63ccfe2e59164736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xDE 0xB7 RETURN SUB AND 0xCA DIV RETURNDATASIZE 0xF9 0xAE DUP9 PUSH32 0x9E40324D506221A9B0525D847BB63CCFE2E59164736F6C634300081400330000 ",
							"sourceMap": "276:4526:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ddeb7f30316ca043df9ae887f9e40324d506221a9b0525d847bb63ccfe2e59164736f6c63430008140033",
									".code": [
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/burnTest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220122bdb37b83b84a84480ef52227fb13b9f3ed775d4693784d4e6a75172b45ee464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220122bdb37b83b84a84480ef52227fb13b9f3ed775d4693784d4e6a75172b45ee464736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0x2B 0xDB CALLDATACOPY 0xB8 EXTCODESIZE DUP5 0xA8 PREVRANDAO DUP1 0xEF MSTORE 0x22 PUSH32 0xB13B9F3ED775D4693784D4E6A75172B45EE464736F6C63430008140033000000 ",
							"sourceMap": "1245:2685:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220122bdb37b83b84a84480ef52227fb13b9f3ed775d4693784d4e6a75172b45ee464736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0x2B 0xDB CALLDATACOPY 0xB8 EXTCODESIZE DUP5 0xA8 PREVRANDAO DUP1 0xEF MSTORE 0x22 PUSH32 0xB13B9F3ED775D4693784D4E6A75172B45EE464736F6C63430008140033000000 ",
							"sourceMap": "1245:2685:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220122bdb37b83b84a84480ef52227fb13b9f3ed775d4693784d4e6a75172b45ee464736f6c63430008140033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/burnTest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP1 0xBC 0xF6 PUSH0 0xFB BASEFEE 0xE9 0xC5 SAR CALLDATALOAD SUB RETURN EXTCODEHASH MLOAD LOG1 SIGNEXTEND 0xD9 LOG2 0xC3 SHL 0x2D SWAP6 0xCF DUP8 ORIGIN MOD 0xFC PUSH25 0xDA2D364736F6C634300081400330000000000000000000000 ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP1 0xBC 0xF6 PUSH0 0xFB BASEFEE 0xE9 0xC5 SAR CALLDATALOAD SUB RETURN EXTCODEHASH MLOAD LOG1 SIGNEXTEND 0xD9 LOG2 0xC3 SHL 0x2D SWAP6 0xCF DUP8 ORIGIN MOD 0xFC PUSH25 0xDA2D364736F6C634300081400330000000000000000000000 ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/burnTest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/burnTest.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newuri",
									"type": "string"
								}
							],
							"name": "setURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/burnTest.sol\":251:476  contract MyToken is ERC1155, Ownable, ERC1155Burnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/burnTest.sol\":311:381  constructor(address initialOwner) ERC1155(\"\") Ownable(initialOwner) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/burnTest.sol\":365:377  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1301:1305  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1300  _setURI */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/burnTest.sol\":311:381  constructor(address initialOwner) ERC1155(\"\") Ownable(initialOwner) {} */\n  pop\n    /* \"contracts/burnTest.sol\":251:476  contract MyToken is ERC1155, Ownable, ERC1155Burnable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  swap1\n  dup2\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x03\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x03\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_23:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_25:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_26:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_56\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_25\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_27:\n    /* \"#utility.yul\":641:665   */\n  tag_58\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_59:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_28:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_61\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_27\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_64\n  tag_23\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":932:1051   */\ntag_63:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_65\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_28\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_29:\n    /* \"#utility.yul\":1289:1313   */\n  tag_67\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_26\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_13:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_69\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_29\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1554:1653   */\ntag_30:\n    /* \"#utility.yul\":1606:1612   */\n  0x00\n    /* \"#utility.yul\":1640:1645   */\n  dup2\n    /* \"#utility.yul\":1634:1646   */\n  mload\n    /* \"#utility.yul\":1624:1646   */\n  swap1\n  pop\n    /* \"#utility.yul\":1554:1653   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1659:1839   */\ntag_31:\n    /* \"#utility.yul\":1707:1784   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1704:1705   */\n  0x00\n    /* \"#utility.yul\":1697:1785   */\n  mstore\n    /* \"#utility.yul\":1804:1808   */\n  0x41\n    /* \"#utility.yul\":1801:1802   */\n  0x04\n    /* \"#utility.yul\":1794:1809   */\n  mstore\n    /* \"#utility.yul\":1828:1832   */\n  0x24\n    /* \"#utility.yul\":1825:1826   */\n  0x00\n    /* \"#utility.yul\":1818:1833   */\n  revert\n    /* \"#utility.yul\":1845:2025   */\ntag_32:\n    /* \"#utility.yul\":1893:1970   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1890:1891   */\n  0x00\n    /* \"#utility.yul\":1883:1971   */\n  mstore\n    /* \"#utility.yul\":1990:1994   */\n  0x22\n    /* \"#utility.yul\":1987:1988   */\n  0x04\n    /* \"#utility.yul\":1980:1995   */\n  mstore\n    /* \"#utility.yul\":2014:2018   */\n  0x24\n    /* \"#utility.yul\":2011:2012   */\n  0x00\n    /* \"#utility.yul\":2004:2019   */\n  revert\n    /* \"#utility.yul\":2031:2351   */\ntag_33:\n    /* \"#utility.yul\":2075:2081   */\n  0x00\n    /* \"#utility.yul\":2112:2113   */\n  0x02\n    /* \"#utility.yul\":2106:2110   */\n  dup3\n    /* \"#utility.yul\":2102:2114   */\n  div\n    /* \"#utility.yul\":2092:2114   */\n  swap1\n  pop\n    /* \"#utility.yul\":2159:2160   */\n  0x01\n    /* \"#utility.yul\":2153:2157   */\n  dup3\n    /* \"#utility.yul\":2149:2161   */\n  and\n    /* \"#utility.yul\":2180:2198   */\n  dup1\n    /* \"#utility.yul\":2170:2251   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2236:2240   */\n  0x7f\n    /* \"#utility.yul\":2228:2234   */\n  dup3\n    /* \"#utility.yul\":2224:2241   */\n  and\n    /* \"#utility.yul\":2214:2241   */\n  swap2\n  pop\n    /* \"#utility.yul\":2170:2251   */\ntag_74:\n    /* \"#utility.yul\":2298:2300   */\n  0x20\n    /* \"#utility.yul\":2290:2296   */\n  dup3\n    /* \"#utility.yul\":2287:2301   */\n  lt\n    /* \"#utility.yul\":2267:2285   */\n  dup2\n    /* \"#utility.yul\":2264:2302   */\n  sub\n    /* \"#utility.yul\":2261:2345   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2317:2335   */\n  tag_76\n  tag_32\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2261:2345   */\ntag_75:\n    /* \"#utility.yul\":2082:2351   */\n  pop\n    /* \"#utility.yul\":2031:2351   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2357:2498   */\ntag_34:\n    /* \"#utility.yul\":2406:2410   */\n  0x00\n    /* \"#utility.yul\":2429:2432   */\n  dup2\n    /* \"#utility.yul\":2421:2432   */\n  swap1\n  pop\n    /* \"#utility.yul\":2452:2455   */\n  dup2\n    /* \"#utility.yul\":2449:2450   */\n  0x00\n    /* \"#utility.yul\":2442:2456   */\n  mstore\n    /* \"#utility.yul\":2486:2490   */\n  0x20\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2473:2491   */\n  keccak256\n    /* \"#utility.yul\":2465:2491   */\n  swap1\n  pop\n    /* \"#utility.yul\":2357:2498   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2504:2597   */\ntag_35:\n    /* \"#utility.yul\":2541:2547   */\n  0x00\n    /* \"#utility.yul\":2588:2590   */\n  0x20\n    /* \"#utility.yul\":2583:2585   */\n  0x1f\n    /* \"#utility.yul\":2576:2581   */\n  dup4\n    /* \"#utility.yul\":2572:2586   */\n  add\n    /* \"#utility.yul\":2568:2591   */\n  div\n    /* \"#utility.yul\":2558:2591   */\n  swap1\n  pop\n    /* \"#utility.yul\":2504:2597   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2603:2710   */\ntag_36:\n    /* \"#utility.yul\":2647:2655   */\n  0x00\n    /* \"#utility.yul\":2697:2702   */\n  dup3\n    /* \"#utility.yul\":2691:2695   */\n  dup3\n    /* \"#utility.yul\":2687:2703   */\n  shl\n    /* \"#utility.yul\":2666:2703   */\n  swap1\n  pop\n    /* \"#utility.yul\":2603:2710   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2716:3109   */\ntag_37:\n    /* \"#utility.yul\":2785:2791   */\n  0x00\n    /* \"#utility.yul\":2835:2836   */\n  0x08\n    /* \"#utility.yul\":2823:2833   */\n  dup4\n    /* \"#utility.yul\":2819:2837   */\n  mul\n    /* \"#utility.yul\":2858:2955   */\n  tag_81\n    /* \"#utility.yul\":2888:2954   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2877:2886   */\n  dup3\n    /* \"#utility.yul\":2858:2955   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2976:3015   */\n  tag_82\n    /* \"#utility.yul\":3006:3014   */\n  dup7\n    /* \"#utility.yul\":2995:3004   */\n  dup4\n    /* \"#utility.yul\":2976:3015   */\n  tag_36\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2964:3015   */\n  swap6\n  pop\n    /* \"#utility.yul\":3048:3052   */\n  dup1\n    /* \"#utility.yul\":3044:3053   */\n  not\n    /* \"#utility.yul\":3037:3042   */\n  dup5\n    /* \"#utility.yul\":3033:3054   */\n  and\n    /* \"#utility.yul\":3024:3054   */\n  swap4\n  pop\n    /* \"#utility.yul\":3097:3101   */\n  dup1\n    /* \"#utility.yul\":3087:3095   */\n  dup7\n    /* \"#utility.yul\":3083:3102   */\n  and\n    /* \"#utility.yul\":3076:3081   */\n  dup5\n    /* \"#utility.yul\":3073:3103   */\n  or\n    /* \"#utility.yul\":3063:3103   */\n  swap3\n  pop\n    /* \"#utility.yul\":2792:3109   */\n  pop\n  pop\n    /* \"#utility.yul\":2716:3109   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3115:3192   */\ntag_38:\n    /* \"#utility.yul\":3152:3159   */\n  0x00\n    /* \"#utility.yul\":3181:3186   */\n  dup2\n    /* \"#utility.yul\":3170:3186   */\n  swap1\n  pop\n    /* \"#utility.yul\":3115:3192   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3198:3258   */\ntag_39:\n    /* \"#utility.yul\":3226:3229   */\n  0x00\n    /* \"#utility.yul\":3247:3252   */\n  dup2\n    /* \"#utility.yul\":3240:3252   */\n  swap1\n  pop\n    /* \"#utility.yul\":3198:3258   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3264:3406   */\ntag_40:\n    /* \"#utility.yul\":3314:3323   */\n  0x00\n    /* \"#utility.yul\":3347:3400   */\n  tag_86\n    /* \"#utility.yul\":3365:3399   */\n  tag_87\n    /* \"#utility.yul\":3374:3398   */\n  tag_88\n    /* \"#utility.yul\":3392:3397   */\n  dup5\n    /* \"#utility.yul\":3374:3398   */\n  tag_38\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3365:3399   */\n  tag_39\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3347:3400   */\n  tag_38\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3334:3400   */\n  swap1\n  pop\n    /* \"#utility.yul\":3264:3406   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3412:3487   */\ntag_41:\n    /* \"#utility.yul\":3455:3458   */\n  0x00\n    /* \"#utility.yul\":3476:3481   */\n  dup2\n    /* \"#utility.yul\":3469:3481   */\n  swap1\n  pop\n    /* \"#utility.yul\":3412:3487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3493:3762   */\ntag_42:\n    /* \"#utility.yul\":3603:3642   */\n  tag_91\n    /* \"#utility.yul\":3634:3641   */\n  dup4\n    /* \"#utility.yul\":3603:3642   */\n  tag_40\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3664:3755   */\n  tag_92\n    /* \"#utility.yul\":3713:3754   */\n  tag_93\n    /* \"#utility.yul\":3737:3753   */\n  dup3\n    /* \"#utility.yul\":3713:3754   */\n  tag_41\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3705:3711   */\n  dup5\n    /* \"#utility.yul\":3698:3702   */\n  dup5\n    /* \"#utility.yul\":3692:3703   */\n  sload\n    /* \"#utility.yul\":3664:3755   */\n  tag_37\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3658:3662   */\n  dup3\n    /* \"#utility.yul\":3651:3756   */\n  sstore\n    /* \"#utility.yul\":3569:3762   */\n  pop\n    /* \"#utility.yul\":3493:3762   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3768:3841   */\ntag_43:\n    /* \"#utility.yul\":3813:3816   */\n  0x00\n    /* \"#utility.yul\":3768:3841   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3847:4036   */\ntag_44:\n    /* \"#utility.yul\":3924:3956   */\n  tag_96\n  tag_43\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3965:4030   */\n  tag_97\n    /* \"#utility.yul\":4023:4029   */\n  dup2\n    /* \"#utility.yul\":4015:4021   */\n  dup5\n    /* \"#utility.yul\":4009:4013   */\n  dup5\n    /* \"#utility.yul\":3965:4030   */\n  tag_42\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3900:4036   */\n  pop\n    /* \"#utility.yul\":3847:4036   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4042:4228   */\ntag_45:\n    /* \"#utility.yul\":4102:4222   */\ntag_99:\n    /* \"#utility.yul\":4119:4122   */\n  dup2\n    /* \"#utility.yul\":4112:4117   */\n  dup2\n    /* \"#utility.yul\":4109:4123   */\n  lt\n    /* \"#utility.yul\":4102:4222   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4173:4212   */\n  tag_102\n    /* \"#utility.yul\":4210:4211   */\n  0x00\n    /* \"#utility.yul\":4203:4208   */\n  dup3\n    /* \"#utility.yul\":4173:4212   */\n  tag_44\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4146:4147   */\n  0x01\n    /* \"#utility.yul\":4139:4144   */\n  dup2\n    /* \"#utility.yul\":4135:4148   */\n  add\n    /* \"#utility.yul\":4126:4148   */\n  swap1\n  pop\n    /* \"#utility.yul\":4102:4222   */\n  jump(tag_99)\ntag_101:\n    /* \"#utility.yul\":4042:4228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4234:4777   */\ntag_46:\n    /* \"#utility.yul\":4335:4337   */\n  0x1f\n    /* \"#utility.yul\":4330:4333   */\n  dup3\n    /* \"#utility.yul\":4327:4338   */\n  gt\n    /* \"#utility.yul\":4324:4770   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4369:4407   */\n  tag_105\n    /* \"#utility.yul\":4401:4406   */\n  dup2\n    /* \"#utility.yul\":4369:4407   */\n  tag_34\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4453:4482   */\n  tag_106\n    /* \"#utility.yul\":4471:4481   */\n  dup5\n    /* \"#utility.yul\":4453:4482   */\n  tag_35\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4443:4451   */\n  dup2\n    /* \"#utility.yul\":4439:4483   */\n  add\n    /* \"#utility.yul\":4636:4638   */\n  0x20\n    /* \"#utility.yul\":4624:4634   */\n  dup6\n    /* \"#utility.yul\":4621:4639   */\n  lt\n    /* \"#utility.yul\":4618:4667   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":4657:4665   */\n  dup2\n    /* \"#utility.yul\":4642:4665   */\n  swap1\n  pop\n    /* \"#utility.yul\":4618:4667   */\ntag_107:\n    /* \"#utility.yul\":4680:4760   */\n  tag_108\n    /* \"#utility.yul\":4736:4758   */\n  tag_109\n    /* \"#utility.yul\":4754:4757   */\n  dup6\n    /* \"#utility.yul\":4736:4758   */\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4726:4734   */\n  dup4\n    /* \"#utility.yul\":4722:4759   */\n  add\n    /* \"#utility.yul\":4709:4720   */\n  dup3\n    /* \"#utility.yul\":4680:4760   */\n  tag_45\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4339:4770   */\n  pop\n  pop\n    /* \"#utility.yul\":4324:4770   */\ntag_104:\n    /* \"#utility.yul\":4234:4777   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4783:4900   */\ntag_47:\n    /* \"#utility.yul\":4837:4845   */\n  0x00\n    /* \"#utility.yul\":4887:4892   */\n  dup3\n    /* \"#utility.yul\":4881:4885   */\n  dup3\n    /* \"#utility.yul\":4877:4893   */\n  shr\n    /* \"#utility.yul\":4856:4893   */\n  swap1\n  pop\n    /* \"#utility.yul\":4783:4900   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4906:5075   */\ntag_48:\n    /* \"#utility.yul\":4950:4956   */\n  0x00\n    /* \"#utility.yul\":4983:5034   */\n  tag_112\n    /* \"#utility.yul\":5031:5032   */\n  0x00\n    /* \"#utility.yul\":5027:5033   */\n  not\n    /* \"#utility.yul\":5019:5024   */\n  dup5\n    /* \"#utility.yul\":5016:5017   */\n  0x08\n    /* \"#utility.yul\":5012:5025   */\n  mul\n    /* \"#utility.yul\":4983:5034   */\n  tag_47\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4979:5035   */\n  not\n    /* \"#utility.yul\":5064:5068   */\n  dup1\n    /* \"#utility.yul\":5058:5062   */\n  dup4\n    /* \"#utility.yul\":5054:5069   */\n  and\n    /* \"#utility.yul\":5044:5069   */\n  swap2\n  pop\n    /* \"#utility.yul\":4957:5075   */\n  pop\n    /* \"#utility.yul\":4906:5075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5080:5375   */\ntag_49:\n    /* \"#utility.yul\":5156:5160   */\n  0x00\n    /* \"#utility.yul\":5302:5331   */\n  tag_114\n    /* \"#utility.yul\":5327:5330   */\n  dup4\n    /* \"#utility.yul\":5321:5325   */\n  dup4\n    /* \"#utility.yul\":5302:5331   */\n  tag_48\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5294:5331   */\n  swap2\n  pop\n    /* \"#utility.yul\":5364:5367   */\n  dup3\n    /* \"#utility.yul\":5361:5362   */\n  0x02\n    /* \"#utility.yul\":5357:5368   */\n  mul\n    /* \"#utility.yul\":5351:5355   */\n  dup3\n    /* \"#utility.yul\":5348:5369   */\n  or\n    /* \"#utility.yul\":5340:5369   */\n  swap1\n  pop\n    /* \"#utility.yul\":5080:5375   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5380:6775   */\ntag_20:\n    /* \"#utility.yul\":5497:5534   */\n  tag_116\n    /* \"#utility.yul\":5530:5533   */\n  dup3\n    /* \"#utility.yul\":5497:5534   */\n  tag_30\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5599:5617   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5591:5597   */\n  dup2\n    /* \"#utility.yul\":5588:5618   */\n  gt\n    /* \"#utility.yul\":5585:5641   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":5621:5639   */\n  tag_118\n  tag_31\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5585:5641   */\ntag_117:\n    /* \"#utility.yul\":5665:5703   */\n  tag_119\n    /* \"#utility.yul\":5697:5701   */\n  dup3\n    /* \"#utility.yul\":5691:5702   */\n  sload\n    /* \"#utility.yul\":5665:5703   */\n  tag_33\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5750:5817   */\n  tag_120\n    /* \"#utility.yul\":5810:5816   */\n  dup3\n    /* \"#utility.yul\":5802:5808   */\n  dup3\n    /* \"#utility.yul\":5796:5800   */\n  dup6\n    /* \"#utility.yul\":5750:5817   */\n  tag_46\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5844:5845   */\n  0x00\n    /* \"#utility.yul\":5868:5872   */\n  0x20\n    /* \"#utility.yul\":5855:5872   */\n  swap1\n  pop\n    /* \"#utility.yul\":5900:5902   */\n  0x1f\n    /* \"#utility.yul\":5892:5898   */\n  dup4\n    /* \"#utility.yul\":5889:5903   */\n  gt\n    /* \"#utility.yul\":5917:5918   */\n  0x01\n    /* \"#utility.yul\":5912:6530   */\n  dup2\n  eq\n  tag_122\n  jumpi\n    /* \"#utility.yul\":6574:6575   */\n  0x00\n    /* \"#utility.yul\":6591:6597   */\n  dup5\n    /* \"#utility.yul\":6588:6665   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6640:6649   */\n  dup3\n    /* \"#utility.yul\":6635:6638   */\n  dup8\n    /* \"#utility.yul\":6631:6650   */\n  add\n    /* \"#utility.yul\":6625:6651   */\n  mload\n    /* \"#utility.yul\":6616:6651   */\n  swap1\n  pop\n    /* \"#utility.yul\":6588:6665   */\ntag_123:\n    /* \"#utility.yul\":6691:6758   */\n  tag_124\n    /* \"#utility.yul\":6751:6757   */\n  dup6\n    /* \"#utility.yul\":6744:6749   */\n  dup3\n    /* \"#utility.yul\":6691:6758   */\n  tag_49\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6685:6689   */\n  dup7\n    /* \"#utility.yul\":6678:6759   */\n  sstore\n    /* \"#utility.yul\":6547:6769   */\n  pop\n    /* \"#utility.yul\":5882:6769   */\n  jump(tag_121)\n    /* \"#utility.yul\":5912:6530   */\ntag_122:\n    /* \"#utility.yul\":5964:5968   */\n  0x1f\n    /* \"#utility.yul\":5960:5969   */\n  not\n    /* \"#utility.yul\":5952:5958   */\n  dup5\n    /* \"#utility.yul\":5948:5970   */\n  and\n    /* \"#utility.yul\":5998:6035   */\n  tag_125\n    /* \"#utility.yul\":6030:6034   */\n  dup7\n    /* \"#utility.yul\":5998:6035   */\n  tag_34\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6057:6058   */\n  0x00\n    /* \"#utility.yul\":6071:6279   */\ntag_126:\n    /* \"#utility.yul\":6085:6092   */\n  dup3\n    /* \"#utility.yul\":6082:6083   */\n  dup2\n    /* \"#utility.yul\":6079:6093   */\n  lt\n    /* \"#utility.yul\":6071:6279   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":6164:6173   */\n  dup5\n    /* \"#utility.yul\":6159:6162   */\n  dup10\n    /* \"#utility.yul\":6155:6174   */\n  add\n    /* \"#utility.yul\":6149:6175   */\n  mload\n    /* \"#utility.yul\":6141:6147   */\n  dup3\n    /* \"#utility.yul\":6134:6176   */\n  sstore\n    /* \"#utility.yul\":6215:6216   */\n  0x01\n    /* \"#utility.yul\":6207:6213   */\n  dup3\n    /* \"#utility.yul\":6203:6217   */\n  add\n    /* \"#utility.yul\":6193:6217   */\n  swap2\n  pop\n    /* \"#utility.yul\":6262:6264   */\n  0x20\n    /* \"#utility.yul\":6251:6260   */\n  dup6\n    /* \"#utility.yul\":6247:6265   */\n  add\n    /* \"#utility.yul\":6234:6265   */\n  swap5\n  pop\n    /* \"#utility.yul\":6108:6112   */\n  0x20\n    /* \"#utility.yul\":6105:6106   */\n  dup2\n    /* \"#utility.yul\":6101:6113   */\n  add\n    /* \"#utility.yul\":6096:6113   */\n  swap1\n  pop\n    /* \"#utility.yul\":6071:6279   */\n  jump(tag_126)\ntag_128:\n    /* \"#utility.yul\":6307:6313   */\n  dup7\n    /* \"#utility.yul\":6298:6305   */\n  dup4\n    /* \"#utility.yul\":6295:6314   */\n  lt\n    /* \"#utility.yul\":6292:6471   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":6365:6374   */\n  dup5\n    /* \"#utility.yul\":6360:6363   */\n  dup10\n    /* \"#utility.yul\":6356:6375   */\n  add\n    /* \"#utility.yul\":6350:6376   */\n  mload\n    /* \"#utility.yul\":6408:6456   */\n  tag_130\n    /* \"#utility.yul\":6450:6454   */\n  0x1f\n    /* \"#utility.yul\":6442:6448   */\n  dup10\n    /* \"#utility.yul\":6438:6455   */\n  and\n    /* \"#utility.yul\":6427:6436   */\n  dup3\n    /* \"#utility.yul\":6408:6456   */\n  tag_48\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6400:6406   */\n  dup4\n    /* \"#utility.yul\":6393:6457   */\n  sstore\n    /* \"#utility.yul\":6315:6471   */\n  pop\n    /* \"#utility.yul\":6292:6471   */\ntag_129:\n    /* \"#utility.yul\":6517:6518   */\n  0x01\n    /* \"#utility.yul\":6513:6514   */\n  0x02\n    /* \"#utility.yul\":6505:6511   */\n  dup9\n    /* \"#utility.yul\":6501:6515   */\n  mul\n    /* \"#utility.yul\":6497:6519   */\n  add\n    /* \"#utility.yul\":6491:6495   */\n  dup9\n    /* \"#utility.yul\":6484:6520   */\n  sstore\n    /* \"#utility.yul\":5919:6530   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5882:6769   */\ntag_121:\n  pop\n    /* \"#utility.yul\":5472:6775   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5380:6775   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/burnTest.sol\":251:476  contract MyToken is ERC1155, Ownable, ERC1155Burnable {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/burnTest.sol\":251:476  contract MyToken is ERC1155, Ownable, ERC1155Burnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xe985e9c5\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf5298aca\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x0e89341c\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6b20c454\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x02fe5305\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/burnTest.sol\":387:474  function setURI(string memory newuri) public onlyOwner {... */\n    tag_5:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":681:994  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_14:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":394:675  function burn(address account, uint256 id, uint256 value) public virtual {... */\n    tag_16:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2324:2331  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2359  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2360:2362  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2364:2371  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2343:2372  return _balances[id][account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1482:1486  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1532:1558  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1528  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_85\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1589:1626  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1585  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_86\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1666:1677  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1665  super.supportsInterface */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1678  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/burnTest.sol\":387:474  function setURI(string memory newuri) public onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_90:\n        /* \"contracts/burnTest.sol\":452:467  _setURI(newuri) */\n      tag_93\n        /* \"contracts/burnTest.sol\":460:466  newuri */\n      dup2\n        /* \"contracts/burnTest.sol\":452:459  _setURI */\n      tag_94\n        /* \"contracts/burnTest.sol\":452:467  _setURI(newuri) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/burnTest.sol\":387:474  function setURI(string memory newuri) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2144:2157  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2176:2180  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2169:2180  return _uri */\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_97\n      jump\t// in\n    tag_98:\n      dup1\n      iszero\n      tag_99\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_100\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_99)\n    tag_100:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_101:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_101\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4222  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4235  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4237  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4259:4265  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4255  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_105\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4287:4291  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4293:4299  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4286  isApprovedForAll */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4300  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4352:4358  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4360:4364  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap3\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4408:4412  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4414:4416  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4418:4421  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4423:4429  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4435  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4407  _safeBatchTransferFrom */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4198:4443  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2660:2676  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2714  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2721  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2700  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2707  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2721  accounts.length != ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n      tag_113\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2773  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2780  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2790  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2797  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2849  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2874  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2881  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2852:2882  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_116\n      jumpi\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n    tag_116:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_119\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_119:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2882  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2898:2907  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2925  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2932  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2914  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2932  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3011  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:2990  accounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3009  accounts.unsafeMemoryAccess */\n      tag_125\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3037:3038  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3017  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3036  ids.unsafeMemoryAccess */\n      tag_127\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:2981  balanceOf */\n      tag_23\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2966  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2967:2968  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2969  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_128\n      jumpi\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n    tag_128:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:3040  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2934:2937  ++i */\n      dup1\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_120)\n    tag_121:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3068:3081  batchBalances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3061:3081  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":681:994  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":804:816  _msgSender() */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":804:814  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":804:816  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:816  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:800  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:816  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:860  account != _msgSender() && !isApprovedForAll(account, _msgSender()) */\n      dup1\n      iszero\n      tag_135\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":821:860  isApprovedForAll(account, _msgSender()) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":838:845  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":847:859  _msgSender() */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":847:857  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":847:859  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":821:837  isApprovedForAll */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":821:860  isApprovedForAll(account, _msgSender()) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":820:860  !isApprovedForAll(account, _msgSender()) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:860  account != _msgSender() && !isApprovedForAll(account, _msgSender()) */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":789:945  if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":912:924  _msgSender() */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":912:922  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":912:924  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":926:933  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":883:934  ERC1155MissingApprovalForAll(_msgSender(), account) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap3\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":789:945  if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":955:987  _burnBatch(account, ids, values) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":966:973  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":975:978  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":980:986  values */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":955:965  _burnBatch */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":955:987  _burnBatch(account, ids, values) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":681:994  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3270  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3274:3282  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3284:3292  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3259  _setApprovalForAll */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3457:3461  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3498  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3499:3506  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3508:3516  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3517  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3728  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3741  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3743  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3765:3771  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3761  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_156\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3793:3797  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3805  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3792  isApprovedForAll */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3775:3806  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3858:3864  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3866:3870  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap3\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3909:3913  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3915:3917  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3919:3921  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3923:3928  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3930:3934  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3908  _safeTransferFrom */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3704:3942  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":394:675  function burn(address account, uint256 id, uint256 value) public virtual {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":492:504  _msgSender() */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":492:502  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":492:504  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:504  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:488  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:504  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:548  account != _msgSender() && !isApprovedForAll(account, _msgSender()) */\n      dup1\n      iszero\n      tag_170\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":509:548  isApprovedForAll(account, _msgSender()) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":526:533  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":535:547  _msgSender() */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":535:545  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":535:547  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":509:525  isApprovedForAll */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":509:548  isApprovedForAll(account, _msgSender()) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":508:548  !isApprovedForAll(account, _msgSender()) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:548  account != _msgSender() && !isApprovedForAll(account, _msgSender()) */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":477:633  if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":600:612  _msgSender() */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":600:610  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":600:612  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":614:621  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":571:622  ERC1155MissingApprovalForAll(_msgSender(), account) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap3\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":477:633  if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":643:668  _burn(account, id, value) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":649:656  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":658:660  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":662:667  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":643:648  _burn */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":643:668  _burn(account, id, value) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":394:675  function burn(address account, uint256 id, uint256 value) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n      swap1\n      dup2\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9222:9223  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9210  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9278:9279  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9321:9322  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9309  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9375:9376  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9425:9429  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9431:9433  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9435:9438  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9440:9446  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9448:9452  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9424  _updateWithAcceptanceCheck */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4689:4700  address res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4772:4775  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4761:4765  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4756:4759  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4752:4766  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4735:4784  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4290:4301  uint256 res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4378:4382  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4373:4376  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4369:4383  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4362:4366  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4357:4360  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4353:4367  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4349:4384  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4343:4385  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4336:4385  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12784:13049  function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12904:12905  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12888:12906  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12888:12892  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12888:12906  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12884:12972  if (from == address(0)) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12958:12959  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12929:12961  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12884:12972  if (from == address(0)) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12981:13042  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13008:13012  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13022:13023  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13026:13029  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13031:13037  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12981:13042  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12981:13007  _updateWithAcceptanceCheck */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12981:13042  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12784:13049  function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x03\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13395:13396  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13383  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13451:13452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      0xced3e10000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13512:13520  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13492  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13493:13498  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13500:13508  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13520  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13557:13565  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13550:13555  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13567:13575  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_206\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8287:8288  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8343:8344  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8386:8387  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8374  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8440:8441  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8464:8484  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8486:8509  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8532:8534  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8536:8541  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8531  _asSingletonArrays */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8463:8542  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8579:8583  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8585:8587  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8589:8592  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8594:8600  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8602:8606  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8578  _updateWithAcceptanceCheck */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8259:8614  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12099:12428  function _burn(address from, uint256 id, uint256 value) internal {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12194:12195  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12196  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12182  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12196  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12174:12262  if (from == address(0)) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12248:12249  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12219:12251  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12174:12262  if (from == address(0)) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12272:12292  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12294:12317  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12350  _asSingletonArrays(id, value) */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12340:12342  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12344:12349  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12339  _asSingletonArrays */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12350  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12271:12350  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12387:12391  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12401:12402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12405:12408  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12410:12416  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12386  _updateWithAcceptanceCheck */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12164:12428  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12099:12428  function _burn(address from, uint256 id, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7213:7217  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7219:7221  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7228:7234  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7263:7264  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7251  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7297  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7310  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7312  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7333  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7401:7402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7381  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7400  ids.unsafeMemoryAccess */\n      tag_127\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7403  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7463:7464  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7443  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7462  values.unsafeMemoryAccess */\n      tag_127\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7465  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7524:7528  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7530:7532  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7534:7536  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7538:7543  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7545:7549  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      jump(tag_230)\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7635:7639  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7641:7643  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7650:7656  values */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7658:7662  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7267:7688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16213:16236  uint256[] memory array2 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16358:16379  array1 := mload(0x40) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16436:16442  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16582:16590  element1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16567:16573  array1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16704:16708  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16696:16702  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16682:16709  array2 := add(array1, 0x40) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16737:16738  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16729:16735  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16778:16786  element2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16771:16775  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16763:16769  array2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16907:16911  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16899:16905  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16889:16893  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5285  values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5344  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5359  values */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5417  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5419  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5435:5444  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5451  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5495  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5521:5522  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5501  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5520  ids.unsafeMemoryAccess */\n      tag_127\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5523  uint256 id = ids.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5550  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5579:5580  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5559  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5578  values.unsafeMemoryAccess */\n      tag_127\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5581  uint256 value = values.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5616:5617  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5604  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5670:5672  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5674:5678  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5679  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5715:5720  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5712  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5778:5782  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5784:5795  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5797:5802  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5804:5806  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      0x03dee4c500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5978:5983  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5952:5954  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5956:5960  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5620:6016  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6048:6049  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6036  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6080:6082  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6084:6086  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      dup3\n      dup3\n      sload\n      tag_248\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5471:6121  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n      dup1\n      tag_250\n      swap1\n      tag_132\n      jump\t// in\n    tag_250:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_238)\n    tag_239:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6202:6203  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6182  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6201  ids.unsafeMemoryAccess */\n      tag_127\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6260:6261  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6240  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6259  values.unsafeMemoryAccess */\n      tag_127\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6262  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6312:6314  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6306:6310  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6316:6318  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6320:6325  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_254\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      jump(tag_255)\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6392:6394  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6386:6390  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6401:6407  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_256\n      swap3\n      swap2\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13984:13985  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13969  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n      iszero\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14022:14024  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14054:14058  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14060:14062  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14069  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14071:14075  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_262\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_263\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n      0x01\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_265\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_270\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_269)\n    tag_270:\n      0x60\n      swap2\n      pop\n    tag_269:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14487:14489  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14657:14663  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14651:14664  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14642:14648  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14638:14640  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14634:14649  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14627:14665  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14137:14180  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14133  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14273:14275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14077:14309  returns (bytes4 response) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15171:15172  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15156  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15168  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15172  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n      iszero\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15209:15211  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15235  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15244  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15246:15250  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15252:15255  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15257:15263  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15265:15269  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_281\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_282\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_282:\n      0x01\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_283\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_288\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_287)\n    tag_288:\n      0x60\n      swap2\n      pop\n    tag_287:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15606:15607  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15595  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15602  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15607  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15716:15718  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15693:15719  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15886:15892  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15880:15893  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15871:15877  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15867:15869  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15863:15878  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15856:15894  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15361:15409  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15357  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15502:15504  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15271:15538  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_295:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_296:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_297:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_298:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_299:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_371\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_298\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_300:\n        /* \"#utility.yul\":641:665   */\n      tag_373\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_299\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_374:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_301:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_376\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_300\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_302:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_303:\n        /* \"#utility.yul\":997:1021   */\n      tag_379\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_302\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_380:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_304:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_382\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_303\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_22:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_385\n      tag_296\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":1290:1409   */\n    tag_384:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_386\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_301\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_387\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_304\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_305:\n        /* \"#utility.yul\":1764:1788   */\n      tag_389\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_302\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_25:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_391\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_305\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_306:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_307:\n        /* \"#utility.yul\":2256:2279   */\n      tag_394\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_306\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_395:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_308:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_397\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_307\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_28:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_400\n      tag_296\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":2528:2647   */\n    tag_399:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_401\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_308\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_309:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_310:\n        /* \"#utility.yul\":2963:2984   */\n      tag_404\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_309\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_31:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_406\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_310\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3330   */\n    tag_311:\n        /* \"#utility.yul\":3322:3323   */\n      0x00\n        /* \"#utility.yul\":3319:3320   */\n      dup1\n        /* \"#utility.yul\":3312:3324   */\n      revert\n        /* \"#utility.yul\":3336:3453   */\n    tag_312:\n        /* \"#utility.yul\":3445:3446   */\n      0x00\n        /* \"#utility.yul\":3442:3443   */\n      dup1\n        /* \"#utility.yul\":3435:3447   */\n      revert\n        /* \"#utility.yul\":3459:3561   */\n    tag_313:\n        /* \"#utility.yul\":3500:3506   */\n      0x00\n        /* \"#utility.yul\":3551:3553   */\n      0x1f\n        /* \"#utility.yul\":3547:3554   */\n      not\n        /* \"#utility.yul\":3542:3544   */\n      0x1f\n        /* \"#utility.yul\":3535:3540   */\n      dup4\n        /* \"#utility.yul\":3531:3545   */\n      add\n        /* \"#utility.yul\":3527:3555   */\n      and\n        /* \"#utility.yul\":3517:3555   */\n      swap1\n      pop\n        /* \"#utility.yul\":3459:3561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3567:3747   */\n    tag_118:\n        /* \"#utility.yul\":3615:3692   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3612:3613   */\n      0x00\n        /* \"#utility.yul\":3605:3693   */\n      mstore\n        /* \"#utility.yul\":3712:3716   */\n      0x41\n        /* \"#utility.yul\":3709:3710   */\n      0x04\n        /* \"#utility.yul\":3702:3717   */\n      mstore\n        /* \"#utility.yul\":3736:3740   */\n      0x24\n        /* \"#utility.yul\":3733:3734   */\n      0x00\n        /* \"#utility.yul\":3726:3741   */\n      revert\n        /* \"#utility.yul\":3753:4034   */\n    tag_314:\n        /* \"#utility.yul\":3836:3863   */\n      tag_412\n        /* \"#utility.yul\":3858:3862   */\n      dup3\n        /* \"#utility.yul\":3836:3863   */\n      tag_313\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":3828:3834   */\n      dup2\n        /* \"#utility.yul\":3824:3864   */\n      add\n        /* \"#utility.yul\":3966:3972   */\n      dup2\n        /* \"#utility.yul\":3954:3964   */\n      dup2\n        /* \"#utility.yul\":3951:3973   */\n      lt\n        /* \"#utility.yul\":3930:3948   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3918:3928   */\n      dup3\n        /* \"#utility.yul\":3915:3949   */\n      gt\n        /* \"#utility.yul\":3912:3974   */\n      or\n        /* \"#utility.yul\":3909:3997   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":3977:3995   */\n      tag_414\n      tag_118\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":3909:3997   */\n    tag_413:\n        /* \"#utility.yul\":4017:4027   */\n      dup1\n        /* \"#utility.yul\":4013:4015   */\n      0x40\n        /* \"#utility.yul\":4006:4028   */\n      mstore\n        /* \"#utility.yul\":3796:4034   */\n      pop\n        /* \"#utility.yul\":3753:4034   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4040:4169   */\n    tag_315:\n        /* \"#utility.yul\":4074:4080   */\n      0x00\n        /* \"#utility.yul\":4101:4121   */\n      tag_416\n      tag_295\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":4091:4121   */\n      swap1\n      pop\n        /* \"#utility.yul\":4130:4163   */\n      tag_417\n        /* \"#utility.yul\":4158:4162   */\n      dup3\n        /* \"#utility.yul\":4150:4156   */\n      dup3\n        /* \"#utility.yul\":4130:4163   */\n      tag_314\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4040:4169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4175:4483   */\n    tag_316:\n        /* \"#utility.yul\":4237:4241   */\n      0x00\n        /* \"#utility.yul\":4327:4345   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4319:4325   */\n      dup3\n        /* \"#utility.yul\":4316:4346   */\n      gt\n        /* \"#utility.yul\":4313:4369   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":4349:4367   */\n      tag_420\n      tag_118\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":4313:4369   */\n    tag_419:\n        /* \"#utility.yul\":4387:4416   */\n      tag_421\n        /* \"#utility.yul\":4409:4415   */\n      dup3\n        /* \"#utility.yul\":4387:4416   */\n      tag_313\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":4379:4416   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4475   */\n      0x20\n        /* \"#utility.yul\":4465:4469   */\n      dup2\n        /* \"#utility.yul\":4461:4476   */\n      add\n        /* \"#utility.yul\":4453:4476   */\n      swap1\n      pop\n        /* \"#utility.yul\":4175:4483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4489:4635   */\n    tag_317:\n        /* \"#utility.yul\":4586:4592   */\n      dup3\n        /* \"#utility.yul\":4581:4584   */\n      dup2\n        /* \"#utility.yul\":4576:4579   */\n      dup4\n        /* \"#utility.yul\":4563:4593   */\n      calldatacopy\n        /* \"#utility.yul\":4627:4628   */\n      0x00\n        /* \"#utility.yul\":4618:4624   */\n      dup4\n        /* \"#utility.yul\":4613:4616   */\n      dup4\n        /* \"#utility.yul\":4609:4625   */\n      add\n        /* \"#utility.yul\":4602:4629   */\n      mstore\n        /* \"#utility.yul\":4489:4635   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4641:5066   */\n    tag_318:\n        /* \"#utility.yul\":4719:4724   */\n      0x00\n        /* \"#utility.yul\":4744:4810   */\n      tag_424\n        /* \"#utility.yul\":4760:4809   */\n      tag_425\n        /* \"#utility.yul\":4802:4808   */\n      dup5\n        /* \"#utility.yul\":4760:4809   */\n      tag_316\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":4744:4810   */\n      tag_315\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":4735:4810   */\n      swap1\n      pop\n        /* \"#utility.yul\":4833:4839   */\n      dup3\n        /* \"#utility.yul\":4826:4831   */\n      dup2\n        /* \"#utility.yul\":4819:4840   */\n      mstore\n        /* \"#utility.yul\":4871:4875   */\n      0x20\n        /* \"#utility.yul\":4864:4869   */\n      dup2\n        /* \"#utility.yul\":4860:4876   */\n      add\n        /* \"#utility.yul\":4909:4912   */\n      dup5\n        /* \"#utility.yul\":4900:4906   */\n      dup5\n        /* \"#utility.yul\":4895:4898   */\n      dup5\n        /* \"#utility.yul\":4891:4907   */\n      add\n        /* \"#utility.yul\":4888:4913   */\n      gt\n        /* \"#utility.yul\":4885:4997   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":4916:4995   */\n      tag_427\n      tag_312\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":4885:4997   */\n    tag_426:\n        /* \"#utility.yul\":5006:5060   */\n      tag_428\n        /* \"#utility.yul\":5053:5059   */\n      dup5\n        /* \"#utility.yul\":5048:5051   */\n      dup3\n        /* \"#utility.yul\":5043:5046   */\n      dup6\n        /* \"#utility.yul\":5006:5060   */\n      tag_317\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":4725:5066   */\n      pop\n        /* \"#utility.yul\":4641:5066   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5086:5426   */\n    tag_319:\n        /* \"#utility.yul\":5142:5147   */\n      0x00\n        /* \"#utility.yul\":5191:5194   */\n      dup3\n        /* \"#utility.yul\":5184:5188   */\n      0x1f\n        /* \"#utility.yul\":5176:5182   */\n      dup4\n        /* \"#utility.yul\":5172:5189   */\n      add\n        /* \"#utility.yul\":5168:5195   */\n      slt\n        /* \"#utility.yul\":5158:5280   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":5199:5278   */\n      tag_431\n      tag_311\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":5158:5280   */\n    tag_430:\n        /* \"#utility.yul\":5316:5322   */\n      dup2\n        /* \"#utility.yul\":5303:5323   */\n      calldataload\n        /* \"#utility.yul\":5341:5420   */\n      tag_432\n        /* \"#utility.yul\":5416:5419   */\n      dup5\n        /* \"#utility.yul\":5408:5414   */\n      dup3\n        /* \"#utility.yul\":5401:5405   */\n      0x20\n        /* \"#utility.yul\":5393:5399   */\n      dup7\n        /* \"#utility.yul\":5389:5406   */\n      add\n        /* \"#utility.yul\":5341:5420   */\n      tag_318\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":5332:5420   */\n      swap2\n      pop\n        /* \"#utility.yul\":5148:5426   */\n      pop\n        /* \"#utility.yul\":5086:5426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5432:5941   */\n    tag_34:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5550:5552   */\n      0x20\n        /* \"#utility.yul\":5538:5547   */\n      dup3\n        /* \"#utility.yul\":5529:5536   */\n      dup5\n        /* \"#utility.yul\":5525:5548   */\n      sub\n        /* \"#utility.yul\":5521:5553   */\n      slt\n        /* \"#utility.yul\":5518:5637   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":5556:5635   */\n      tag_435\n      tag_296\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":5518:5637   */\n    tag_434:\n        /* \"#utility.yul\":5704:5705   */\n      0x00\n        /* \"#utility.yul\":5693:5702   */\n      dup3\n        /* \"#utility.yul\":5689:5706   */\n      add\n        /* \"#utility.yul\":5676:5707   */\n      calldataload\n        /* \"#utility.yul\":5734:5752   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5726:5732   */\n      dup2\n        /* \"#utility.yul\":5723:5753   */\n      gt\n        /* \"#utility.yul\":5720:5837   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":5756:5835   */\n      tag_437\n      tag_297\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":5720:5837   */\n    tag_436:\n        /* \"#utility.yul\":5861:5924   */\n      tag_438\n        /* \"#utility.yul\":5916:5923   */\n      dup5\n        /* \"#utility.yul\":5907:5913   */\n      dup3\n        /* \"#utility.yul\":5896:5905   */\n      dup6\n        /* \"#utility.yul\":5892:5914   */\n      add\n        /* \"#utility.yul\":5861:5924   */\n      tag_319\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":5851:5924   */\n      swap2\n      pop\n        /* \"#utility.yul\":5647:5934   */\n      pop\n        /* \"#utility.yul\":5432:5941   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5947:6276   */\n    tag_38:\n        /* \"#utility.yul\":6006:6012   */\n      0x00\n        /* \"#utility.yul\":6055:6057   */\n      0x20\n        /* \"#utility.yul\":6043:6052   */\n      dup3\n        /* \"#utility.yul\":6034:6041   */\n      dup5\n        /* \"#utility.yul\":6030:6053   */\n      sub\n        /* \"#utility.yul\":6026:6058   */\n      slt\n        /* \"#utility.yul\":6023:6142   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":6061:6140   */\n      tag_441\n      tag_296\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":6023:6142   */\n    tag_440:\n        /* \"#utility.yul\":6181:6182   */\n      0x00\n        /* \"#utility.yul\":6206:6259   */\n      tag_442\n        /* \"#utility.yul\":6251:6258   */\n      dup5\n        /* \"#utility.yul\":6242:6248   */\n      dup3\n        /* \"#utility.yul\":6231:6240   */\n      dup6\n        /* \"#utility.yul\":6227:6249   */\n      add\n        /* \"#utility.yul\":6206:6259   */\n      tag_304\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":6196:6259   */\n      swap2\n      pop\n        /* \"#utility.yul\":6152:6269   */\n      pop\n        /* \"#utility.yul\":5947:6276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6282:6381   */\n    tag_320:\n        /* \"#utility.yul\":6334:6340   */\n      0x00\n        /* \"#utility.yul\":6368:6373   */\n      dup2\n        /* \"#utility.yul\":6362:6374   */\n      mload\n        /* \"#utility.yul\":6352:6374   */\n      swap1\n      pop\n        /* \"#utility.yul\":6282:6381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6387:6556   */\n    tag_321:\n        /* \"#utility.yul\":6471:6482   */\n      0x00\n        /* \"#utility.yul\":6505:6511   */\n      dup3\n        /* \"#utility.yul\":6500:6503   */\n      dup3\n        /* \"#utility.yul\":6493:6512   */\n      mstore\n        /* \"#utility.yul\":6545:6549   */\n      0x20\n        /* \"#utility.yul\":6540:6543   */\n      dup3\n        /* \"#utility.yul\":6536:6550   */\n      add\n        /* \"#utility.yul\":6521:6550   */\n      swap1\n      pop\n        /* \"#utility.yul\":6387:6556   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6562:6808   */\n    tag_322:\n        /* \"#utility.yul\":6643:6644   */\n      0x00\n        /* \"#utility.yul\":6653:6766   */\n    tag_446:\n        /* \"#utility.yul\":6667:6673   */\n      dup4\n        /* \"#utility.yul\":6664:6665   */\n      dup2\n        /* \"#utility.yul\":6661:6674   */\n      lt\n        /* \"#utility.yul\":6653:6766   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":6752:6753   */\n      dup1\n        /* \"#utility.yul\":6747:6750   */\n      dup3\n        /* \"#utility.yul\":6743:6754   */\n      add\n        /* \"#utility.yul\":6737:6755   */\n      mload\n        /* \"#utility.yul\":6733:6734   */\n      dup2\n        /* \"#utility.yul\":6728:6731   */\n      dup5\n        /* \"#utility.yul\":6724:6735   */\n      add\n        /* \"#utility.yul\":6717:6756   */\n      mstore\n        /* \"#utility.yul\":6689:6691   */\n      0x20\n        /* \"#utility.yul\":6686:6687   */\n      dup2\n        /* \"#utility.yul\":6682:6692   */\n      add\n        /* \"#utility.yul\":6677:6692   */\n      swap1\n      pop\n        /* \"#utility.yul\":6653:6766   */\n      jump(tag_446)\n    tag_448:\n        /* \"#utility.yul\":6800:6801   */\n      0x00\n        /* \"#utility.yul\":6791:6797   */\n      dup5\n        /* \"#utility.yul\":6786:6789   */\n      dup5\n        /* \"#utility.yul\":6782:6798   */\n      add\n        /* \"#utility.yul\":6775:6802   */\n      mstore\n        /* \"#utility.yul\":6624:6808   */\n      pop\n        /* \"#utility.yul\":6562:6808   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6814:7191   */\n    tag_323:\n        /* \"#utility.yul\":6902:6905   */\n      0x00\n        /* \"#utility.yul\":6930:6969   */\n      tag_450\n        /* \"#utility.yul\":6963:6968   */\n      dup3\n        /* \"#utility.yul\":6930:6969   */\n      tag_320\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":6985:7056   */\n      tag_451\n        /* \"#utility.yul\":7049:7055   */\n      dup2\n        /* \"#utility.yul\":7044:7047   */\n      dup6\n        /* \"#utility.yul\":6985:7056   */\n      tag_321\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":6978:7056   */\n      swap4\n      pop\n        /* \"#utility.yul\":7065:7130   */\n      tag_452\n        /* \"#utility.yul\":7123:7129   */\n      dup2\n        /* \"#utility.yul\":7118:7121   */\n      dup6\n        /* \"#utility.yul\":7111:7115   */\n      0x20\n        /* \"#utility.yul\":7104:7109   */\n      dup7\n        /* \"#utility.yul\":7100:7116   */\n      add\n        /* \"#utility.yul\":7065:7130   */\n      tag_322\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":7155:7184   */\n      tag_453\n        /* \"#utility.yul\":7177:7183   */\n      dup2\n        /* \"#utility.yul\":7155:7184   */\n      tag_313\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":7150:7153   */\n      dup5\n        /* \"#utility.yul\":7146:7185   */\n      add\n        /* \"#utility.yul\":7139:7185   */\n      swap2\n      pop\n        /* \"#utility.yul\":6906:7191   */\n      pop\n        /* \"#utility.yul\":6814:7191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7197:7510   */\n    tag_41:\n        /* \"#utility.yul\":7310:7314   */\n      0x00\n        /* \"#utility.yul\":7348:7350   */\n      0x20\n        /* \"#utility.yul\":7337:7346   */\n      dup3\n        /* \"#utility.yul\":7333:7351   */\n      add\n        /* \"#utility.yul\":7325:7351   */\n      swap1\n      pop\n        /* \"#utility.yul\":7397:7406   */\n      dup2\n        /* \"#utility.yul\":7391:7395   */\n      dup2\n        /* \"#utility.yul\":7387:7407   */\n      sub\n        /* \"#utility.yul\":7383:7384   */\n      0x00\n        /* \"#utility.yul\":7372:7381   */\n      dup4\n        /* \"#utility.yul\":7368:7385   */\n      add\n        /* \"#utility.yul\":7361:7408   */\n      mstore\n        /* \"#utility.yul\":7425:7503   */\n      tag_455\n        /* \"#utility.yul\":7498:7502   */\n      dup2\n        /* \"#utility.yul\":7489:7495   */\n      dup5\n        /* \"#utility.yul\":7425:7503   */\n      tag_323\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":7417:7503   */\n      swap1\n      pop\n        /* \"#utility.yul\":7197:7510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7516:7827   */\n    tag_324:\n        /* \"#utility.yul\":7593:7597   */\n      0x00\n        /* \"#utility.yul\":7683:7701   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7675:7681   */\n      dup3\n        /* \"#utility.yul\":7672:7702   */\n      gt\n        /* \"#utility.yul\":7669:7725   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":7705:7723   */\n      tag_458\n      tag_118\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":7669:7725   */\n    tag_457:\n        /* \"#utility.yul\":7755:7759   */\n      0x20\n        /* \"#utility.yul\":7747:7753   */\n      dup3\n        /* \"#utility.yul\":7743:7760   */\n      mul\n        /* \"#utility.yul\":7735:7760   */\n      swap1\n      pop\n        /* \"#utility.yul\":7815:7819   */\n      0x20\n        /* \"#utility.yul\":7809:7813   */\n      dup2\n        /* \"#utility.yul\":7805:7820   */\n      add\n        /* \"#utility.yul\":7797:7820   */\n      swap1\n      pop\n        /* \"#utility.yul\":7516:7827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7833:7950   */\n    tag_325:\n        /* \"#utility.yul\":7942:7943   */\n      0x00\n        /* \"#utility.yul\":7939:7940   */\n      dup1\n        /* \"#utility.yul\":7932:7944   */\n      revert\n        /* \"#utility.yul\":7973:8683   */\n    tag_326:\n        /* \"#utility.yul\":8069:8074   */\n      0x00\n        /* \"#utility.yul\":8094:8175   */\n      tag_461\n        /* \"#utility.yul\":8110:8174   */\n      tag_462\n        /* \"#utility.yul\":8167:8173   */\n      dup5\n        /* \"#utility.yul\":8110:8174   */\n      tag_324\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":8094:8175   */\n      tag_315\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":8085:8175   */\n      swap1\n      pop\n        /* \"#utility.yul\":8195:8200   */\n      dup1\n        /* \"#utility.yul\":8224:8230   */\n      dup4\n        /* \"#utility.yul\":8217:8222   */\n      dup3\n        /* \"#utility.yul\":8210:8231   */\n      mstore\n        /* \"#utility.yul\":8258:8262   */\n      0x20\n        /* \"#utility.yul\":8251:8256   */\n      dup3\n        /* \"#utility.yul\":8247:8263   */\n      add\n        /* \"#utility.yul\":8240:8263   */\n      swap1\n      pop\n        /* \"#utility.yul\":8311:8315   */\n      0x20\n        /* \"#utility.yul\":8303:8309   */\n      dup5\n        /* \"#utility.yul\":8299:8316   */\n      mul\n        /* \"#utility.yul\":8291:8297   */\n      dup4\n        /* \"#utility.yul\":8287:8317   */\n      add\n        /* \"#utility.yul\":8340:8343   */\n      dup6\n        /* \"#utility.yul\":8332:8338   */\n      dup2\n        /* \"#utility.yul\":8329:8344   */\n      gt\n        /* \"#utility.yul\":8326:8448   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":8359:8438   */\n      tag_464\n      tag_325\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":8326:8448   */\n    tag_463:\n        /* \"#utility.yul\":8474:8480   */\n      dup4\n        /* \"#utility.yul\":8457:8677   */\n    tag_465:\n        /* \"#utility.yul\":8491:8497   */\n      dup2\n        /* \"#utility.yul\":8486:8489   */\n      dup2\n        /* \"#utility.yul\":8483:8498   */\n      lt\n        /* \"#utility.yul\":8457:8677   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":8566:8569   */\n      dup1\n        /* \"#utility.yul\":8595:8632   */\n      tag_468\n        /* \"#utility.yul\":8628:8631   */\n      dup9\n        /* \"#utility.yul\":8616:8626   */\n      dup3\n        /* \"#utility.yul\":8595:8632   */\n      tag_304\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":8590:8593   */\n      dup5\n        /* \"#utility.yul\":8583:8633   */\n      mstore\n        /* \"#utility.yul\":8662:8666   */\n      0x20\n        /* \"#utility.yul\":8657:8660   */\n      dup5\n        /* \"#utility.yul\":8653:8667   */\n      add\n        /* \"#utility.yul\":8646:8667   */\n      swap4\n      pop\n        /* \"#utility.yul\":8533:8677   */\n      pop\n        /* \"#utility.yul\":8517:8521   */\n      0x20\n        /* \"#utility.yul\":8512:8515   */\n      dup2\n        /* \"#utility.yul\":8508:8522   */\n      add\n        /* \"#utility.yul\":8501:8522   */\n      swap1\n      pop\n        /* \"#utility.yul\":8457:8677   */\n      jump(tag_465)\n    tag_467:\n        /* \"#utility.yul\":8461:8482   */\n      pop\n        /* \"#utility.yul\":8075:8683   */\n      pop\n      pop\n        /* \"#utility.yul\":7973:8683   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8706:9076   */\n    tag_327:\n        /* \"#utility.yul\":8777:8782   */\n      0x00\n        /* \"#utility.yul\":8826:8829   */\n      dup3\n        /* \"#utility.yul\":8819:8823   */\n      0x1f\n        /* \"#utility.yul\":8811:8817   */\n      dup4\n        /* \"#utility.yul\":8807:8824   */\n      add\n        /* \"#utility.yul\":8803:8830   */\n      slt\n        /* \"#utility.yul\":8793:8915   */\n      tag_470\n      jumpi\n        /* \"#utility.yul\":8834:8913   */\n      tag_471\n      tag_311\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":8793:8915   */\n    tag_470:\n        /* \"#utility.yul\":8951:8957   */\n      dup2\n        /* \"#utility.yul\":8938:8958   */\n      calldataload\n        /* \"#utility.yul\":8976:9070   */\n      tag_472\n        /* \"#utility.yul\":9066:9069   */\n      dup5\n        /* \"#utility.yul\":9058:9064   */\n      dup3\n        /* \"#utility.yul\":9051:9055   */\n      0x20\n        /* \"#utility.yul\":9043:9049   */\n      dup7\n        /* \"#utility.yul\":9039:9056   */\n      add\n        /* \"#utility.yul\":8976:9070   */\n      tag_326\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":8967:9070   */\n      swap2\n      pop\n        /* \"#utility.yul\":8783:9076   */\n      pop\n        /* \"#utility.yul\":8706:9076   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9082:9389   */\n    tag_328:\n        /* \"#utility.yul\":9143:9147   */\n      0x00\n        /* \"#utility.yul\":9233:9251   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9225:9231   */\n      dup3\n        /* \"#utility.yul\":9222:9252   */\n      gt\n        /* \"#utility.yul\":9219:9275   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":9255:9273   */\n      tag_475\n      tag_118\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":9219:9275   */\n    tag_474:\n        /* \"#utility.yul\":9293:9322   */\n      tag_476\n        /* \"#utility.yul\":9315:9321   */\n      dup3\n        /* \"#utility.yul\":9293:9322   */\n      tag_313\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":9285:9322   */\n      swap1\n      pop\n        /* \"#utility.yul\":9377:9381   */\n      0x20\n        /* \"#utility.yul\":9371:9375   */\n      dup2\n        /* \"#utility.yul\":9367:9382   */\n      add\n        /* \"#utility.yul\":9359:9382   */\n      swap1\n      pop\n        /* \"#utility.yul\":9082:9389   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9395:9818   */\n    tag_329:\n        /* \"#utility.yul\":9472:9477   */\n      0x00\n        /* \"#utility.yul\":9497:9562   */\n      tag_478\n        /* \"#utility.yul\":9513:9561   */\n      tag_479\n        /* \"#utility.yul\":9554:9560   */\n      dup5\n        /* \"#utility.yul\":9513:9561   */\n      tag_328\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":9497:9562   */\n      tag_315\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":9488:9562   */\n      swap1\n      pop\n        /* \"#utility.yul\":9585:9591   */\n      dup3\n        /* \"#utility.yul\":9578:9583   */\n      dup2\n        /* \"#utility.yul\":9571:9592   */\n      mstore\n        /* \"#utility.yul\":9623:9627   */\n      0x20\n        /* \"#utility.yul\":9616:9621   */\n      dup2\n        /* \"#utility.yul\":9612:9628   */\n      add\n        /* \"#utility.yul\":9661:9664   */\n      dup5\n        /* \"#utility.yul\":9652:9658   */\n      dup5\n        /* \"#utility.yul\":9647:9650   */\n      dup5\n        /* \"#utility.yul\":9643:9659   */\n      add\n        /* \"#utility.yul\":9640:9665   */\n      gt\n        /* \"#utility.yul\":9637:9749   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":9668:9747   */\n      tag_481\n      tag_312\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":9637:9749   */\n    tag_480:\n        /* \"#utility.yul\":9758:9812   */\n      tag_482\n        /* \"#utility.yul\":9805:9811   */\n      dup5\n        /* \"#utility.yul\":9800:9803   */\n      dup3\n        /* \"#utility.yul\":9795:9798   */\n      dup6\n        /* \"#utility.yul\":9758:9812   */\n      tag_317\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":9478:9818   */\n      pop\n        /* \"#utility.yul\":9395:9818   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9837:10175   */\n    tag_330:\n        /* \"#utility.yul\":9892:9897   */\n      0x00\n        /* \"#utility.yul\":9941:9944   */\n      dup3\n        /* \"#utility.yul\":9934:9938   */\n      0x1f\n        /* \"#utility.yul\":9926:9932   */\n      dup4\n        /* \"#utility.yul\":9922:9939   */\n      add\n        /* \"#utility.yul\":9918:9945   */\n      slt\n        /* \"#utility.yul\":9908:10030   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":9949:10028   */\n      tag_485\n      tag_311\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":9908:10030   */\n    tag_484:\n        /* \"#utility.yul\":10066:10072   */\n      dup2\n        /* \"#utility.yul\":10053:10073   */\n      calldataload\n        /* \"#utility.yul\":10091:10169   */\n      tag_486\n        /* \"#utility.yul\":10165:10168   */\n      dup5\n        /* \"#utility.yul\":10157:10163   */\n      dup3\n        /* \"#utility.yul\":10150:10154   */\n      0x20\n        /* \"#utility.yul\":10142:10148   */\n      dup7\n        /* \"#utility.yul\":10138:10155   */\n      add\n        /* \"#utility.yul\":10091:10169   */\n      tag_329\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":10082:10169   */\n      swap2\n      pop\n        /* \"#utility.yul\":9898:10175   */\n      pop\n        /* \"#utility.yul\":9837:10175   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10181:11690   */\n    tag_44:\n        /* \"#utility.yul\":10335:10341   */\n      0x00\n        /* \"#utility.yul\":10343:10349   */\n      dup1\n        /* \"#utility.yul\":10351:10357   */\n      0x00\n        /* \"#utility.yul\":10359:10365   */\n      dup1\n        /* \"#utility.yul\":10367:10373   */\n      0x00\n        /* \"#utility.yul\":10416:10419   */\n      0xa0\n        /* \"#utility.yul\":10404:10413   */\n      dup7\n        /* \"#utility.yul\":10395:10402   */\n      dup9\n        /* \"#utility.yul\":10391:10414   */\n      sub\n        /* \"#utility.yul\":10387:10420   */\n      slt\n        /* \"#utility.yul\":10384:10504   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":10423:10502   */\n      tag_489\n      tag_296\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":10384:10504   */\n    tag_488:\n        /* \"#utility.yul\":10543:10544   */\n      0x00\n        /* \"#utility.yul\":10568:10621   */\n      tag_490\n        /* \"#utility.yul\":10613:10620   */\n      dup9\n        /* \"#utility.yul\":10604:10610   */\n      dup3\n        /* \"#utility.yul\":10593:10602   */\n      dup10\n        /* \"#utility.yul\":10589:10611   */\n      add\n        /* \"#utility.yul\":10568:10621   */\n      tag_301\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":10558:10621   */\n      swap6\n      pop\n        /* \"#utility.yul\":10514:10631   */\n      pop\n        /* \"#utility.yul\":10670:10672   */\n      0x20\n        /* \"#utility.yul\":10696:10749   */\n      tag_491\n        /* \"#utility.yul\":10741:10748   */\n      dup9\n        /* \"#utility.yul\":10732:10738   */\n      dup3\n        /* \"#utility.yul\":10721:10730   */\n      dup10\n        /* \"#utility.yul\":10717:10739   */\n      add\n        /* \"#utility.yul\":10696:10749   */\n      tag_301\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":10686:10749   */\n      swap5\n      pop\n        /* \"#utility.yul\":10641:10759   */\n      pop\n        /* \"#utility.yul\":10826:10828   */\n      0x40\n        /* \"#utility.yul\":10815:10824   */\n      dup7\n        /* \"#utility.yul\":10811:10829   */\n      add\n        /* \"#utility.yul\":10798:10830   */\n      calldataload\n        /* \"#utility.yul\":10857:10875   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10849:10855   */\n      dup2\n        /* \"#utility.yul\":10846:10876   */\n      gt\n        /* \"#utility.yul\":10843:10960   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":10879:10958   */\n      tag_493\n      tag_297\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":10843:10960   */\n    tag_492:\n        /* \"#utility.yul\":10984:11062   */\n      tag_494\n        /* \"#utility.yul\":11054:11061   */\n      dup9\n        /* \"#utility.yul\":11045:11051   */\n      dup3\n        /* \"#utility.yul\":11034:11043   */\n      dup10\n        /* \"#utility.yul\":11030:11052   */\n      add\n        /* \"#utility.yul\":10984:11062   */\n      tag_327\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":10974:11062   */\n      swap4\n      pop\n        /* \"#utility.yul\":10769:11072   */\n      pop\n        /* \"#utility.yul\":11139:11141   */\n      0x60\n        /* \"#utility.yul\":11128:11137   */\n      dup7\n        /* \"#utility.yul\":11124:11142   */\n      add\n        /* \"#utility.yul\":11111:11143   */\n      calldataload\n        /* \"#utility.yul\":11170:11188   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11162:11168   */\n      dup2\n        /* \"#utility.yul\":11159:11189   */\n      gt\n        /* \"#utility.yul\":11156:11273   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":11192:11271   */\n      tag_496\n      tag_297\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":11156:11273   */\n    tag_495:\n        /* \"#utility.yul\":11297:11375   */\n      tag_497\n        /* \"#utility.yul\":11367:11374   */\n      dup9\n        /* \"#utility.yul\":11358:11364   */\n      dup3\n        /* \"#utility.yul\":11347:11356   */\n      dup10\n        /* \"#utility.yul\":11343:11365   */\n      add\n        /* \"#utility.yul\":11297:11375   */\n      tag_327\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":11287:11375   */\n      swap3\n      pop\n        /* \"#utility.yul\":11082:11385   */\n      pop\n        /* \"#utility.yul\":11452:11455   */\n      0x80\n        /* \"#utility.yul\":11441:11450   */\n      dup7\n        /* \"#utility.yul\":11437:11456   */\n      add\n        /* \"#utility.yul\":11424:11457   */\n      calldataload\n        /* \"#utility.yul\":11484:11502   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11476:11482   */\n      dup2\n        /* \"#utility.yul\":11473:11503   */\n      gt\n        /* \"#utility.yul\":11470:11587   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":11506:11585   */\n      tag_499\n      tag_297\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":11470:11587   */\n    tag_498:\n        /* \"#utility.yul\":11611:11673   */\n      tag_500\n        /* \"#utility.yul\":11665:11672   */\n      dup9\n        /* \"#utility.yul\":11656:11662   */\n      dup3\n        /* \"#utility.yul\":11645:11654   */\n      dup10\n        /* \"#utility.yul\":11641:11663   */\n      add\n        /* \"#utility.yul\":11611:11673   */\n      tag_330\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":11601:11673   */\n      swap2\n      pop\n        /* \"#utility.yul\":11395:11683   */\n      pop\n        /* \"#utility.yul\":10181:11690   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11696:12007   */\n    tag_331:\n        /* \"#utility.yul\":11773:11777   */\n      0x00\n        /* \"#utility.yul\":11863:11881   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11855:11861   */\n      dup3\n        /* \"#utility.yul\":11852:11882   */\n      gt\n        /* \"#utility.yul\":11849:11905   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":11885:11903   */\n      tag_503\n      tag_118\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":11849:11905   */\n    tag_502:\n        /* \"#utility.yul\":11935:11939   */\n      0x20\n        /* \"#utility.yul\":11927:11933   */\n      dup3\n        /* \"#utility.yul\":11923:11940   */\n      mul\n        /* \"#utility.yul\":11915:11940   */\n      swap1\n      pop\n        /* \"#utility.yul\":11995:11999   */\n      0x20\n        /* \"#utility.yul\":11989:11993   */\n      dup2\n        /* \"#utility.yul\":11985:12000   */\n      add\n        /* \"#utility.yul\":11977:12000   */\n      swap1\n      pop\n        /* \"#utility.yul\":11696:12007   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12030:12740   */\n    tag_332:\n        /* \"#utility.yul\":12126:12131   */\n      0x00\n        /* \"#utility.yul\":12151:12232   */\n      tag_505\n        /* \"#utility.yul\":12167:12231   */\n      tag_506\n        /* \"#utility.yul\":12224:12230   */\n      dup5\n        /* \"#utility.yul\":12167:12231   */\n      tag_331\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":12151:12232   */\n      tag_315\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":12142:12232   */\n      swap1\n      pop\n        /* \"#utility.yul\":12252:12257   */\n      dup1\n        /* \"#utility.yul\":12281:12287   */\n      dup4\n        /* \"#utility.yul\":12274:12279   */\n      dup3\n        /* \"#utility.yul\":12267:12288   */\n      mstore\n        /* \"#utility.yul\":12315:12319   */\n      0x20\n        /* \"#utility.yul\":12308:12313   */\n      dup3\n        /* \"#utility.yul\":12304:12320   */\n      add\n        /* \"#utility.yul\":12297:12320   */\n      swap1\n      pop\n        /* \"#utility.yul\":12368:12372   */\n      0x20\n        /* \"#utility.yul\":12360:12366   */\n      dup5\n        /* \"#utility.yul\":12356:12373   */\n      mul\n        /* \"#utility.yul\":12348:12354   */\n      dup4\n        /* \"#utility.yul\":12344:12374   */\n      add\n        /* \"#utility.yul\":12397:12400   */\n      dup6\n        /* \"#utility.yul\":12389:12395   */\n      dup2\n        /* \"#utility.yul\":12386:12401   */\n      gt\n        /* \"#utility.yul\":12383:12505   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":12416:12495   */\n      tag_508\n      tag_325\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":12383:12505   */\n    tag_507:\n        /* \"#utility.yul\":12531:12537   */\n      dup4\n        /* \"#utility.yul\":12514:12734   */\n    tag_509:\n        /* \"#utility.yul\":12548:12554   */\n      dup2\n        /* \"#utility.yul\":12543:12546   */\n      dup2\n        /* \"#utility.yul\":12540:12555   */\n      lt\n        /* \"#utility.yul\":12514:12734   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":12623:12626   */\n      dup1\n        /* \"#utility.yul\":12652:12689   */\n      tag_512\n        /* \"#utility.yul\":12685:12688   */\n      dup9\n        /* \"#utility.yul\":12673:12683   */\n      dup3\n        /* \"#utility.yul\":12652:12689   */\n      tag_301\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":12647:12650   */\n      dup5\n        /* \"#utility.yul\":12640:12690   */\n      mstore\n        /* \"#utility.yul\":12719:12723   */\n      0x20\n        /* \"#utility.yul\":12714:12717   */\n      dup5\n        /* \"#utility.yul\":12710:12724   */\n      add\n        /* \"#utility.yul\":12703:12724   */\n      swap4\n      pop\n        /* \"#utility.yul\":12590:12734   */\n      pop\n        /* \"#utility.yul\":12574:12578   */\n      0x20\n        /* \"#utility.yul\":12569:12572   */\n      dup2\n        /* \"#utility.yul\":12565:12579   */\n      add\n        /* \"#utility.yul\":12558:12579   */\n      swap1\n      pop\n        /* \"#utility.yul\":12514:12734   */\n      jump(tag_509)\n    tag_511:\n        /* \"#utility.yul\":12518:12539   */\n      pop\n        /* \"#utility.yul\":12132:12740   */\n      pop\n      pop\n        /* \"#utility.yul\":12030:12740   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12763:13133   */\n    tag_333:\n        /* \"#utility.yul\":12834:12839   */\n      0x00\n        /* \"#utility.yul\":12883:12886   */\n      dup3\n        /* \"#utility.yul\":12876:12880   */\n      0x1f\n        /* \"#utility.yul\":12868:12874   */\n      dup4\n        /* \"#utility.yul\":12864:12881   */\n      add\n        /* \"#utility.yul\":12860:12887   */\n      slt\n        /* \"#utility.yul\":12850:12972   */\n      tag_514\n      jumpi\n        /* \"#utility.yul\":12891:12970   */\n      tag_515\n      tag_311\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":12850:12972   */\n    tag_514:\n        /* \"#utility.yul\":13008:13014   */\n      dup2\n        /* \"#utility.yul\":12995:13015   */\n      calldataload\n        /* \"#utility.yul\":13033:13127   */\n      tag_516\n        /* \"#utility.yul\":13123:13126   */\n      dup5\n        /* \"#utility.yul\":13115:13121   */\n      dup3\n        /* \"#utility.yul\":13108:13112   */\n      0x20\n        /* \"#utility.yul\":13100:13106   */\n      dup7\n        /* \"#utility.yul\":13096:13113   */\n      add\n        /* \"#utility.yul\":13033:13127   */\n      tag_332\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":13024:13127   */\n      swap2\n      pop\n        /* \"#utility.yul\":12840:13133   */\n      pop\n        /* \"#utility.yul\":12763:13133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13139:14033   */\n    tag_48:\n        /* \"#utility.yul\":13257:13263   */\n      0x00\n        /* \"#utility.yul\":13265:13271   */\n      dup1\n        /* \"#utility.yul\":13314:13316   */\n      0x40\n        /* \"#utility.yul\":13302:13311   */\n      dup4\n        /* \"#utility.yul\":13293:13300   */\n      dup6\n        /* \"#utility.yul\":13289:13312   */\n      sub\n        /* \"#utility.yul\":13285:13317   */\n      slt\n        /* \"#utility.yul\":13282:13401   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":13320:13399   */\n      tag_519\n      tag_296\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":13282:13401   */\n    tag_518:\n        /* \"#utility.yul\":13468:13469   */\n      0x00\n        /* \"#utility.yul\":13457:13466   */\n      dup4\n        /* \"#utility.yul\":13453:13470   */\n      add\n        /* \"#utility.yul\":13440:13471   */\n      calldataload\n        /* \"#utility.yul\":13498:13516   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13490:13496   */\n      dup2\n        /* \"#utility.yul\":13487:13517   */\n      gt\n        /* \"#utility.yul\":13484:13601   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":13520:13599   */\n      tag_521\n      tag_297\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":13484:13601   */\n    tag_520:\n        /* \"#utility.yul\":13625:13703   */\n      tag_522\n        /* \"#utility.yul\":13695:13702   */\n      dup6\n        /* \"#utility.yul\":13686:13692   */\n      dup3\n        /* \"#utility.yul\":13675:13684   */\n      dup7\n        /* \"#utility.yul\":13671:13693   */\n      add\n        /* \"#utility.yul\":13625:13703   */\n      tag_333\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":13615:13703   */\n      swap3\n      pop\n        /* \"#utility.yul\":13411:13713   */\n      pop\n        /* \"#utility.yul\":13780:13782   */\n      0x20\n        /* \"#utility.yul\":13769:13778   */\n      dup4\n        /* \"#utility.yul\":13765:13783   */\n      add\n        /* \"#utility.yul\":13752:13784   */\n      calldataload\n        /* \"#utility.yul\":13811:13829   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13803:13809   */\n      dup2\n        /* \"#utility.yul\":13800:13830   */\n      gt\n        /* \"#utility.yul\":13797:13914   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":13833:13912   */\n      tag_524\n      tag_297\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":13797:13914   */\n    tag_523:\n        /* \"#utility.yul\":13938:14016   */\n      tag_525\n        /* \"#utility.yul\":14008:14015   */\n      dup6\n        /* \"#utility.yul\":13999:14005   */\n      dup3\n        /* \"#utility.yul\":13988:13997   */\n      dup7\n        /* \"#utility.yul\":13984:14006   */\n      add\n        /* \"#utility.yul\":13938:14016   */\n      tag_327\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":13928:14016   */\n      swap2\n      pop\n        /* \"#utility.yul\":13723:14026   */\n      pop\n        /* \"#utility.yul\":13139:14033   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14039:14153   */\n    tag_334:\n        /* \"#utility.yul\":14106:14112   */\n      0x00\n        /* \"#utility.yul\":14140:14145   */\n      dup2\n        /* \"#utility.yul\":14134:14146   */\n      mload\n        /* \"#utility.yul\":14124:14146   */\n      swap1\n      pop\n        /* \"#utility.yul\":14039:14153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14159:14343   */\n    tag_335:\n        /* \"#utility.yul\":14258:14269   */\n      0x00\n        /* \"#utility.yul\":14292:14298   */\n      dup3\n        /* \"#utility.yul\":14287:14290   */\n      dup3\n        /* \"#utility.yul\":14280:14299   */\n      mstore\n        /* \"#utility.yul\":14332:14336   */\n      0x20\n        /* \"#utility.yul\":14327:14330   */\n      dup3\n        /* \"#utility.yul\":14323:14337   */\n      add\n        /* \"#utility.yul\":14308:14337   */\n      swap1\n      pop\n        /* \"#utility.yul\":14159:14343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14349:14481   */\n    tag_336:\n        /* \"#utility.yul\":14416:14420   */\n      0x00\n        /* \"#utility.yul\":14439:14442   */\n      dup2\n        /* \"#utility.yul\":14431:14442   */\n      swap1\n      pop\n        /* \"#utility.yul\":14469:14473   */\n      0x20\n        /* \"#utility.yul\":14464:14467   */\n      dup3\n        /* \"#utility.yul\":14460:14474   */\n      add\n        /* \"#utility.yul\":14452:14474   */\n      swap1\n      pop\n        /* \"#utility.yul\":14349:14481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14487:14595   */\n    tag_337:\n        /* \"#utility.yul\":14564:14588   */\n      tag_530\n        /* \"#utility.yul\":14582:14587   */\n      dup2\n        /* \"#utility.yul\":14564:14588   */\n      tag_302\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":14559:14562   */\n      dup3\n        /* \"#utility.yul\":14552:14589   */\n      mstore\n        /* \"#utility.yul\":14487:14595   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14601:14780   */\n    tag_338:\n        /* \"#utility.yul\":14670:14680   */\n      0x00\n        /* \"#utility.yul\":14691:14737   */\n      tag_532\n        /* \"#utility.yul\":14733:14736   */\n      dup4\n        /* \"#utility.yul\":14725:14731   */\n      dup4\n        /* \"#utility.yul\":14691:14737   */\n      tag_337\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":14769:14773   */\n      0x20\n        /* \"#utility.yul\":14764:14767   */\n      dup4\n        /* \"#utility.yul\":14760:14774   */\n      add\n        /* \"#utility.yul\":14746:14774   */\n      swap1\n      pop\n        /* \"#utility.yul\":14601:14780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14786:14899   */\n    tag_339:\n        /* \"#utility.yul\":14856:14860   */\n      0x00\n        /* \"#utility.yul\":14888:14892   */\n      0x20\n        /* \"#utility.yul\":14883:14886   */\n      dup3\n        /* \"#utility.yul\":14879:14893   */\n      add\n        /* \"#utility.yul\":14871:14893   */\n      swap1\n      pop\n        /* \"#utility.yul\":14786:14899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14935:15667   */\n    tag_340:\n        /* \"#utility.yul\":15054:15057   */\n      0x00\n        /* \"#utility.yul\":15083:15137   */\n      tag_535\n        /* \"#utility.yul\":15131:15136   */\n      dup3\n        /* \"#utility.yul\":15083:15137   */\n      tag_334\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":15153:15239   */\n      tag_536\n        /* \"#utility.yul\":15232:15238   */\n      dup2\n        /* \"#utility.yul\":15227:15230   */\n      dup6\n        /* \"#utility.yul\":15153:15239   */\n      tag_335\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":15146:15239   */\n      swap4\n      pop\n        /* \"#utility.yul\":15263:15319   */\n      tag_537\n        /* \"#utility.yul\":15313:15318   */\n      dup4\n        /* \"#utility.yul\":15263:15319   */\n      tag_336\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":15342:15349   */\n      dup1\n        /* \"#utility.yul\":15373:15374   */\n      0x00\n        /* \"#utility.yul\":15358:15642   */\n    tag_538:\n        /* \"#utility.yul\":15383:15389   */\n      dup4\n        /* \"#utility.yul\":15380:15381   */\n      dup2\n        /* \"#utility.yul\":15377:15390   */\n      lt\n        /* \"#utility.yul\":15358:15642   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":15459:15465   */\n      dup2\n        /* \"#utility.yul\":15453:15466   */\n      mload\n        /* \"#utility.yul\":15486:15549   */\n      tag_541\n        /* \"#utility.yul\":15545:15548   */\n      dup9\n        /* \"#utility.yul\":15530:15543   */\n      dup3\n        /* \"#utility.yul\":15486:15549   */\n      tag_338\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":15479:15549   */\n      swap8\n      pop\n        /* \"#utility.yul\":15572:15632   */\n      tag_542\n        /* \"#utility.yul\":15625:15631   */\n      dup4\n        /* \"#utility.yul\":15572:15632   */\n      tag_339\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":15562:15632   */\n      swap3\n      pop\n        /* \"#utility.yul\":15418:15642   */\n      pop\n        /* \"#utility.yul\":15405:15406   */\n      0x01\n        /* \"#utility.yul\":15402:15403   */\n      dup2\n        /* \"#utility.yul\":15398:15407   */\n      add\n        /* \"#utility.yul\":15393:15407   */\n      swap1\n      pop\n        /* \"#utility.yul\":15358:15642   */\n      jump(tag_538)\n    tag_540:\n        /* \"#utility.yul\":15362:15376   */\n      pop\n        /* \"#utility.yul\":15658:15661   */\n      dup6\n        /* \"#utility.yul\":15651:15661   */\n      swap4\n      pop\n        /* \"#utility.yul\":15059:15667   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14935:15667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15673:16046   */\n    tag_51:\n        /* \"#utility.yul\":15816:15820   */\n      0x00\n        /* \"#utility.yul\":15854:15856   */\n      0x20\n        /* \"#utility.yul\":15843:15852   */\n      dup3\n        /* \"#utility.yul\":15839:15857   */\n      add\n        /* \"#utility.yul\":15831:15857   */\n      swap1\n      pop\n        /* \"#utility.yul\":15903:15912   */\n      dup2\n        /* \"#utility.yul\":15897:15901   */\n      dup2\n        /* \"#utility.yul\":15893:15913   */\n      sub\n        /* \"#utility.yul\":15889:15890   */\n      0x00\n        /* \"#utility.yul\":15878:15887   */\n      dup4\n        /* \"#utility.yul\":15874:15891   */\n      add\n        /* \"#utility.yul\":15867:15914   */\n      mstore\n        /* \"#utility.yul\":15931:16039   */\n      tag_544\n        /* \"#utility.yul\":16034:16038   */\n      dup2\n        /* \"#utility.yul\":16025:16031   */\n      dup5\n        /* \"#utility.yul\":15931:16039   */\n      tag_340\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":15923:16039   */\n      swap1\n      pop\n        /* \"#utility.yul\":15673:16046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16052:17091   */\n    tag_54:\n        /* \"#utility.yul\":16179:16185   */\n      0x00\n        /* \"#utility.yul\":16187:16193   */\n      dup1\n        /* \"#utility.yul\":16195:16201   */\n      0x00\n        /* \"#utility.yul\":16244:16246   */\n      0x60\n        /* \"#utility.yul\":16232:16241   */\n      dup5\n        /* \"#utility.yul\":16223:16230   */\n      dup7\n        /* \"#utility.yul\":16219:16242   */\n      sub\n        /* \"#utility.yul\":16215:16247   */\n      slt\n        /* \"#utility.yul\":16212:16331   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":16250:16329   */\n      tag_547\n      tag_296\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":16212:16331   */\n    tag_546:\n        /* \"#utility.yul\":16370:16371   */\n      0x00\n        /* \"#utility.yul\":16395:16448   */\n      tag_548\n        /* \"#utility.yul\":16440:16447   */\n      dup7\n        /* \"#utility.yul\":16431:16437   */\n      dup3\n        /* \"#utility.yul\":16420:16429   */\n      dup8\n        /* \"#utility.yul\":16416:16438   */\n      add\n        /* \"#utility.yul\":16395:16448   */\n      tag_301\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":16385:16448   */\n      swap4\n      pop\n        /* \"#utility.yul\":16341:16458   */\n      pop\n        /* \"#utility.yul\":16525:16527   */\n      0x20\n        /* \"#utility.yul\":16514:16523   */\n      dup5\n        /* \"#utility.yul\":16510:16528   */\n      add\n        /* \"#utility.yul\":16497:16529   */\n      calldataload\n        /* \"#utility.yul\":16556:16574   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16548:16554   */\n      dup2\n        /* \"#utility.yul\":16545:16575   */\n      gt\n        /* \"#utility.yul\":16542:16659   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":16578:16657   */\n      tag_550\n      tag_297\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":16542:16659   */\n    tag_549:\n        /* \"#utility.yul\":16683:16761   */\n      tag_551\n        /* \"#utility.yul\":16753:16760   */\n      dup7\n        /* \"#utility.yul\":16744:16750   */\n      dup3\n        /* \"#utility.yul\":16733:16742   */\n      dup8\n        /* \"#utility.yul\":16729:16751   */\n      add\n        /* \"#utility.yul\":16683:16761   */\n      tag_327\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":16673:16761   */\n      swap3\n      pop\n        /* \"#utility.yul\":16468:16771   */\n      pop\n        /* \"#utility.yul\":16838:16840   */\n      0x40\n        /* \"#utility.yul\":16827:16836   */\n      dup5\n        /* \"#utility.yul\":16823:16841   */\n      add\n        /* \"#utility.yul\":16810:16842   */\n      calldataload\n        /* \"#utility.yul\":16869:16887   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16861:16867   */\n      dup2\n        /* \"#utility.yul\":16858:16888   */\n      gt\n        /* \"#utility.yul\":16855:16972   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":16891:16970   */\n      tag_553\n      tag_297\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":16855:16972   */\n    tag_552:\n        /* \"#utility.yul\":16996:17074   */\n      tag_554\n        /* \"#utility.yul\":17066:17073   */\n      dup7\n        /* \"#utility.yul\":17057:17063   */\n      dup3\n        /* \"#utility.yul\":17046:17055   */\n      dup8\n        /* \"#utility.yul\":17042:17064   */\n      add\n        /* \"#utility.yul\":16996:17074   */\n      tag_327\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":16986:17074   */\n      swap2\n      pop\n        /* \"#utility.yul\":16781:17084   */\n      pop\n        /* \"#utility.yul\":16052:17091   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":17097:17215   */\n    tag_341:\n        /* \"#utility.yul\":17184:17208   */\n      tag_556\n        /* \"#utility.yul\":17202:17207   */\n      dup2\n        /* \"#utility.yul\":17184:17208   */\n      tag_299\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":17179:17182   */\n      dup3\n        /* \"#utility.yul\":17172:17209   */\n      mstore\n        /* \"#utility.yul\":17097:17215   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17221:17443   */\n    tag_61:\n        /* \"#utility.yul\":17314:17318   */\n      0x00\n        /* \"#utility.yul\":17352:17354   */\n      0x20\n        /* \"#utility.yul\":17341:17350   */\n      dup3\n        /* \"#utility.yul\":17337:17355   */\n      add\n        /* \"#utility.yul\":17329:17355   */\n      swap1\n      pop\n        /* \"#utility.yul\":17365:17436   */\n      tag_558\n        /* \"#utility.yul\":17433:17434   */\n      0x00\n        /* \"#utility.yul\":17422:17431   */\n      dup4\n        /* \"#utility.yul\":17418:17435   */\n      add\n        /* \"#utility.yul\":17409:17415   */\n      dup5\n        /* \"#utility.yul\":17365:17436   */\n      tag_341\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":17221:17443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17449:17565   */\n    tag_342:\n        /* \"#utility.yul\":17519:17540   */\n      tag_560\n        /* \"#utility.yul\":17534:17539   */\n      dup2\n        /* \"#utility.yul\":17519:17540   */\n      tag_309\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":17512:17517   */\n      dup2\n        /* \"#utility.yul\":17509:17541   */\n      eq\n        /* \"#utility.yul\":17499:17559   */\n      tag_561\n      jumpi\n        /* \"#utility.yul\":17555:17556   */\n      0x00\n        /* \"#utility.yul\":17552:17553   */\n      dup1\n        /* \"#utility.yul\":17545:17557   */\n      revert\n        /* \"#utility.yul\":17499:17559   */\n    tag_561:\n        /* \"#utility.yul\":17449:17565   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17571:17704   */\n    tag_343:\n        /* \"#utility.yul\":17614:17619   */\n      0x00\n        /* \"#utility.yul\":17652:17658   */\n      dup2\n        /* \"#utility.yul\":17639:17659   */\n      calldataload\n        /* \"#utility.yul\":17630:17659   */\n      swap1\n      pop\n        /* \"#utility.yul\":17668:17698   */\n      tag_563\n        /* \"#utility.yul\":17692:17697   */\n      dup2\n        /* \"#utility.yul\":17668:17698   */\n      tag_342\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":17571:17704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17710:18178   */\n    tag_64:\n        /* \"#utility.yul\":17775:17781   */\n      0x00\n        /* \"#utility.yul\":17783:17789   */\n      dup1\n        /* \"#utility.yul\":17832:17834   */\n      0x40\n        /* \"#utility.yul\":17820:17829   */\n      dup4\n        /* \"#utility.yul\":17811:17818   */\n      dup6\n        /* \"#utility.yul\":17807:17830   */\n      sub\n        /* \"#utility.yul\":17803:17835   */\n      slt\n        /* \"#utility.yul\":17800:17919   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":17838:17917   */\n      tag_566\n      tag_296\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":17800:17919   */\n    tag_565:\n        /* \"#utility.yul\":17958:17959   */\n      0x00\n        /* \"#utility.yul\":17983:18036   */\n      tag_567\n        /* \"#utility.yul\":18028:18035   */\n      dup6\n        /* \"#utility.yul\":18019:18025   */\n      dup3\n        /* \"#utility.yul\":18008:18017   */\n      dup7\n        /* \"#utility.yul\":18004:18026   */\n      add\n        /* \"#utility.yul\":17983:18036   */\n      tag_301\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":17973:18036   */\n      swap3\n      pop\n        /* \"#utility.yul\":17929:18046   */\n      pop\n        /* \"#utility.yul\":18085:18087   */\n      0x20\n        /* \"#utility.yul\":18111:18161   */\n      tag_568\n        /* \"#utility.yul\":18153:18160   */\n      dup6\n        /* \"#utility.yul\":18144:18150   */\n      dup3\n        /* \"#utility.yul\":18133:18142   */\n      dup7\n        /* \"#utility.yul\":18129:18151   */\n      add\n        /* \"#utility.yul\":18111:18161   */\n      tag_343\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":18101:18161   */\n      swap2\n      pop\n        /* \"#utility.yul\":18056:18171   */\n      pop\n        /* \"#utility.yul\":17710:18178   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18184:18658   */\n    tag_68:\n        /* \"#utility.yul\":18252:18258   */\n      0x00\n        /* \"#utility.yul\":18260:18266   */\n      dup1\n        /* \"#utility.yul\":18309:18311   */\n      0x40\n        /* \"#utility.yul\":18297:18306   */\n      dup4\n        /* \"#utility.yul\":18288:18295   */\n      dup6\n        /* \"#utility.yul\":18284:18307   */\n      sub\n        /* \"#utility.yul\":18280:18312   */\n      slt\n        /* \"#utility.yul\":18277:18396   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":18315:18394   */\n      tag_571\n      tag_296\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":18277:18396   */\n    tag_570:\n        /* \"#utility.yul\":18435:18436   */\n      0x00\n        /* \"#utility.yul\":18460:18513   */\n      tag_572\n        /* \"#utility.yul\":18505:18512   */\n      dup6\n        /* \"#utility.yul\":18496:18502   */\n      dup3\n        /* \"#utility.yul\":18485:18494   */\n      dup7\n        /* \"#utility.yul\":18481:18503   */\n      add\n        /* \"#utility.yul\":18460:18513   */\n      tag_301\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":18450:18513   */\n      swap3\n      pop\n        /* \"#utility.yul\":18406:18523   */\n      pop\n        /* \"#utility.yul\":18562:18564   */\n      0x20\n        /* \"#utility.yul\":18588:18641   */\n      tag_573\n        /* \"#utility.yul\":18633:18640   */\n      dup6\n        /* \"#utility.yul\":18624:18630   */\n      dup3\n        /* \"#utility.yul\":18613:18622   */\n      dup7\n        /* \"#utility.yul\":18609:18631   */\n      add\n        /* \"#utility.yul\":18588:18641   */\n      tag_301\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":18578:18641   */\n      swap2\n      pop\n        /* \"#utility.yul\":18533:18651   */\n      pop\n        /* \"#utility.yul\":18184:18658   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18664:19753   */\n    tag_73:\n        /* \"#utility.yul\":18768:18774   */\n      0x00\n        /* \"#utility.yul\":18776:18782   */\n      dup1\n        /* \"#utility.yul\":18784:18790   */\n      0x00\n        /* \"#utility.yul\":18792:18798   */\n      dup1\n        /* \"#utility.yul\":18800:18806   */\n      0x00\n        /* \"#utility.yul\":18849:18852   */\n      0xa0\n        /* \"#utility.yul\":18837:18846   */\n      dup7\n        /* \"#utility.yul\":18828:18835   */\n      dup9\n        /* \"#utility.yul\":18824:18847   */\n      sub\n        /* \"#utility.yul\":18820:18853   */\n      slt\n        /* \"#utility.yul\":18817:18937   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":18856:18935   */\n      tag_576\n      tag_296\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":18817:18937   */\n    tag_575:\n        /* \"#utility.yul\":18976:18977   */\n      0x00\n        /* \"#utility.yul\":19001:19054   */\n      tag_577\n        /* \"#utility.yul\":19046:19053   */\n      dup9\n        /* \"#utility.yul\":19037:19043   */\n      dup3\n        /* \"#utility.yul\":19026:19035   */\n      dup10\n        /* \"#utility.yul\":19022:19044   */\n      add\n        /* \"#utility.yul\":19001:19054   */\n      tag_301\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":18991:19054   */\n      swap6\n      pop\n        /* \"#utility.yul\":18947:19064   */\n      pop\n        /* \"#utility.yul\":19103:19105   */\n      0x20\n        /* \"#utility.yul\":19129:19182   */\n      tag_578\n        /* \"#utility.yul\":19174:19181   */\n      dup9\n        /* \"#utility.yul\":19165:19171   */\n      dup3\n        /* \"#utility.yul\":19154:19163   */\n      dup10\n        /* \"#utility.yul\":19150:19172   */\n      add\n        /* \"#utility.yul\":19129:19182   */\n      tag_301\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":19119:19182   */\n      swap5\n      pop\n        /* \"#utility.yul\":19074:19192   */\n      pop\n        /* \"#utility.yul\":19231:19233   */\n      0x40\n        /* \"#utility.yul\":19257:19310   */\n      tag_579\n        /* \"#utility.yul\":19302:19309   */\n      dup9\n        /* \"#utility.yul\":19293:19299   */\n      dup3\n        /* \"#utility.yul\":19282:19291   */\n      dup10\n        /* \"#utility.yul\":19278:19300   */\n      add\n        /* \"#utility.yul\":19257:19310   */\n      tag_304\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":19247:19310   */\n      swap4\n      pop\n        /* \"#utility.yul\":19202:19320   */\n      pop\n        /* \"#utility.yul\":19359:19361   */\n      0x60\n        /* \"#utility.yul\":19385:19438   */\n      tag_580\n        /* \"#utility.yul\":19430:19437   */\n      dup9\n        /* \"#utility.yul\":19421:19427   */\n      dup3\n        /* \"#utility.yul\":19410:19419   */\n      dup10\n        /* \"#utility.yul\":19406:19428   */\n      add\n        /* \"#utility.yul\":19385:19438   */\n      tag_304\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":19375:19438   */\n      swap3\n      pop\n        /* \"#utility.yul\":19330:19448   */\n      pop\n        /* \"#utility.yul\":19515:19518   */\n      0x80\n        /* \"#utility.yul\":19504:19513   */\n      dup7\n        /* \"#utility.yul\":19500:19519   */\n      add\n        /* \"#utility.yul\":19487:19520   */\n      calldataload\n        /* \"#utility.yul\":19547:19565   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19539:19545   */\n      dup2\n        /* \"#utility.yul\":19536:19566   */\n      gt\n        /* \"#utility.yul\":19533:19650   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":19569:19648   */\n      tag_582\n      tag_297\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":19533:19650   */\n    tag_581:\n        /* \"#utility.yul\":19674:19736   */\n      tag_583\n        /* \"#utility.yul\":19728:19735   */\n      dup9\n        /* \"#utility.yul\":19719:19725   */\n      dup3\n        /* \"#utility.yul\":19708:19717   */\n      dup10\n        /* \"#utility.yul\":19704:19726   */\n      add\n        /* \"#utility.yul\":19674:19736   */\n      tag_330\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":19664:19736   */\n      swap2\n      pop\n        /* \"#utility.yul\":19458:19746   */\n      pop\n        /* \"#utility.yul\":18664:19753   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19759:20088   */\n    tag_77:\n        /* \"#utility.yul\":19818:19824   */\n      0x00\n        /* \"#utility.yul\":19867:19869   */\n      0x20\n        /* \"#utility.yul\":19855:19864   */\n      dup3\n        /* \"#utility.yul\":19846:19853   */\n      dup5\n        /* \"#utility.yul\":19842:19865   */\n      sub\n        /* \"#utility.yul\":19838:19870   */\n      slt\n        /* \"#utility.yul\":19835:19954   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":19873:19952   */\n      tag_586\n      tag_296\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":19835:19954   */\n    tag_585:\n        /* \"#utility.yul\":19993:19994   */\n      0x00\n        /* \"#utility.yul\":20018:20071   */\n      tag_587\n        /* \"#utility.yul\":20063:20070   */\n      dup5\n        /* \"#utility.yul\":20054:20060   */\n      dup3\n        /* \"#utility.yul\":20043:20052   */\n      dup6\n        /* \"#utility.yul\":20039:20061   */\n      add\n        /* \"#utility.yul\":20018:20071   */\n      tag_301\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":20008:20071   */\n      swap2\n      pop\n        /* \"#utility.yul\":19964:20081   */\n      pop\n        /* \"#utility.yul\":19759:20088   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20094:20713   */\n    tag_81:\n        /* \"#utility.yul\":20171:20177   */\n      0x00\n        /* \"#utility.yul\":20179:20185   */\n      dup1\n        /* \"#utility.yul\":20187:20193   */\n      0x00\n        /* \"#utility.yul\":20236:20238   */\n      0x60\n        /* \"#utility.yul\":20224:20233   */\n      dup5\n        /* \"#utility.yul\":20215:20222   */\n      dup7\n        /* \"#utility.yul\":20211:20234   */\n      sub\n        /* \"#utility.yul\":20207:20239   */\n      slt\n        /* \"#utility.yul\":20204:20323   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":20242:20321   */\n      tag_590\n      tag_296\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":20204:20323   */\n    tag_589:\n        /* \"#utility.yul\":20362:20363   */\n      0x00\n        /* \"#utility.yul\":20387:20440   */\n      tag_591\n        /* \"#utility.yul\":20432:20439   */\n      dup7\n        /* \"#utility.yul\":20423:20429   */\n      dup3\n        /* \"#utility.yul\":20412:20421   */\n      dup8\n        /* \"#utility.yul\":20408:20430   */\n      add\n        /* \"#utility.yul\":20387:20440   */\n      tag_301\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":20377:20440   */\n      swap4\n      pop\n        /* \"#utility.yul\":20333:20450   */\n      pop\n        /* \"#utility.yul\":20489:20491   */\n      0x20\n        /* \"#utility.yul\":20515:20568   */\n      tag_592\n        /* \"#utility.yul\":20560:20567   */\n      dup7\n        /* \"#utility.yul\":20551:20557   */\n      dup3\n        /* \"#utility.yul\":20540:20549   */\n      dup8\n        /* \"#utility.yul\":20536:20558   */\n      add\n        /* \"#utility.yul\":20515:20568   */\n      tag_304\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":20505:20568   */\n      swap3\n      pop\n        /* \"#utility.yul\":20460:20578   */\n      pop\n        /* \"#utility.yul\":20617:20619   */\n      0x40\n        /* \"#utility.yul\":20643:20696   */\n      tag_593\n        /* \"#utility.yul\":20688:20695   */\n      dup7\n        /* \"#utility.yul\":20679:20685   */\n      dup3\n        /* \"#utility.yul\":20668:20677   */\n      dup8\n        /* \"#utility.yul\":20664:20686   */\n      add\n        /* \"#utility.yul\":20643:20696   */\n      tag_304\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":20633:20696   */\n      swap2\n      pop\n        /* \"#utility.yul\":20588:20706   */\n      pop\n        /* \"#utility.yul\":20094:20713   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":20719:20899   */\n    tag_344:\n        /* \"#utility.yul\":20767:20844   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20764:20765   */\n      0x00\n        /* \"#utility.yul\":20757:20845   */\n      mstore\n        /* \"#utility.yul\":20864:20868   */\n      0x22\n        /* \"#utility.yul\":20861:20862   */\n      0x04\n        /* \"#utility.yul\":20854:20869   */\n      mstore\n        /* \"#utility.yul\":20888:20892   */\n      0x24\n        /* \"#utility.yul\":20885:20886   */\n      0x00\n        /* \"#utility.yul\":20878:20893   */\n      revert\n        /* \"#utility.yul\":20905:21225   */\n    tag_97:\n        /* \"#utility.yul\":20949:20955   */\n      0x00\n        /* \"#utility.yul\":20986:20987   */\n      0x02\n        /* \"#utility.yul\":20980:20984   */\n      dup3\n        /* \"#utility.yul\":20976:20988   */\n      div\n        /* \"#utility.yul\":20966:20988   */\n      swap1\n      pop\n        /* \"#utility.yul\":21033:21034   */\n      0x01\n        /* \"#utility.yul\":21027:21031   */\n      dup3\n        /* \"#utility.yul\":21023:21035   */\n      and\n        /* \"#utility.yul\":21054:21072   */\n      dup1\n        /* \"#utility.yul\":21044:21125   */\n      tag_596\n      jumpi\n        /* \"#utility.yul\":21110:21114   */\n      0x7f\n        /* \"#utility.yul\":21102:21108   */\n      dup3\n        /* \"#utility.yul\":21098:21115   */\n      and\n        /* \"#utility.yul\":21088:21115   */\n      swap2\n      pop\n        /* \"#utility.yul\":21044:21125   */\n    tag_596:\n        /* \"#utility.yul\":21172:21174   */\n      0x20\n        /* \"#utility.yul\":21164:21170   */\n      dup3\n        /* \"#utility.yul\":21161:21175   */\n      lt\n        /* \"#utility.yul\":21141:21159   */\n      dup2\n        /* \"#utility.yul\":21138:21176   */\n      sub\n        /* \"#utility.yul\":21135:21219   */\n      tag_597\n      jumpi\n        /* \"#utility.yul\":21191:21209   */\n      tag_598\n      tag_344\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":21135:21219   */\n    tag_597:\n        /* \"#utility.yul\":20956:21225   */\n      pop\n        /* \"#utility.yul\":20905:21225   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21231:21563   */\n    tag_109:\n        /* \"#utility.yul\":21352:21356   */\n      0x00\n        /* \"#utility.yul\":21390:21392   */\n      0x40\n        /* \"#utility.yul\":21379:21388   */\n      dup3\n        /* \"#utility.yul\":21375:21393   */\n      add\n        /* \"#utility.yul\":21367:21393   */\n      swap1\n      pop\n        /* \"#utility.yul\":21403:21474   */\n      tag_600\n        /* \"#utility.yul\":21471:21472   */\n      0x00\n        /* \"#utility.yul\":21460:21469   */\n      dup4\n        /* \"#utility.yul\":21456:21473   */\n      add\n        /* \"#utility.yul\":21447:21453   */\n      dup6\n        /* \"#utility.yul\":21403:21474   */\n      tag_341\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":21484:21556   */\n      tag_601\n        /* \"#utility.yul\":21552:21554   */\n      0x20\n        /* \"#utility.yul\":21541:21550   */\n      dup4\n        /* \"#utility.yul\":21537:21555   */\n      add\n        /* \"#utility.yul\":21528:21534   */\n      dup5\n        /* \"#utility.yul\":21484:21556   */\n      tag_341\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":21231:21563   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21569:21901   */\n    tag_115:\n        /* \"#utility.yul\":21690:21694   */\n      0x00\n        /* \"#utility.yul\":21728:21730   */\n      0x40\n        /* \"#utility.yul\":21717:21726   */\n      dup3\n        /* \"#utility.yul\":21713:21731   */\n      add\n        /* \"#utility.yul\":21705:21731   */\n      swap1\n      pop\n        /* \"#utility.yul\":21741:21812   */\n      tag_603\n        /* \"#utility.yul\":21809:21810   */\n      0x00\n        /* \"#utility.yul\":21798:21807   */\n      dup4\n        /* \"#utility.yul\":21794:21811   */\n      add\n        /* \"#utility.yul\":21785:21791   */\n      dup6\n        /* \"#utility.yul\":21741:21812   */\n      tag_305\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":21822:21894   */\n      tag_604\n        /* \"#utility.yul\":21890:21892   */\n      0x20\n        /* \"#utility.yul\":21879:21888   */\n      dup4\n        /* \"#utility.yul\":21875:21893   */\n      add\n        /* \"#utility.yul\":21866:21872   */\n      dup5\n        /* \"#utility.yul\":21822:21894   */\n      tag_305\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":21569:21901   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21907:22087   */\n    tag_130:\n        /* \"#utility.yul\":21955:22032   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21952:21953   */\n      0x00\n        /* \"#utility.yul\":21945:22033   */\n      mstore\n        /* \"#utility.yul\":22052:22056   */\n      0x32\n        /* \"#utility.yul\":22049:22050   */\n      0x04\n        /* \"#utility.yul\":22042:22057   */\n      mstore\n        /* \"#utility.yul\":22076:22080   */\n      0x24\n        /* \"#utility.yul\":22073:22074   */\n      0x00\n        /* \"#utility.yul\":22066:22081   */\n      revert\n        /* \"#utility.yul\":22093:22273   */\n    tag_345:\n        /* \"#utility.yul\":22141:22218   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22138:22139   */\n      0x00\n        /* \"#utility.yul\":22131:22219   */\n      mstore\n        /* \"#utility.yul\":22238:22242   */\n      0x11\n        /* \"#utility.yul\":22235:22236   */\n      0x04\n        /* \"#utility.yul\":22228:22243   */\n      mstore\n        /* \"#utility.yul\":22262:22266   */\n      0x24\n        /* \"#utility.yul\":22259:22260   */\n      0x00\n        /* \"#utility.yul\":22252:22267   */\n      revert\n        /* \"#utility.yul\":22279:22512   */\n    tag_132:\n        /* \"#utility.yul\":22318:22321   */\n      0x00\n        /* \"#utility.yul\":22341:22365   */\n      tag_608\n        /* \"#utility.yul\":22359:22364   */\n      dup3\n        /* \"#utility.yul\":22341:22365   */\n      tag_302\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":22332:22365   */\n      swap2\n      pop\n        /* \"#utility.yul\":22387:22453   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22380:22385   */\n      dup3\n        /* \"#utility.yul\":22377:22454   */\n      sub\n        /* \"#utility.yul\":22374:22477   */\n      tag_609\n      jumpi\n        /* \"#utility.yul\":22457:22475   */\n      tag_610\n      tag_345\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":22374:22477   */\n    tag_609:\n        /* \"#utility.yul\":22504:22505   */\n      0x01\n        /* \"#utility.yul\":22497:22502   */\n      dup3\n        /* \"#utility.yul\":22493:22506   */\n      add\n        /* \"#utility.yul\":22486:22506   */\n      swap1\n      pop\n        /* \"#utility.yul\":22279:22512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22518:22659   */\n    tag_346:\n        /* \"#utility.yul\":22567:22571   */\n      0x00\n        /* \"#utility.yul\":22590:22593   */\n      dup2\n        /* \"#utility.yul\":22582:22593   */\n      swap1\n      pop\n        /* \"#utility.yul\":22613:22616   */\n      dup2\n        /* \"#utility.yul\":22610:22611   */\n      0x00\n        /* \"#utility.yul\":22603:22617   */\n      mstore\n        /* \"#utility.yul\":22647:22651   */\n      0x20\n        /* \"#utility.yul\":22644:22645   */\n      0x00\n        /* \"#utility.yul\":22634:22652   */\n      keccak256\n        /* \"#utility.yul\":22626:22652   */\n      swap1\n      pop\n        /* \"#utility.yul\":22518:22659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22665:22758   */\n    tag_347:\n        /* \"#utility.yul\":22702:22708   */\n      0x00\n        /* \"#utility.yul\":22749:22751   */\n      0x20\n        /* \"#utility.yul\":22744:22746   */\n      0x1f\n        /* \"#utility.yul\":22737:22742   */\n      dup4\n        /* \"#utility.yul\":22733:22747   */\n      add\n        /* \"#utility.yul\":22729:22752   */\n      div\n        /* \"#utility.yul\":22719:22752   */\n      swap1\n      pop\n        /* \"#utility.yul\":22665:22758   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22764:22871   */\n    tag_348:\n        /* \"#utility.yul\":22808:22816   */\n      0x00\n        /* \"#utility.yul\":22858:22863   */\n      dup3\n        /* \"#utility.yul\":22852:22856   */\n      dup3\n        /* \"#utility.yul\":22848:22864   */\n      shl\n        /* \"#utility.yul\":22827:22864   */\n      swap1\n      pop\n        /* \"#utility.yul\":22764:22871   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22877:23270   */\n    tag_349:\n        /* \"#utility.yul\":22946:22952   */\n      0x00\n        /* \"#utility.yul\":22996:22997   */\n      0x08\n        /* \"#utility.yul\":22984:22994   */\n      dup4\n        /* \"#utility.yul\":22980:22998   */\n      mul\n        /* \"#utility.yul\":23019:23116   */\n      tag_615\n        /* \"#utility.yul\":23049:23115   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23038:23047   */\n      dup3\n        /* \"#utility.yul\":23019:23116   */\n      tag_348\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":23137:23176   */\n      tag_616\n        /* \"#utility.yul\":23167:23175   */\n      dup7\n        /* \"#utility.yul\":23156:23165   */\n      dup4\n        /* \"#utility.yul\":23137:23176   */\n      tag_348\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":23125:23176   */\n      swap6\n      pop\n        /* \"#utility.yul\":23209:23213   */\n      dup1\n        /* \"#utility.yul\":23205:23214   */\n      not\n        /* \"#utility.yul\":23198:23203   */\n      dup5\n        /* \"#utility.yul\":23194:23215   */\n      and\n        /* \"#utility.yul\":23185:23215   */\n      swap4\n      pop\n        /* \"#utility.yul\":23258:23262   */\n      dup1\n        /* \"#utility.yul\":23248:23256   */\n      dup7\n        /* \"#utility.yul\":23244:23263   */\n      and\n        /* \"#utility.yul\":23237:23242   */\n      dup5\n        /* \"#utility.yul\":23234:23264   */\n      or\n        /* \"#utility.yul\":23224:23264   */\n      swap3\n      pop\n        /* \"#utility.yul\":22953:23270   */\n      pop\n      pop\n        /* \"#utility.yul\":22877:23270   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23276:23336   */\n    tag_350:\n        /* \"#utility.yul\":23304:23307   */\n      0x00\n        /* \"#utility.yul\":23325:23330   */\n      dup2\n        /* \"#utility.yul\":23318:23330   */\n      swap1\n      pop\n        /* \"#utility.yul\":23276:23336   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23342:23484   */\n    tag_351:\n        /* \"#utility.yul\":23392:23401   */\n      0x00\n        /* \"#utility.yul\":23425:23478   */\n      tag_619\n        /* \"#utility.yul\":23443:23477   */\n      tag_620\n        /* \"#utility.yul\":23452:23476   */\n      tag_621\n        /* \"#utility.yul\":23470:23475   */\n      dup5\n        /* \"#utility.yul\":23452:23476   */\n      tag_302\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":23443:23477   */\n      tag_350\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":23425:23478   */\n      tag_302\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":23412:23478   */\n      swap1\n      pop\n        /* \"#utility.yul\":23342:23484   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23490:23565   */\n    tag_352:\n        /* \"#utility.yul\":23533:23536   */\n      0x00\n        /* \"#utility.yul\":23554:23559   */\n      dup2\n        /* \"#utility.yul\":23547:23559   */\n      swap1\n      pop\n        /* \"#utility.yul\":23490:23565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23571:23840   */\n    tag_353:\n        /* \"#utility.yul\":23681:23720   */\n      tag_624\n        /* \"#utility.yul\":23712:23719   */\n      dup4\n        /* \"#utility.yul\":23681:23720   */\n      tag_351\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":23742:23833   */\n      tag_625\n        /* \"#utility.yul\":23791:23832   */\n      tag_626\n        /* \"#utility.yul\":23815:23831   */\n      dup3\n        /* \"#utility.yul\":23791:23832   */\n      tag_352\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":23783:23789   */\n      dup5\n        /* \"#utility.yul\":23776:23780   */\n      dup5\n        /* \"#utility.yul\":23770:23781   */\n      sload\n        /* \"#utility.yul\":23742:23833   */\n      tag_349\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":23736:23740   */\n      dup3\n        /* \"#utility.yul\":23729:23834   */\n      sstore\n        /* \"#utility.yul\":23647:23840   */\n      pop\n        /* \"#utility.yul\":23571:23840   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23846:23919   */\n    tag_354:\n        /* \"#utility.yul\":23891:23894   */\n      0x00\n        /* \"#utility.yul\":23846:23919   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":23925:24114   */\n    tag_355:\n        /* \"#utility.yul\":24002:24034   */\n      tag_629\n      tag_354\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":24043:24108   */\n      tag_630\n        /* \"#utility.yul\":24101:24107   */\n      dup2\n        /* \"#utility.yul\":24093:24099   */\n      dup5\n        /* \"#utility.yul\":24087:24091   */\n      dup5\n        /* \"#utility.yul\":24043:24108   */\n      tag_353\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":23978:24114   */\n      pop\n        /* \"#utility.yul\":23925:24114   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24120:24306   */\n    tag_356:\n        /* \"#utility.yul\":24180:24300   */\n    tag_632:\n        /* \"#utility.yul\":24197:24200   */\n      dup2\n        /* \"#utility.yul\":24190:24195   */\n      dup2\n        /* \"#utility.yul\":24187:24201   */\n      lt\n        /* \"#utility.yul\":24180:24300   */\n      iszero\n      tag_634\n      jumpi\n        /* \"#utility.yul\":24251:24290   */\n      tag_635\n        /* \"#utility.yul\":24288:24289   */\n      0x00\n        /* \"#utility.yul\":24281:24286   */\n      dup3\n        /* \"#utility.yul\":24251:24290   */\n      tag_355\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":24224:24225   */\n      0x01\n        /* \"#utility.yul\":24217:24222   */\n      dup2\n        /* \"#utility.yul\":24213:24226   */\n      add\n        /* \"#utility.yul\":24204:24226   */\n      swap1\n      pop\n        /* \"#utility.yul\":24180:24300   */\n      jump(tag_632)\n    tag_634:\n        /* \"#utility.yul\":24120:24306   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24312:24855   */\n    tag_357:\n        /* \"#utility.yul\":24413:24415   */\n      0x1f\n        /* \"#utility.yul\":24408:24411   */\n      dup3\n        /* \"#utility.yul\":24405:24416   */\n      gt\n        /* \"#utility.yul\":24402:24848   */\n      iszero\n      tag_637\n      jumpi\n        /* \"#utility.yul\":24447:24485   */\n      tag_638\n        /* \"#utility.yul\":24479:24484   */\n      dup2\n        /* \"#utility.yul\":24447:24485   */\n      tag_346\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":24531:24560   */\n      tag_639\n        /* \"#utility.yul\":24549:24559   */\n      dup5\n        /* \"#utility.yul\":24531:24560   */\n      tag_347\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":24521:24529   */\n      dup2\n        /* \"#utility.yul\":24517:24561   */\n      add\n        /* \"#utility.yul\":24714:24716   */\n      0x20\n        /* \"#utility.yul\":24702:24712   */\n      dup6\n        /* \"#utility.yul\":24699:24717   */\n      lt\n        /* \"#utility.yul\":24696:24745   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":24735:24743   */\n      dup2\n        /* \"#utility.yul\":24720:24743   */\n      swap1\n      pop\n        /* \"#utility.yul\":24696:24745   */\n    tag_640:\n        /* \"#utility.yul\":24758:24838   */\n      tag_641\n        /* \"#utility.yul\":24814:24836   */\n      tag_642\n        /* \"#utility.yul\":24832:24835   */\n      dup6\n        /* \"#utility.yul\":24814:24836   */\n      tag_347\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":24804:24812   */\n      dup4\n        /* \"#utility.yul\":24800:24837   */\n      add\n        /* \"#utility.yul\":24787:24798   */\n      dup3\n        /* \"#utility.yul\":24758:24838   */\n      tag_356\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":24417:24848   */\n      pop\n      pop\n        /* \"#utility.yul\":24402:24848   */\n    tag_637:\n        /* \"#utility.yul\":24312:24855   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24861:24978   */\n    tag_358:\n        /* \"#utility.yul\":24915:24923   */\n      0x00\n        /* \"#utility.yul\":24965:24970   */\n      dup3\n        /* \"#utility.yul\":24959:24963   */\n      dup3\n        /* \"#utility.yul\":24955:24971   */\n      shr\n        /* \"#utility.yul\":24934:24971   */\n      swap1\n      pop\n        /* \"#utility.yul\":24861:24978   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24984:25153   */\n    tag_359:\n        /* \"#utility.yul\":25028:25034   */\n      0x00\n        /* \"#utility.yul\":25061:25112   */\n      tag_645\n        /* \"#utility.yul\":25109:25110   */\n      0x00\n        /* \"#utility.yul\":25105:25111   */\n      not\n        /* \"#utility.yul\":25097:25102   */\n      dup5\n        /* \"#utility.yul\":25094:25095   */\n      0x08\n        /* \"#utility.yul\":25090:25103   */\n      mul\n        /* \"#utility.yul\":25061:25112   */\n      tag_358\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":25057:25113   */\n      not\n        /* \"#utility.yul\":25142:25146   */\n      dup1\n        /* \"#utility.yul\":25136:25140   */\n      dup4\n        /* \"#utility.yul\":25132:25147   */\n      and\n        /* \"#utility.yul\":25122:25147   */\n      swap2\n      pop\n        /* \"#utility.yul\":25035:25153   */\n      pop\n        /* \"#utility.yul\":24984:25153   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25158:25453   */\n    tag_360:\n        /* \"#utility.yul\":25234:25238   */\n      0x00\n        /* \"#utility.yul\":25380:25409   */\n      tag_647\n        /* \"#utility.yul\":25405:25408   */\n      dup4\n        /* \"#utility.yul\":25399:25403   */\n      dup4\n        /* \"#utility.yul\":25380:25409   */\n      tag_359\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":25372:25409   */\n      swap2\n      pop\n        /* \"#utility.yul\":25442:25445   */\n      dup3\n        /* \"#utility.yul\":25439:25440   */\n      0x02\n        /* \"#utility.yul\":25435:25446   */\n      mul\n        /* \"#utility.yul\":25429:25433   */\n      dup3\n        /* \"#utility.yul\":25426:25447   */\n      or\n        /* \"#utility.yul\":25418:25447   */\n      swap1\n      pop\n        /* \"#utility.yul\":25158:25453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25458:26853   */\n    tag_187:\n        /* \"#utility.yul\":25575:25612   */\n      tag_649\n        /* \"#utility.yul\":25608:25611   */\n      dup3\n        /* \"#utility.yul\":25575:25612   */\n      tag_320\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":25677:25695   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":25669:25675   */\n      dup2\n        /* \"#utility.yul\":25666:25696   */\n      gt\n        /* \"#utility.yul\":25663:25719   */\n      iszero\n      tag_650\n      jumpi\n        /* \"#utility.yul\":25699:25717   */\n      tag_651\n      tag_118\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":25663:25719   */\n    tag_650:\n        /* \"#utility.yul\":25743:25781   */\n      tag_652\n        /* \"#utility.yul\":25775:25779   */\n      dup3\n        /* \"#utility.yul\":25769:25780   */\n      sload\n        /* \"#utility.yul\":25743:25781   */\n      tag_97\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":25828:25895   */\n      tag_653\n        /* \"#utility.yul\":25888:25894   */\n      dup3\n        /* \"#utility.yul\":25880:25886   */\n      dup3\n        /* \"#utility.yul\":25874:25878   */\n      dup6\n        /* \"#utility.yul\":25828:25895   */\n      tag_357\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":25922:25923   */\n      0x00\n        /* \"#utility.yul\":25946:25950   */\n      0x20\n        /* \"#utility.yul\":25933:25950   */\n      swap1\n      pop\n        /* \"#utility.yul\":25978:25980   */\n      0x1f\n        /* \"#utility.yul\":25970:25976   */\n      dup4\n        /* \"#utility.yul\":25967:25981   */\n      gt\n        /* \"#utility.yul\":25995:25996   */\n      0x01\n        /* \"#utility.yul\":25990:26608   */\n      dup2\n      eq\n      tag_655\n      jumpi\n        /* \"#utility.yul\":26652:26653   */\n      0x00\n        /* \"#utility.yul\":26669:26675   */\n      dup5\n        /* \"#utility.yul\":26666:26743   */\n      iszero\n      tag_656\n      jumpi\n        /* \"#utility.yul\":26718:26727   */\n      dup3\n        /* \"#utility.yul\":26713:26716   */\n      dup8\n        /* \"#utility.yul\":26709:26728   */\n      add\n        /* \"#utility.yul\":26703:26729   */\n      mload\n        /* \"#utility.yul\":26694:26729   */\n      swap1\n      pop\n        /* \"#utility.yul\":26666:26743   */\n    tag_656:\n        /* \"#utility.yul\":26769:26836   */\n      tag_657\n        /* \"#utility.yul\":26829:26835   */\n      dup6\n        /* \"#utility.yul\":26822:26827   */\n      dup3\n        /* \"#utility.yul\":26769:26836   */\n      tag_360\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":26763:26767   */\n      dup7\n        /* \"#utility.yul\":26756:26837   */\n      sstore\n        /* \"#utility.yul\":26625:26847   */\n      pop\n        /* \"#utility.yul\":25960:26847   */\n      jump(tag_654)\n        /* \"#utility.yul\":25990:26608   */\n    tag_655:\n        /* \"#utility.yul\":26042:26046   */\n      0x1f\n        /* \"#utility.yul\":26038:26047   */\n      not\n        /* \"#utility.yul\":26030:26036   */\n      dup5\n        /* \"#utility.yul\":26026:26048   */\n      and\n        /* \"#utility.yul\":26076:26113   */\n      tag_658\n        /* \"#utility.yul\":26108:26112   */\n      dup7\n        /* \"#utility.yul\":26076:26113   */\n      tag_346\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":26135:26136   */\n      0x00\n        /* \"#utility.yul\":26149:26357   */\n    tag_659:\n        /* \"#utility.yul\":26163:26170   */\n      dup3\n        /* \"#utility.yul\":26160:26161   */\n      dup2\n        /* \"#utility.yul\":26157:26171   */\n      lt\n        /* \"#utility.yul\":26149:26357   */\n      iszero\n      tag_661\n      jumpi\n        /* \"#utility.yul\":26242:26251   */\n      dup5\n        /* \"#utility.yul\":26237:26240   */\n      dup10\n        /* \"#utility.yul\":26233:26252   */\n      add\n        /* \"#utility.yul\":26227:26253   */\n      mload\n        /* \"#utility.yul\":26219:26225   */\n      dup3\n        /* \"#utility.yul\":26212:26254   */\n      sstore\n        /* \"#utility.yul\":26293:26294   */\n      0x01\n        /* \"#utility.yul\":26285:26291   */\n      dup3\n        /* \"#utility.yul\":26281:26295   */\n      add\n        /* \"#utility.yul\":26271:26295   */\n      swap2\n      pop\n        /* \"#utility.yul\":26340:26342   */\n      0x20\n        /* \"#utility.yul\":26329:26338   */\n      dup6\n        /* \"#utility.yul\":26325:26343   */\n      add\n        /* \"#utility.yul\":26312:26343   */\n      swap5\n      pop\n        /* \"#utility.yul\":26186:26190   */\n      0x20\n        /* \"#utility.yul\":26183:26184   */\n      dup2\n        /* \"#utility.yul\":26179:26191   */\n      add\n        /* \"#utility.yul\":26174:26191   */\n      swap1\n      pop\n        /* \"#utility.yul\":26149:26357   */\n      jump(tag_659)\n    tag_661:\n        /* \"#utility.yul\":26385:26391   */\n      dup7\n        /* \"#utility.yul\":26376:26383   */\n      dup4\n        /* \"#utility.yul\":26373:26392   */\n      lt\n        /* \"#utility.yul\":26370:26549   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":26443:26452   */\n      dup5\n        /* \"#utility.yul\":26438:26441   */\n      dup10\n        /* \"#utility.yul\":26434:26453   */\n      add\n        /* \"#utility.yul\":26428:26454   */\n      mload\n        /* \"#utility.yul\":26486:26534   */\n      tag_663\n        /* \"#utility.yul\":26528:26532   */\n      0x1f\n        /* \"#utility.yul\":26520:26526   */\n      dup10\n        /* \"#utility.yul\":26516:26533   */\n      and\n        /* \"#utility.yul\":26505:26514   */\n      dup3\n        /* \"#utility.yul\":26486:26534   */\n      tag_359\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":26478:26484   */\n      dup4\n        /* \"#utility.yul\":26471:26535   */\n      sstore\n        /* \"#utility.yul\":26393:26549   */\n      pop\n        /* \"#utility.yul\":26370:26549   */\n    tag_662:\n        /* \"#utility.yul\":26595:26596   */\n      0x01\n        /* \"#utility.yul\":26591:26592   */\n      0x02\n        /* \"#utility.yul\":26583:26589   */\n      dup9\n        /* \"#utility.yul\":26579:26593   */\n      mul\n        /* \"#utility.yul\":26575:26597   */\n      add\n        /* \"#utility.yul\":26569:26573   */\n      dup9\n        /* \"#utility.yul\":26562:26598   */\n      sstore\n        /* \"#utility.yul\":25997:26608   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":25960:26847   */\n    tag_654:\n      pop\n        /* \"#utility.yul\":25550:26853   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":25458:26853   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26859:27412   */\n    tag_246:\n        /* \"#utility.yul\":27036:27040   */\n      0x00\n        /* \"#utility.yul\":27074:27077   */\n      0x80\n        /* \"#utility.yul\":27063:27072   */\n      dup3\n        /* \"#utility.yul\":27059:27078   */\n      add\n        /* \"#utility.yul\":27051:27078   */\n      swap1\n      pop\n        /* \"#utility.yul\":27088:27159   */\n      tag_665\n        /* \"#utility.yul\":27156:27157   */\n      0x00\n        /* \"#utility.yul\":27145:27154   */\n      dup4\n        /* \"#utility.yul\":27141:27158   */\n      add\n        /* \"#utility.yul\":27132:27138   */\n      dup8\n        /* \"#utility.yul\":27088:27159   */\n      tag_341\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":27169:27241   */\n      tag_666\n        /* \"#utility.yul\":27237:27239   */\n      0x20\n        /* \"#utility.yul\":27226:27235   */\n      dup4\n        /* \"#utility.yul\":27222:27240   */\n      add\n        /* \"#utility.yul\":27213:27219   */\n      dup7\n        /* \"#utility.yul\":27169:27241   */\n      tag_305\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":27251:27323   */\n      tag_667\n        /* \"#utility.yul\":27319:27321   */\n      0x40\n        /* \"#utility.yul\":27308:27317   */\n      dup4\n        /* \"#utility.yul\":27304:27322   */\n      add\n        /* \"#utility.yul\":27295:27301   */\n      dup6\n        /* \"#utility.yul\":27251:27323   */\n      tag_305\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":27333:27405   */\n      tag_668\n        /* \"#utility.yul\":27401:27403   */\n      0x60\n        /* \"#utility.yul\":27390:27399   */\n      dup4\n        /* \"#utility.yul\":27386:27404   */\n      add\n        /* \"#utility.yul\":27377:27383   */\n      dup5\n        /* \"#utility.yul\":27333:27405   */\n      tag_305\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":26859:27412   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27418:27609   */\n    tag_249:\n        /* \"#utility.yul\":27458:27461   */\n      0x00\n        /* \"#utility.yul\":27477:27497   */\n      tag_670\n        /* \"#utility.yul\":27495:27496   */\n      dup3\n        /* \"#utility.yul\":27477:27497   */\n      tag_302\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":27472:27497   */\n      swap2\n      pop\n        /* \"#utility.yul\":27511:27531   */\n      tag_671\n        /* \"#utility.yul\":27529:27530   */\n      dup4\n        /* \"#utility.yul\":27511:27531   */\n      tag_302\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":27506:27531   */\n      swap3\n      pop\n        /* \"#utility.yul\":27554:27555   */\n      dup3\n        /* \"#utility.yul\":27551:27552   */\n      dup3\n        /* \"#utility.yul\":27547:27556   */\n      add\n        /* \"#utility.yul\":27540:27556   */\n      swap1\n      pop\n        /* \"#utility.yul\":27575:27578   */\n      dup1\n        /* \"#utility.yul\":27572:27573   */\n      dup3\n        /* \"#utility.yul\":27569:27579   */\n      gt\n        /* \"#utility.yul\":27566:27602   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":27582:27600   */\n      tag_673\n      tag_345\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":27566:27602   */\n    tag_672:\n        /* \"#utility.yul\":27418:27609   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27615:28249   */\n    tag_257:\n        /* \"#utility.yul\":27836:27840   */\n      0x00\n        /* \"#utility.yul\":27874:27876   */\n      0x40\n        /* \"#utility.yul\":27863:27872   */\n      dup3\n        /* \"#utility.yul\":27859:27877   */\n      add\n        /* \"#utility.yul\":27851:27877   */\n      swap1\n      pop\n        /* \"#utility.yul\":27923:27932   */\n      dup2\n        /* \"#utility.yul\":27917:27921   */\n      dup2\n        /* \"#utility.yul\":27913:27933   */\n      sub\n        /* \"#utility.yul\":27909:27910   */\n      0x00\n        /* \"#utility.yul\":27898:27907   */\n      dup4\n        /* \"#utility.yul\":27894:27911   */\n      add\n        /* \"#utility.yul\":27887:27934   */\n      mstore\n        /* \"#utility.yul\":27951:28059   */\n      tag_675\n        /* \"#utility.yul\":28054:28058   */\n      dup2\n        /* \"#utility.yul\":28045:28051   */\n      dup6\n        /* \"#utility.yul\":27951:28059   */\n      tag_340\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":27943:28059   */\n      swap1\n      pop\n        /* \"#utility.yul\":28106:28115   */\n      dup2\n        /* \"#utility.yul\":28100:28104   */\n      dup2\n        /* \"#utility.yul\":28096:28116   */\n      sub\n        /* \"#utility.yul\":28091:28093   */\n      0x20\n        /* \"#utility.yul\":28080:28089   */\n      dup4\n        /* \"#utility.yul\":28076:28094   */\n      add\n        /* \"#utility.yul\":28069:28117   */\n      mstore\n        /* \"#utility.yul\":28134:28242   */\n      tag_676\n        /* \"#utility.yul\":28237:28241   */\n      dup2\n        /* \"#utility.yul\":28228:28234   */\n      dup5\n        /* \"#utility.yul\":28134:28242   */\n      tag_340\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":28126:28242   */\n      swap1\n      pop\n        /* \"#utility.yul\":27615:28249   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28255:28353   */\n    tag_361:\n        /* \"#utility.yul\":28306:28312   */\n      0x00\n        /* \"#utility.yul\":28340:28345   */\n      dup2\n        /* \"#utility.yul\":28334:28346   */\n      mload\n        /* \"#utility.yul\":28324:28346   */\n      swap1\n      pop\n        /* \"#utility.yul\":28255:28353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28359:28527   */\n    tag_362:\n        /* \"#utility.yul\":28442:28453   */\n      0x00\n        /* \"#utility.yul\":28476:28482   */\n      dup3\n        /* \"#utility.yul\":28471:28474   */\n      dup3\n        /* \"#utility.yul\":28464:28483   */\n      mstore\n        /* \"#utility.yul\":28516:28520   */\n      0x20\n        /* \"#utility.yul\":28511:28514   */\n      dup3\n        /* \"#utility.yul\":28507:28521   */\n      add\n        /* \"#utility.yul\":28492:28521   */\n      swap1\n      pop\n        /* \"#utility.yul\":28359:28527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28533:28906   */\n    tag_363:\n        /* \"#utility.yul\":28619:28622   */\n      0x00\n        /* \"#utility.yul\":28647:28685   */\n      tag_680\n        /* \"#utility.yul\":28679:28684   */\n      dup3\n        /* \"#utility.yul\":28647:28685   */\n      tag_361\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":28701:28771   */\n      tag_681\n        /* \"#utility.yul\":28764:28770   */\n      dup2\n        /* \"#utility.yul\":28759:28762   */\n      dup6\n        /* \"#utility.yul\":28701:28771   */\n      tag_362\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":28694:28771   */\n      swap4\n      pop\n        /* \"#utility.yul\":28780:28845   */\n      tag_682\n        /* \"#utility.yul\":28838:28844   */\n      dup2\n        /* \"#utility.yul\":28833:28836   */\n      dup6\n        /* \"#utility.yul\":28826:28830   */\n      0x20\n        /* \"#utility.yul\":28819:28824   */\n      dup7\n        /* \"#utility.yul\":28815:28831   */\n      add\n        /* \"#utility.yul\":28780:28845   */\n      tag_322\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":28870:28899   */\n      tag_683\n        /* \"#utility.yul\":28892:28898   */\n      dup2\n        /* \"#utility.yul\":28870:28899   */\n      tag_313\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":28865:28868   */\n      dup5\n        /* \"#utility.yul\":28861:28900   */\n      add\n        /* \"#utility.yul\":28854:28900   */\n      swap2\n      pop\n        /* \"#utility.yul\":28623:28906   */\n      pop\n        /* \"#utility.yul\":28533:28906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28912:29663   */\n    tag_261:\n        /* \"#utility.yul\":29135:29139   */\n      0x00\n        /* \"#utility.yul\":29173:29176   */\n      0xa0\n        /* \"#utility.yul\":29162:29171   */\n      dup3\n        /* \"#utility.yul\":29158:29177   */\n      add\n        /* \"#utility.yul\":29150:29177   */\n      swap1\n      pop\n        /* \"#utility.yul\":29187:29258   */\n      tag_685\n        /* \"#utility.yul\":29255:29256   */\n      0x00\n        /* \"#utility.yul\":29244:29253   */\n      dup4\n        /* \"#utility.yul\":29240:29257   */\n      add\n        /* \"#utility.yul\":29231:29237   */\n      dup9\n        /* \"#utility.yul\":29187:29258   */\n      tag_341\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":29268:29340   */\n      tag_686\n        /* \"#utility.yul\":29336:29338   */\n      0x20\n        /* \"#utility.yul\":29325:29334   */\n      dup4\n        /* \"#utility.yul\":29321:29339   */\n      add\n        /* \"#utility.yul\":29312:29318   */\n      dup8\n        /* \"#utility.yul\":29268:29340   */\n      tag_341\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":29350:29422   */\n      tag_687\n        /* \"#utility.yul\":29418:29420   */\n      0x40\n        /* \"#utility.yul\":29407:29416   */\n      dup4\n        /* \"#utility.yul\":29403:29421   */\n      add\n        /* \"#utility.yul\":29394:29400   */\n      dup7\n        /* \"#utility.yul\":29350:29422   */\n      tag_305\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":29432:29504   */\n      tag_688\n        /* \"#utility.yul\":29500:29502   */\n      0x60\n        /* \"#utility.yul\":29489:29498   */\n      dup4\n        /* \"#utility.yul\":29485:29503   */\n      add\n        /* \"#utility.yul\":29476:29482   */\n      dup6\n        /* \"#utility.yul\":29432:29504   */\n      tag_305\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":29552:29561   */\n      dup2\n        /* \"#utility.yul\":29546:29550   */\n      dup2\n        /* \"#utility.yul\":29542:29562   */\n      sub\n        /* \"#utility.yul\":29536:29539   */\n      0x80\n        /* \"#utility.yul\":29525:29534   */\n      dup4\n        /* \"#utility.yul\":29521:29540   */\n      add\n        /* \"#utility.yul\":29514:29563   */\n      mstore\n        /* \"#utility.yul\":29580:29656   */\n      tag_689\n        /* \"#utility.yul\":29651:29655   */\n      dup2\n        /* \"#utility.yul\":29642:29648   */\n      dup5\n        /* \"#utility.yul\":29580:29656   */\n      tag_363\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":29572:29656   */\n      swap1\n      pop\n        /* \"#utility.yul\":28912:29663   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29669:29810   */\n    tag_364:\n        /* \"#utility.yul\":29725:29730   */\n      0x00\n        /* \"#utility.yul\":29756:29762   */\n      dup2\n        /* \"#utility.yul\":29750:29763   */\n      mload\n        /* \"#utility.yul\":29741:29763   */\n      swap1\n      pop\n        /* \"#utility.yul\":29772:29804   */\n      tag_691\n        /* \"#utility.yul\":29798:29803   */\n      dup2\n        /* \"#utility.yul\":29772:29804   */\n      tag_307\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":29669:29810   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29816:30165   */\n    tag_264:\n        /* \"#utility.yul\":29885:29891   */\n      0x00\n        /* \"#utility.yul\":29934:29936   */\n      0x20\n        /* \"#utility.yul\":29922:29931   */\n      dup3\n        /* \"#utility.yul\":29913:29920   */\n      dup5\n        /* \"#utility.yul\":29909:29932   */\n      sub\n        /* \"#utility.yul\":29905:29937   */\n      slt\n        /* \"#utility.yul\":29902:30021   */\n      iszero\n      tag_693\n      jumpi\n        /* \"#utility.yul\":29940:30019   */\n      tag_694\n      tag_296\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":29902:30021   */\n    tag_693:\n        /* \"#utility.yul\":30060:30061   */\n      0x00\n        /* \"#utility.yul\":30085:30148   */\n      tag_695\n        /* \"#utility.yul\":30140:30147   */\n      dup5\n        /* \"#utility.yul\":30131:30137   */\n      dup3\n        /* \"#utility.yul\":30120:30129   */\n      dup6\n        /* \"#utility.yul\":30116:30138   */\n      add\n        /* \"#utility.yul\":30085:30148   */\n      tag_364\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":30075:30148   */\n      swap2\n      pop\n        /* \"#utility.yul\":30031:30158   */\n      pop\n        /* \"#utility.yul\":29816:30165   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30171:31224   */\n    tag_280:\n        /* \"#utility.yul\":30494:30498   */\n      0x00\n        /* \"#utility.yul\":30532:30535   */\n      0xa0\n        /* \"#utility.yul\":30521:30530   */\n      dup3\n        /* \"#utility.yul\":30517:30536   */\n      add\n        /* \"#utility.yul\":30509:30536   */\n      swap1\n      pop\n        /* \"#utility.yul\":30546:30617   */\n      tag_697\n        /* \"#utility.yul\":30614:30615   */\n      0x00\n        /* \"#utility.yul\":30603:30612   */\n      dup4\n        /* \"#utility.yul\":30599:30616   */\n      add\n        /* \"#utility.yul\":30590:30596   */\n      dup9\n        /* \"#utility.yul\":30546:30617   */\n      tag_341\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":30627:30699   */\n      tag_698\n        /* \"#utility.yul\":30695:30697   */\n      0x20\n        /* \"#utility.yul\":30684:30693   */\n      dup4\n        /* \"#utility.yul\":30680:30698   */\n      add\n        /* \"#utility.yul\":30671:30677   */\n      dup8\n        /* \"#utility.yul\":30627:30699   */\n      tag_341\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":30746:30755   */\n      dup2\n        /* \"#utility.yul\":30740:30744   */\n      dup2\n        /* \"#utility.yul\":30736:30756   */\n      sub\n        /* \"#utility.yul\":30731:30733   */\n      0x40\n        /* \"#utility.yul\":30720:30729   */\n      dup4\n        /* \"#utility.yul\":30716:30734   */\n      add\n        /* \"#utility.yul\":30709:30757   */\n      mstore\n        /* \"#utility.yul\":30774:30882   */\n      tag_699\n        /* \"#utility.yul\":30877:30881   */\n      dup2\n        /* \"#utility.yul\":30868:30874   */\n      dup7\n        /* \"#utility.yul\":30774:30882   */\n      tag_340\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":30766:30882   */\n      swap1\n      pop\n        /* \"#utility.yul\":30929:30938   */\n      dup2\n        /* \"#utility.yul\":30923:30927   */\n      dup2\n        /* \"#utility.yul\":30919:30939   */\n      sub\n        /* \"#utility.yul\":30914:30916   */\n      0x60\n        /* \"#utility.yul\":30903:30912   */\n      dup4\n        /* \"#utility.yul\":30899:30917   */\n      add\n        /* \"#utility.yul\":30892:30940   */\n      mstore\n        /* \"#utility.yul\":30957:31065   */\n      tag_700\n        /* \"#utility.yul\":31060:31064   */\n      dup2\n        /* \"#utility.yul\":31051:31057   */\n      dup6\n        /* \"#utility.yul\":30957:31065   */\n      tag_340\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":30949:31065   */\n      swap1\n      pop\n        /* \"#utility.yul\":31113:31122   */\n      dup2\n        /* \"#utility.yul\":31107:31111   */\n      dup2\n        /* \"#utility.yul\":31103:31123   */\n      sub\n        /* \"#utility.yul\":31097:31100   */\n      0x80\n        /* \"#utility.yul\":31086:31095   */\n      dup4\n        /* \"#utility.yul\":31082:31101   */\n      add\n        /* \"#utility.yul\":31075:31124   */\n      mstore\n        /* \"#utility.yul\":31141:31217   */\n      tag_701\n        /* \"#utility.yul\":31212:31216   */\n      dup2\n        /* \"#utility.yul\":31203:31209   */\n      dup5\n        /* \"#utility.yul\":31141:31217   */\n      tag_363\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":31133:31217   */\n      swap1\n      pop\n        /* \"#utility.yul\":30171:31224   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122099a5ddd3865ef62feea394224940d9370aedbc1e6daf38b0abbe5fa7a07be65464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3024": {
									"entryPoint": null,
									"id": 3024,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_345": {
									"entryPoint": null,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_958": {
									"entryPoint": 228,
									"id": 958,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 249,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1098,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 647,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 444,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6778:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:14"
															},
															"nodeType": "YulIf",
															"src": "621:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:14",
														"type": ""
													}
												],
												"src": "568:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:14"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:14",
														"type": ""
													}
												],
												"src": "696:143:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:14"
															},
															"nodeType": "YulIf",
															"src": "932:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:14",
														"type": ""
													}
												],
												"src": "845:351:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1267:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1277:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1255:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1262:3:14",
														"type": ""
													}
												],
												"src": "1202:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1424:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1434:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1396:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1408:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1419:4:14",
														"type": ""
													}
												],
												"src": "1326:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1624:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1640:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1634:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1624:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1596:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1606:6:14",
														"type": ""
													}
												],
												"src": "1554:99:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1704:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1697:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1697:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1697:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1801:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1804:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1794:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1794:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1825:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1828:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1818:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1818:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1818:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1659:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1873:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1893:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1883:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1883:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1883:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1990:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1980:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2011:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2014:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2004:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2004:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "1845:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2082:269:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2092:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2106:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2112:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2102:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2102:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2123:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2153:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2159:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2149:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2149:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2127:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2200:51:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2214:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2228:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2224:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2224:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2214:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2180:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:26:14"
															},
															"nodeType": "YulIf",
															"src": "2170:81:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2303:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2317:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2317:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2317:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2267:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2290:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2298:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2287:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2287:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2264:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2264:38:14"
															},
															"nodeType": "YulIf",
															"src": "2261:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2066:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2075:6:14",
														"type": ""
													}
												],
												"src": "2031:320:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:11:14",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2429:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2421:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2449:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2452:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2442:14:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2442:14:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2465:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2486:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2473:9:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2473:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2465:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2398:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2406:4:14",
														"type": ""
													}
												],
												"src": "2357:141:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2548:49:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2558:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2576:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2583:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2572:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2572:14:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2588:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2568:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2568:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2531:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2541:6:14",
														"type": ""
													}
												],
												"src": "2504:93:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2656:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2666:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "2691:4:14"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2697:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2687:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "2666:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "2631:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2637:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "2647:8:14",
														"type": ""
													}
												],
												"src": "2603:107:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2792:317:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2802:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2823:10:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2835:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "2806:9:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2846:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2877:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2888:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2858:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "2850:4:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2964:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2995:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "3006:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2976:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "2964:8:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3024:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3037:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "3048:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3044:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3033:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3033:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3024:5:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3063:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "3087:8:14"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "3097:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3083:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3083:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3073:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3063:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2753:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "2760:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "2772:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2785:6:14",
														"type": ""
													}
												],
												"src": "2716:393:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3160:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3170:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3181:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3170:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3142:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3152:7:14",
														"type": ""
													}
												],
												"src": "3115:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3230:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3240:12:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3247:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3240:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3216:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3226:3:14",
														"type": ""
													}
												],
												"src": "3198:60:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3324:82:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3334:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3392:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3374:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3374:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3365:8:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3365:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3347:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3347:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3334:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3304:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3314:9:14",
														"type": ""
													}
												],
												"src": "3264:142:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3459:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3469:12:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3476:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3469:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3445:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3455:3:14",
														"type": ""
													}
												],
												"src": "3412:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3569:193:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3579:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "3634:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3603:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3603:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "3583:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3658:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3698:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3692:5:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3692:11:14"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3705:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "3737:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3713:23:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3713:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "3664:27:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3664:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3651:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3651:105:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3651:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3546:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3552:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "3560:7:14",
														"type": ""
													}
												],
												"src": "3493:269:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3817:24:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3827:8:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3834:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3827:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3813:3:14",
														"type": ""
													}
												],
												"src": "3768:73:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3900:136:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3910:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3924:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3924:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "3914:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4009:4:14"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4015:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "4023:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3965:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3965:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3965:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3886:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3892:6:14",
														"type": ""
													}
												],
												"src": "3847:189:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4092:136:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4159:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "4203:5:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4210:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "4173:29:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4173:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4173:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "4112:5:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4119:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4109:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4109:14:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4124:26:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4126:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "4139:5:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4146:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4135:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4135:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "4126:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4106:2:14",
																"statements": []
															},
															"src": "4102:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "4080:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4087:3:14",
														"type": ""
													}
												],
												"src": "4042:186:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4313:464:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4339:431:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4353:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "4401:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "4369:31:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4369:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "4357:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4420:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "4443:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "4471:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "4453:17:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4453:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4439:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4439:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "4424:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4640:27:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4642:23:14",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "4657:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "4642:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "4624:10:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4636:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "4621:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4621:18:14"
																		},
																		"nodeType": "YulIf",
																		"src": "4618:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "4709:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "4726:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "4754:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "4736:17:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4736:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4722:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4722:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "4680:28:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4680:80:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4680:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4330:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4335:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4327:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4327:11:14"
															},
															"nodeType": "YulIf",
															"src": "4324:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4289:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4296:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "4301:10:14",
														"type": ""
													}
												],
												"src": "4234:543:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4846:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4856:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4881:4:14"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4887:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4877:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4877:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4856:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4821:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4827:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4837:8:14",
														"type": ""
													}
												],
												"src": "4783:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4957:118:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4967:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5016:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "5019:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "5012:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5012:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5031:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "5027:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5027:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "4983:28:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4983:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4979:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4979:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4971:4:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5044:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5058:4:14"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "5064:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5054:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5054:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5044:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4934:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "4940:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4950:6:14",
														"type": ""
													}
												],
												"src": "4906:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5161:214:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5294:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5321:4:14"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "5327:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5302:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5302:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5294:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5340:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5351:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5361:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "5364:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5357:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5357:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5348:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5348:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "5340:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5142:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "5148:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "5156:4:14",
														"type": ""
													}
												],
												"src": "5080:295:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5472:1303:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5483:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5530:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5497:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5497:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "5487:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5619:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5621:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5621:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5621:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5591:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5599:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5588:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5588:30:14"
															},
															"nodeType": "YulIf",
															"src": "5585:56:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5651:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "5697:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5691:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "5665:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5665:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "5655:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5796:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "5802:6:14"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5810:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "5750:45:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:67:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5750:67:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5827:18:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5844:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "5831:9:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5855:17:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5868:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "5855:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5919:611:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5933:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5952:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5964:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5960:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5960:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5948:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5948:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "5937:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5984:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6030:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5998:31:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5998:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "5988:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6048:10:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6057:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "6052:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6116:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6141:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "6159:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "6164:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "6155:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6155:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "6149:5:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6149:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6134:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6134:42:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6134:42:14"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6193:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6207:6:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6215:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6203:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6203:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "6193:6:14"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6234:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "6251:9:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6262:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6247:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6247:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "6234:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6082:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6085:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6079:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6079:14:14"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "6094:21:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6096:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "6105:1:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6108:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6101:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6101:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6096:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "6075:3:14",
																					"statements": []
																				},
																				"src": "6071:208:14"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6315:156:14",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "6333:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6360:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6365:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6356:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6356:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6350:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6350:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "6337:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6400:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "6427:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "6442:6:14"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "6450:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "6438:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6438:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "6408:18:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6408:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6393:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6393:64:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6393:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6298:7:14"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "6307:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6295:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6295:19:14"
																				},
																				"nodeType": "YulIf",
																				"src": "6292:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6491:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "6505:6:14"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6513:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "6501:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6501:14:14"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6517:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6497:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6497:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6484:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6484:36:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6484:36:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5912:618:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5917:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6547:222:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6561:14:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6574:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6565:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6598:67:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6616:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6635:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6640:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6631:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6631:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6625:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6625:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6616:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6591:6:14"
																				},
																				"nodeType": "YulIf",
																				"src": "6588:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6685:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6744:5:14"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "6751:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6691:52:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6691:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6678:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6678:81:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6678:81:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6539:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5892:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5900:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5889:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5889:14:14"
															},
															"nodeType": "YulSwitch",
															"src": "5882:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5461:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5467:3:14",
														"type": ""
													}
												],
												"src": "5380:1395:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162002e6938038062002e69833981810160405281019062000036919062000221565b8060405180602001604052805f8152506200005781620000e460201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000cb575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000c2919062000262565b60405180910390fd5b620000dc81620000f960201b60201c565b5050620005c5565b8060029081620000f59190620004e1565b5050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620001eb82620001c0565b9050919050565b620001fd81620001df565b811462000208575f80fd5b50565b5f815190506200021b81620001f2565b92915050565b5f60208284031215620002395762000238620001bc565b5b5f62000248848285016200020b565b91505092915050565b6200025c81620001df565b82525050565b5f602082019050620002775f83018462000251565b92915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002f957607f821691505b6020821081036200030f576200030e620002b4565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003737fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000336565b6200037f868362000336565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620003c9620003c3620003bd8462000397565b620003a0565b62000397565b9050919050565b5f819050919050565b620003e483620003a9565b620003fc620003f382620003d0565b84845462000342565b825550505050565b5f90565b6200041262000404565b6200041f818484620003d9565b505050565b5b8181101562000446576200043a5f8262000408565b60018101905062000425565b5050565b601f82111562000495576200045f8162000315565b6200046a8462000327565b810160208510156200047a578190505b62000492620004898562000327565b83018262000424565b50505b505050565b5f82821c905092915050565b5f620004b75f19846008026200049a565b1980831691505092915050565b5f620004d18383620004a6565b9150826002028217905092915050565b620004ec826200027d565b67ffffffffffffffff81111562000508576200050762000287565b5b620005148254620002e1565b620005218282856200044a565b5f60209050601f83116001811462000557575f841562000542578287015190505b6200054e8582620004c4565b865550620005bd565b601f198416620005678662000315565b5f5b82811015620005905784890151825560018201915060208501945060208101905062000569565b86831015620005b05784890151620005ac601f891682620004a6565b8355505b6001600288020188555050505b505050505050565b61289680620005d35f395ff3fe608060405234801561000f575f80fd5b50600436106100e7575f3560e01c8063715018a61161008a578063e985e9c511610064578063e985e9c514610243578063f242432a14610273578063f2fde38b1461028f578063f5298aca146102ab576100e7565b8063715018a6146101ff5780638da5cb5b14610209578063a22cb46514610227576100e7565b80630e89341c116100c65780630e89341c146101675780632eb2c2d6146101975780634e1273f4146101b35780636b20c454146101e3576100e7565b8062fdd58e146100eb57806301ffc9a71461011b57806302fe53051461014b575b5f80fd5b610105600480360381019061010091906118af565b6102c7565b60405161011291906118fc565b60405180910390f35b6101356004803603810190610130919061196a565b61031c565b60405161014291906119af565b60405180910390f35b61016560048036038101906101609190611b04565b6103fd565b005b610181600480360381019061017c9190611b4b565b610411565b60405161018e9190611bf0565b60405180910390f35b6101b160048036038101906101ac9190611d72565b6104a3565b005b6101cd60048036038101906101c89190611efd565b61054a565b6040516101da919061202a565b60405180910390f35b6101fd60048036038101906101f8919061204a565b610657565b005b610207610703565b005b610211610716565b60405161021e91906120e1565b60405180910390f35b610241600480360381019061023c9190612124565b61073e565b005b61025d60048036038101906102589190612162565b610754565b60405161026a91906119af565b60405180910390f35b61028d600480360381019061028891906121a0565b6107e2565b005b6102a960048036038101906102a49190612233565b610889565b005b6102c560048036038101906102c0919061225e565b61090d565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103e657507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f657506103f5826109b9565b5b9050919050565b610405610a22565b61040e81610aa9565b50565b606060028054610420906122db565b80601f016020809104026020016040519081016040528092919081815260200182805461044c906122db565b80156104975780601f1061046e57610100808354040283529160200191610497565b820191905f5260205f20905b81548152906001019060200180831161047a57829003601f168201915b50505050509050919050565b5f6104ac610abc565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156104f157506104ef8682610754565b155b156105355780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161052c92919061230b565b60405180910390fd5b6105428686868686610ac3565b505050505050565b6060815183511461059657815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161058d929190612332565b60405180910390fd5b5f835167ffffffffffffffff8111156105b2576105b16119e0565b5b6040519080825280602002602001820160405280156105e05781602001602082028036833780820191505090505b5090505f5b845181101561064c5761061c6106048287610bb790919063ffffffff16565b6106178387610bca90919063ffffffff16565b6102c7565b82828151811061062f5761062e612359565b5b60200260200101818152505080610645906123b3565b90506105e5565b508091505092915050565b61065f610abc565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156106a857506106a6836106a1610abc565b610754565b155b156106f3576106b5610abc565b836040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016106ea92919061230b565b60405180910390fd5b6106fe838383610bdd565b505050565b61070b610a22565b6107145f610c6d565b565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610750610749610abc565b8383610d30565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f6107eb610abc565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610830575061082e8682610754565b155b156108745780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161086b92919061230b565b60405180910390fd5b6108818686868686610e99565b505050505050565b610891610a22565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610901575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108f891906120e1565b60405180910390fd5b61090a81610c6d565b50565b610915610abc565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561095e575061095c83610957610abc565b610754565b155b156109a95761096b610abc565b836040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016109a092919061230b565b60405180910390fd5b6109b4838383610f9f565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a2a610abc565b73ffffffffffffffffffffffffffffffffffffffff16610a48610716565b73ffffffffffffffffffffffffffffffffffffffff1614610aa757610a6b610abc565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a9e91906120e1565b60405180910390fd5b565b8060029081610ab89190612597565b5050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b33575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b2a91906120e1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610ba3575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610b9a91906120e1565b60405180910390fd5b610bb08585858585611041565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c4d575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610c4491906120e1565b60405180910390fd5b610c68835f848460405180602001604052805f815250611041565b505050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610da0575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610d9791906120e1565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e8c91906119af565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f09575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610f0091906120e1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610f79575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610f7091906120e1565b60405180910390fd5b5f80610f8585856110ed565b91509150610f968787848487611041565b50505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361100f575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161100691906120e1565b60405180910390fd5b5f8061101b84846110ed565b9150915061103a855f848460405180602001604052805f815250611041565b5050505050565b61104d8585858561111d565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146110e6575f611089610abc565b905060018451036110d5575f6110a85f86610bca90919063ffffffff16565b90505f6110be5f86610bca90919063ffffffff16565b90506110ce8389898585896114b3565b50506110e4565b6110e3818787878787611662565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b805182511461116757815181516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161115e929190612332565b60405180910390fd5b5f611170610abc565b90505f5b8351811015611372575f6111918286610bca90919063ffffffff16565b90505f6111a78386610bca90919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146112ca575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561127657888183856040517f03dee4c500000000000000000000000000000000000000000000000000000000815260040161126d9493929190612666565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461135f57805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461135791906126a9565b925050819055505b50508061136b906123b3565b9050611174565b50600183510361142d575f6113905f85610bca90919063ffffffff16565b90505f6113a65f85610bca90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161141e929190612332565b60405180910390a450506114ac565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516114a39291906126dc565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111561165a578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611513959493929190612763565b6020604051808303815f875af192505050801561154e57506040513d601f19601f8201168201806040525081019061154b91906127cf565b60015b6115cf573d805f811461157c576040519150601f19603f3d011682016040523d82523d5f602084013e611581565b606091505b505f8151036115c757846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016115be91906120e1565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461165857846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161164f91906120e1565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611809578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016116c29594939291906127fa565b6020604051808303815f875af19250505080156116fd57506040513d601f19601f820116820180604052508101906116fa91906127cf565b60015b61177e573d805f811461172b576040519150601f19603f3d011682016040523d82523d5f602084013e611730565b606091505b505f81510361177657846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161176d91906120e1565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461180757846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016117fe91906120e1565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61184b82611822565b9050919050565b61185b81611841565b8114611865575f80fd5b50565b5f8135905061187681611852565b92915050565b5f819050919050565b61188e8161187c565b8114611898575f80fd5b50565b5f813590506118a981611885565b92915050565b5f80604083850312156118c5576118c461181a565b5b5f6118d285828601611868565b92505060206118e38582860161189b565b9150509250929050565b6118f68161187c565b82525050565b5f60208201905061190f5f8301846118ed565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61194981611915565b8114611953575f80fd5b50565b5f8135905061196481611940565b92915050565b5f6020828403121561197f5761197e61181a565b5b5f61198c84828501611956565b91505092915050565b5f8115159050919050565b6119a981611995565b82525050565b5f6020820190506119c25f8301846119a0565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611a16826119d0565b810181811067ffffffffffffffff82111715611a3557611a346119e0565b5b80604052505050565b5f611a47611811565b9050611a538282611a0d565b919050565b5f67ffffffffffffffff821115611a7257611a716119e0565b5b611a7b826119d0565b9050602081019050919050565b828183375f83830152505050565b5f611aa8611aa384611a58565b611a3e565b905082815260208101848484011115611ac457611ac36119cc565b5b611acf848285611a88565b509392505050565b5f82601f830112611aeb57611aea6119c8565b5b8135611afb848260208601611a96565b91505092915050565b5f60208284031215611b1957611b1861181a565b5b5f82013567ffffffffffffffff811115611b3657611b3561181e565b5b611b4284828501611ad7565b91505092915050565b5f60208284031215611b6057611b5f61181a565b5b5f611b6d8482850161189b565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611bad578082015181840152602081019050611b92565b5f8484015250505050565b5f611bc282611b76565b611bcc8185611b80565b9350611bdc818560208601611b90565b611be5816119d0565b840191505092915050565b5f6020820190508181035f830152611c088184611bb8565b905092915050565b5f67ffffffffffffffff821115611c2a57611c296119e0565b5b602082029050602081019050919050565b5f80fd5b5f611c51611c4c84611c10565b611a3e565b90508083825260208201905060208402830185811115611c7457611c73611c3b565b5b835b81811015611c9d5780611c89888261189b565b845260208401935050602081019050611c76565b5050509392505050565b5f82601f830112611cbb57611cba6119c8565b5b8135611ccb848260208601611c3f565b91505092915050565b5f67ffffffffffffffff821115611cee57611ced6119e0565b5b611cf7826119d0565b9050602081019050919050565b5f611d16611d1184611cd4565b611a3e565b905082815260208101848484011115611d3257611d316119cc565b5b611d3d848285611a88565b509392505050565b5f82601f830112611d5957611d586119c8565b5b8135611d69848260208601611d04565b91505092915050565b5f805f805f60a08688031215611d8b57611d8a61181a565b5b5f611d9888828901611868565b9550506020611da988828901611868565b945050604086013567ffffffffffffffff811115611dca57611dc961181e565b5b611dd688828901611ca7565b935050606086013567ffffffffffffffff811115611df757611df661181e565b5b611e0388828901611ca7565b925050608086013567ffffffffffffffff811115611e2457611e2361181e565b5b611e3088828901611d45565b9150509295509295909350565b5f67ffffffffffffffff821115611e5757611e566119e0565b5b602082029050602081019050919050565b5f611e7a611e7584611e3d565b611a3e565b90508083825260208201905060208402830185811115611e9d57611e9c611c3b565b5b835b81811015611ec65780611eb28882611868565b845260208401935050602081019050611e9f565b5050509392505050565b5f82601f830112611ee457611ee36119c8565b5b8135611ef4848260208601611e68565b91505092915050565b5f8060408385031215611f1357611f1261181a565b5b5f83013567ffffffffffffffff811115611f3057611f2f61181e565b5b611f3c85828601611ed0565b925050602083013567ffffffffffffffff811115611f5d57611f5c61181e565b5b611f6985828601611ca7565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611fa58161187c565b82525050565b5f611fb68383611f9c565b60208301905092915050565b5f602082019050919050565b5f611fd882611f73565b611fe28185611f7d565b9350611fed83611f8d565b805f5b8381101561201d5781516120048882611fab565b975061200f83611fc2565b925050600181019050611ff0565b5085935050505092915050565b5f6020820190508181035f8301526120428184611fce565b905092915050565b5f805f606084860312156120615761206061181a565b5b5f61206e86828701611868565b935050602084013567ffffffffffffffff81111561208f5761208e61181e565b5b61209b86828701611ca7565b925050604084013567ffffffffffffffff8111156120bc576120bb61181e565b5b6120c886828701611ca7565b9150509250925092565b6120db81611841565b82525050565b5f6020820190506120f45f8301846120d2565b92915050565b61210381611995565b811461210d575f80fd5b50565b5f8135905061211e816120fa565b92915050565b5f806040838503121561213a5761213961181a565b5b5f61214785828601611868565b925050602061215885828601612110565b9150509250929050565b5f80604083850312156121785761217761181a565b5b5f61218585828601611868565b925050602061219685828601611868565b9150509250929050565b5f805f805f60a086880312156121b9576121b861181a565b5b5f6121c688828901611868565b95505060206121d788828901611868565b94505060406121e88882890161189b565b93505060606121f98882890161189b565b925050608086013567ffffffffffffffff81111561221a5761221961181e565b5b61222688828901611d45565b9150509295509295909350565b5f602082840312156122485761224761181a565b5b5f61225584828501611868565b91505092915050565b5f805f606084860312156122755761227461181a565b5b5f61228286828701611868565b93505060206122938682870161189b565b92505060406122a48682870161189b565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806122f257607f821691505b602082108103612305576123046122ae565b5b50919050565b5f60408201905061231e5f8301856120d2565b61232b60208301846120d2565b9392505050565b5f6040820190506123455f8301856118ed565b61235260208301846118ed565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6123bd8261187c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123ef576123ee612386565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026124567fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261241b565b612460868361241b565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61249b6124966124918461187c565b612478565b61187c565b9050919050565b5f819050919050565b6124b483612481565b6124c86124c0826124a2565b848454612427565b825550505050565b5f90565b6124dc6124d0565b6124e78184846124ab565b505050565b5b8181101561250a576124ff5f826124d4565b6001810190506124ed565b5050565b601f82111561254f57612520816123fa565b6125298461240c565b81016020851015612538578190505b61254c6125448561240c565b8301826124ec565b50505b505050565b5f82821c905092915050565b5f61256f5f1984600802612554565b1980831691505092915050565b5f6125878383612560565b9150826002028217905092915050565b6125a082611b76565b67ffffffffffffffff8111156125b9576125b86119e0565b5b6125c382546122db565b6125ce82828561250e565b5f60209050601f8311600181146125ff575f84156125ed578287015190505b6125f7858261257c565b86555061265e565b601f19841661260d866123fa565b5f5b828110156126345784890151825560018201915060208501945060208101905061260f565b86831015612651578489015161264d601f891682612560565b8355505b6001600288020188555050505b505050505050565b5f6080820190506126795f8301876120d2565b61268660208301866118ed565b61269360408301856118ed565b6126a060608301846118ed565b95945050505050565b5f6126b38261187c565b91506126be8361187c565b92508282019050808211156126d6576126d5612386565b5b92915050565b5f6040820190508181035f8301526126f48185611fce565b905081810360208301526127088184611fce565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61273582612711565b61273f818561271b565b935061274f818560208601611b90565b612758816119d0565b840191505092915050565b5f60a0820190506127765f8301886120d2565b61278360208301876120d2565b61279060408301866118ed565b61279d60608301856118ed565b81810360808301526127af818461272b565b90509695505050505050565b5f815190506127c981611940565b92915050565b5f602082840312156127e4576127e361181a565b5b5f6127f1848285016127bb565b91505092915050565b5f60a08201905061280d5f8301886120d2565b61281a60208301876120d2565b818103604083015261282c8186611fce565b905081810360608301526128408185611fce565b90508181036080830152612854818461272b565b9050969550505050505056fea264697066735822122099a5ddd3865ef62feea394224940d9370aedbc1e6daf38b0abbe5fa7a07be65464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2E69 CODESIZE SUB DUP1 PUSH3 0x2E69 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x221 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH3 0x57 DUP2 PUSH3 0xE4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xCB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC2 SWAP2 SWAP1 PUSH3 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xDC DUP2 PUSH3 0xF9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x5C5 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0xF5 SWAP2 SWAP1 PUSH3 0x4E1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1EB DUP3 PUSH3 0x1C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1FD DUP2 PUSH3 0x1DF JUMP JUMPDEST DUP2 EQ PUSH3 0x208 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x21B DUP2 PUSH3 0x1F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x239 JUMPI PUSH3 0x238 PUSH3 0x1BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x248 DUP5 DUP3 DUP6 ADD PUSH3 0x20B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x25C DUP2 PUSH3 0x1DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x277 PUSH0 DUP4 ADD DUP5 PUSH3 0x251 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x30F JUMPI PUSH3 0x30E PUSH3 0x2B4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x373 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x336 JUMP JUMPDEST PUSH3 0x37F DUP7 DUP4 PUSH3 0x336 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x3C9 PUSH3 0x3C3 PUSH3 0x3BD DUP5 PUSH3 0x397 JUMP JUMPDEST PUSH3 0x3A0 JUMP JUMPDEST PUSH3 0x397 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3E4 DUP4 PUSH3 0x3A9 JUMP JUMPDEST PUSH3 0x3FC PUSH3 0x3F3 DUP3 PUSH3 0x3D0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x342 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x412 PUSH3 0x404 JUMP JUMPDEST PUSH3 0x41F DUP2 DUP5 DUP5 PUSH3 0x3D9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x446 JUMPI PUSH3 0x43A PUSH0 DUP3 PUSH3 0x408 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x425 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x495 JUMPI PUSH3 0x45F DUP2 PUSH3 0x315 JUMP JUMPDEST PUSH3 0x46A DUP5 PUSH3 0x327 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x47A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x492 PUSH3 0x489 DUP6 PUSH3 0x327 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x424 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4B7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x49A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4D1 DUP4 DUP4 PUSH3 0x4A6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4EC DUP3 PUSH3 0x27D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x508 JUMPI PUSH3 0x507 PUSH3 0x287 JUMP JUMPDEST JUMPDEST PUSH3 0x514 DUP3 SLOAD PUSH3 0x2E1 JUMP JUMPDEST PUSH3 0x521 DUP3 DUP3 DUP6 PUSH3 0x44A JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x557 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x542 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x54E DUP6 DUP3 PUSH3 0x4C4 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5BD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x567 DUP7 PUSH3 0x315 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x590 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x569 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5B0 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5AC PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4A6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2896 DUP1 PUSH3 0x5D3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x2AB JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x227 JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x1E3 JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x18AF JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x18FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x196A JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x4A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x202A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH2 0x703 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x2162 JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x21A0 JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x2233 JUMP JUMPDEST PUSH2 0x889 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x225E JUMP JUMPDEST PUSH2 0x90D JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3E6 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F6 JUMPI POP PUSH2 0x3F5 DUP3 PUSH2 0x9B9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x405 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x40E DUP2 PUSH2 0xAA9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x420 SWAP1 PUSH2 0x22DB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44C SWAP1 PUSH2 0x22DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x497 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x497 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4AC PUSH2 0xABC JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4F1 JUMPI POP PUSH2 0x4EF DUP7 DUP3 PUSH2 0x754 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x535 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52C SWAP3 SWAP2 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x542 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xAC3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x596 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58D SWAP3 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B2 JUMPI PUSH2 0x5B1 PUSH2 0x19E0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5E0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x64C JUMPI PUSH2 0x61C PUSH2 0x604 DUP3 DUP8 PUSH2 0xBB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x617 DUP4 DUP8 PUSH2 0xBCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x62F JUMPI PUSH2 0x62E PUSH2 0x2359 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x645 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x5E5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x65F PUSH2 0xABC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x6A8 JUMPI POP PUSH2 0x6A6 DUP4 PUSH2 0x6A1 PUSH2 0xABC JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x6F3 JUMPI PUSH2 0x6B5 PUSH2 0xABC JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EA SWAP3 SWAP2 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6FE DUP4 DUP4 DUP4 PUSH2 0xBDD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x70B PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x714 PUSH0 PUSH2 0xC6D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x750 PUSH2 0x749 PUSH2 0xABC JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD30 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7EB PUSH2 0xABC JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x830 JUMPI POP PUSH2 0x82E DUP7 DUP3 PUSH2 0x754 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x874 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86B SWAP3 SWAP2 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x881 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xE99 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x891 PUSH2 0xA22 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x901 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F8 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90A DUP2 PUSH2 0xC6D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x915 PUSH2 0xABC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x95E JUMPI POP PUSH2 0x95C DUP4 PUSH2 0x957 PUSH2 0xABC JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x9A9 JUMPI PUSH2 0x96B PUSH2 0xABC JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A0 SWAP3 SWAP2 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B4 DUP4 DUP4 DUP4 PUSH2 0xF9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2A PUSH2 0xABC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA48 PUSH2 0x716 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAA7 JUMPI PUSH2 0xA6B PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9E SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xAB8 SWAP2 SWAP1 PUSH2 0x2597 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB33 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2A SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9A SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1041 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC4D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC44 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC68 DUP4 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1041 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE8C SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF09 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF00 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF79 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF70 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xF85 DUP6 DUP6 PUSH2 0x10ED JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xF96 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1041 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x100F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1006 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x101B DUP5 DUP5 PUSH2 0x10ED JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x103A DUP6 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1041 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x104D DUP6 DUP6 DUP6 DUP6 PUSH2 0x111D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10E6 JUMPI PUSH0 PUSH2 0x1089 PUSH2 0xABC JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x10D5 JUMPI PUSH0 PUSH2 0x10A8 PUSH0 DUP7 PUSH2 0xBCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x10BE PUSH0 DUP7 PUSH2 0xBCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x10CE DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x14B3 JUMP JUMPDEST POP POP PUSH2 0x10E4 JUMP JUMPDEST PUSH2 0x10E3 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1662 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1167 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115E SWAP3 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1170 PUSH2 0xABC JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1372 JUMPI PUSH0 PUSH2 0x1191 DUP3 DUP7 PUSH2 0xBCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x11A7 DUP4 DUP7 PUSH2 0xBCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12CA JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1276 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x135F JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1357 SWAP2 SWAP1 PUSH2 0x26A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x136B SWAP1 PUSH2 0x23B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1174 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x142D JUMPI PUSH0 PUSH2 0x1390 PUSH0 DUP6 PUSH2 0xBCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x13A6 PUSH0 DUP6 PUSH2 0xBCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x141E SWAP3 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x14AC JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x14A3 SWAP3 SWAP2 SWAP1 PUSH2 0x26DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x165A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1513 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2763 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x154E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x154B SWAP2 SWAP1 PUSH2 0x27CF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x15CF JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x157C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x15C7 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BE SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1658 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164F SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1809 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x16FD JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16FA SWAP2 SWAP1 PUSH2 0x27CF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x177E JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x172B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1776 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176D SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1807 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17FE SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x184B DUP3 PUSH2 0x1822 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x185B DUP2 PUSH2 0x1841 JUMP JUMPDEST DUP2 EQ PUSH2 0x1865 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1876 DUP2 PUSH2 0x1852 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x188E DUP2 PUSH2 0x187C JUMP JUMPDEST DUP2 EQ PUSH2 0x1898 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18A9 DUP2 PUSH2 0x1885 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18C5 JUMPI PUSH2 0x18C4 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D2 DUP6 DUP3 DUP7 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18E3 DUP6 DUP3 DUP7 ADD PUSH2 0x189B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F6 DUP2 PUSH2 0x187C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x190F PUSH0 DUP4 ADD DUP5 PUSH2 0x18ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1949 DUP2 PUSH2 0x1915 JUMP JUMPDEST DUP2 EQ PUSH2 0x1953 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1964 DUP2 PUSH2 0x1940 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x197F JUMPI PUSH2 0x197E PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x198C DUP5 DUP3 DUP6 ADD PUSH2 0x1956 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19A9 DUP2 PUSH2 0x1995 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19C2 PUSH0 DUP4 ADD DUP5 PUSH2 0x19A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1A16 DUP3 PUSH2 0x19D0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A35 JUMPI PUSH2 0x1A34 PUSH2 0x19E0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A47 PUSH2 0x1811 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A53 DUP3 DUP3 PUSH2 0x1A0D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A72 JUMPI PUSH2 0x1A71 PUSH2 0x19E0 JUMP JUMPDEST JUMPDEST PUSH2 0x1A7B DUP3 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA8 PUSH2 0x1AA3 DUP5 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x1A3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1AC4 JUMPI PUSH2 0x1AC3 PUSH2 0x19CC JUMP JUMPDEST JUMPDEST PUSH2 0x1ACF DUP5 DUP3 DUP6 PUSH2 0x1A88 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AEB JUMPI PUSH2 0x1AEA PUSH2 0x19C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AFB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B19 JUMPI PUSH2 0x1B18 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B36 JUMPI PUSH2 0x1B35 PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x1B42 DUP5 DUP3 DUP6 ADD PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B60 JUMPI PUSH2 0x1B5F PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B6D DUP5 DUP3 DUP6 ADD PUSH2 0x189B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BAD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B92 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC2 DUP3 PUSH2 0x1B76 JUMP JUMPDEST PUSH2 0x1BCC DUP2 DUP6 PUSH2 0x1B80 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BDC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B90 JUMP JUMPDEST PUSH2 0x1BE5 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C08 DUP2 DUP5 PUSH2 0x1BB8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C2A JUMPI PUSH2 0x1C29 PUSH2 0x19E0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1C51 PUSH2 0x1C4C DUP5 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0x1A3E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1C74 JUMPI PUSH2 0x1C73 PUSH2 0x1C3B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C9D JUMPI DUP1 PUSH2 0x1C89 DUP9 DUP3 PUSH2 0x189B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C76 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CBB JUMPI PUSH2 0x1CBA PUSH2 0x19C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CCB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CEE JUMPI PUSH2 0x1CED PUSH2 0x19E0 JUMP JUMPDEST JUMPDEST PUSH2 0x1CF7 DUP3 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D16 PUSH2 0x1D11 DUP5 PUSH2 0x1CD4 JUMP JUMPDEST PUSH2 0x1A3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1D32 JUMPI PUSH2 0x1D31 PUSH2 0x19CC JUMP JUMPDEST JUMPDEST PUSH2 0x1D3D DUP5 DUP3 DUP6 PUSH2 0x1A88 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D59 JUMPI PUSH2 0x1D58 PUSH2 0x19C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D69 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D04 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D8B JUMPI PUSH2 0x1D8A PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D98 DUP9 DUP3 DUP10 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1DA9 DUP9 DUP3 DUP10 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DCA JUMPI PUSH2 0x1DC9 PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x1DD6 DUP9 DUP3 DUP10 ADD PUSH2 0x1CA7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DF7 JUMPI PUSH2 0x1DF6 PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x1E03 DUP9 DUP3 DUP10 ADD PUSH2 0x1CA7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E24 JUMPI PUSH2 0x1E23 PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x1E30 DUP9 DUP3 DUP10 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E57 JUMPI PUSH2 0x1E56 PUSH2 0x19E0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7A PUSH2 0x1E75 DUP5 PUSH2 0x1E3D JUMP JUMPDEST PUSH2 0x1A3E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1E9D JUMPI PUSH2 0x1E9C PUSH2 0x1C3B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EC6 JUMPI DUP1 PUSH2 0x1EB2 DUP9 DUP3 PUSH2 0x1868 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E9F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EE4 JUMPI PUSH2 0x1EE3 PUSH2 0x19C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1EF4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E68 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F13 JUMPI PUSH2 0x1F12 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F30 JUMPI PUSH2 0x1F2F PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x1F3C DUP6 DUP3 DUP7 ADD PUSH2 0x1ED0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F5D JUMPI PUSH2 0x1F5C PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x1F69 DUP6 DUP3 DUP7 ADD PUSH2 0x1CA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FA5 DUP2 PUSH2 0x187C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB6 DUP4 DUP4 PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FD8 DUP3 PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0x1FE2 DUP2 DUP6 PUSH2 0x1F7D JUMP JUMPDEST SWAP4 POP PUSH2 0x1FED DUP4 PUSH2 0x1F8D JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x201D JUMPI DUP2 MLOAD PUSH2 0x2004 DUP9 DUP3 PUSH2 0x1FAB JUMP JUMPDEST SWAP8 POP PUSH2 0x200F DUP4 PUSH2 0x1FC2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1FF0 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2042 DUP2 DUP5 PUSH2 0x1FCE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2061 JUMPI PUSH2 0x2060 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x206E DUP7 DUP3 DUP8 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x208F JUMPI PUSH2 0x208E PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x209B DUP7 DUP3 DUP8 ADD PUSH2 0x1CA7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20BC JUMPI PUSH2 0x20BB PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x20C8 DUP7 DUP3 DUP8 ADD PUSH2 0x1CA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x20DB DUP2 PUSH2 0x1841 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x20D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2103 DUP2 PUSH2 0x1995 JUMP JUMPDEST DUP2 EQ PUSH2 0x210D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x211E DUP2 PUSH2 0x20FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x213A JUMPI PUSH2 0x2139 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2147 DUP6 DUP3 DUP7 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2158 DUP6 DUP3 DUP7 ADD PUSH2 0x2110 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2178 JUMPI PUSH2 0x2177 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2185 DUP6 DUP3 DUP7 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2196 DUP6 DUP3 DUP7 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x21B9 JUMPI PUSH2 0x21B8 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21C6 DUP9 DUP3 DUP10 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x21D7 DUP9 DUP3 DUP10 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x21E8 DUP9 DUP3 DUP10 ADD PUSH2 0x189B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x21F9 DUP9 DUP3 DUP10 ADD PUSH2 0x189B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x221A JUMPI PUSH2 0x2219 PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x2226 DUP9 DUP3 DUP10 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2248 JUMPI PUSH2 0x2247 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2255 DUP5 DUP3 DUP6 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2275 JUMPI PUSH2 0x2274 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2282 DUP7 DUP3 DUP8 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2293 DUP7 DUP3 DUP8 ADD PUSH2 0x189B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x22A4 DUP7 DUP3 DUP8 ADD PUSH2 0x189B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22F2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2305 JUMPI PUSH2 0x2304 PUSH2 0x22AE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x231E PUSH0 DUP4 ADD DUP6 PUSH2 0x20D2 JUMP JUMPDEST PUSH2 0x232B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2345 PUSH0 DUP4 ADD DUP6 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x2352 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18ED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x23BD DUP3 PUSH2 0x187C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x23EF JUMPI PUSH2 0x23EE PUSH2 0x2386 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2456 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x241B JUMP JUMPDEST PUSH2 0x2460 DUP7 DUP4 PUSH2 0x241B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x249B PUSH2 0x2496 PUSH2 0x2491 DUP5 PUSH2 0x187C JUMP JUMPDEST PUSH2 0x2478 JUMP JUMPDEST PUSH2 0x187C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B4 DUP4 PUSH2 0x2481 JUMP JUMPDEST PUSH2 0x24C8 PUSH2 0x24C0 DUP3 PUSH2 0x24A2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2427 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x24DC PUSH2 0x24D0 JUMP JUMPDEST PUSH2 0x24E7 DUP2 DUP5 DUP5 PUSH2 0x24AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x250A JUMPI PUSH2 0x24FF PUSH0 DUP3 PUSH2 0x24D4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x24ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x254F JUMPI PUSH2 0x2520 DUP2 PUSH2 0x23FA JUMP JUMPDEST PUSH2 0x2529 DUP5 PUSH2 0x240C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2538 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x254C PUSH2 0x2544 DUP6 PUSH2 0x240C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x24EC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x256F PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2554 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2587 DUP4 DUP4 PUSH2 0x2560 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25A0 DUP3 PUSH2 0x1B76 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25B9 JUMPI PUSH2 0x25B8 PUSH2 0x19E0 JUMP JUMPDEST JUMPDEST PUSH2 0x25C3 DUP3 SLOAD PUSH2 0x22DB JUMP JUMPDEST PUSH2 0x25CE DUP3 DUP3 DUP6 PUSH2 0x250E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x25FF JUMPI PUSH0 DUP5 ISZERO PUSH2 0x25ED JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x25F7 DUP6 DUP3 PUSH2 0x257C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x265E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x260D DUP7 PUSH2 0x23FA JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2634 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x260F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2651 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x264D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2560 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2679 PUSH0 DUP4 ADD DUP8 PUSH2 0x20D2 JUMP JUMPDEST PUSH2 0x2686 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x2693 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x26A0 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x18ED JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26B3 DUP3 PUSH2 0x187C JUMP JUMPDEST SWAP2 POP PUSH2 0x26BE DUP4 PUSH2 0x187C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26D6 JUMPI PUSH2 0x26D5 PUSH2 0x2386 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26F4 DUP2 DUP6 PUSH2 0x1FCE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2708 DUP2 DUP5 PUSH2 0x1FCE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2735 DUP3 PUSH2 0x2711 JUMP JUMPDEST PUSH2 0x273F DUP2 DUP6 PUSH2 0x271B JUMP JUMPDEST SWAP4 POP PUSH2 0x274F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B90 JUMP JUMPDEST PUSH2 0x2758 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2776 PUSH0 DUP4 ADD DUP9 PUSH2 0x20D2 JUMP JUMPDEST PUSH2 0x2783 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x20D2 JUMP JUMPDEST PUSH2 0x2790 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x279D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x18ED JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x27AF DUP2 DUP5 PUSH2 0x272B JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27C9 DUP2 PUSH2 0x1940 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27E4 JUMPI PUSH2 0x27E3 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27F1 DUP5 DUP3 DUP6 ADD PUSH2 0x27BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x280D PUSH0 DUP4 ADD DUP9 PUSH2 0x20D2 JUMP JUMPDEST PUSH2 0x281A PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x20D2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x282C DUP2 DUP7 PUSH2 0x1FCE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2840 DUP2 DUP6 PUSH2 0x1FCE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2854 DUP2 DUP5 PUSH2 0x272B JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xA5 0xDD 0xD3 DUP7 0x5E 0xF6 0x2F 0xEE LOG3 SWAP5 0x22 0x49 BLOCKHASH 0xD9 CALLDATACOPY EXP 0xED 0xBC 0x1E PUSH14 0xAF38B0ABBE5FA7A07BE65464736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "251:225:13:-:0;;;311:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;365:12;1251:62:2;;;;;;;;;;;;1293:13;1301:4;1293:7;;;:13;;:::i;:::-;1251:62;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;311:70:13;251:225;;10282:86:2;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:14:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:99::-;1606:6;1640:5;1634:12;1624:22;;1554:99;;;:::o;1659:180::-;1707:77;1704:1;1697:88;1804:4;1801:1;1794:15;1828:4;1825:1;1818:15;1845:180;1893:77;1890:1;1883:88;1990:4;1987:1;1980:15;2014:4;2011:1;2004:15;2031:320;2075:6;2112:1;2106:4;2102:12;2092:22;;2159:1;2153:4;2149:12;2180:18;2170:81;;2236:4;2228:6;2224:17;2214:27;;2170:81;2298:2;2290:6;2287:14;2267:18;2264:38;2261:84;;2317:18;;:::i;:::-;2261:84;2082:269;2031:320;;;:::o;2357:141::-;2406:4;2429:3;2421:11;;2452:3;2449:1;2442:14;2486:4;2483:1;2473:18;2465:26;;2357:141;;;:::o;2504:93::-;2541:6;2588:2;2583;2576:5;2572:14;2568:23;2558:33;;2504:93;;;:::o;2603:107::-;2647:8;2697:5;2691:4;2687:16;2666:37;;2603:107;;;;:::o;2716:393::-;2785:6;2835:1;2823:10;2819:18;2858:97;2888:66;2877:9;2858:97;:::i;:::-;2976:39;3006:8;2995:9;2976:39;:::i;:::-;2964:51;;3048:4;3044:9;3037:5;3033:21;3024:30;;3097:4;3087:8;3083:19;3076:5;3073:30;3063:40;;2792:317;;2716:393;;;;;:::o;3115:77::-;3152:7;3181:5;3170:16;;3115:77;;;:::o;3198:60::-;3226:3;3247:5;3240:12;;3198:60;;;:::o;3264:142::-;3314:9;3347:53;3365:34;3374:24;3392:5;3374:24;:::i;:::-;3365:34;:::i;:::-;3347:53;:::i;:::-;3334:66;;3264:142;;;:::o;3412:75::-;3455:3;3476:5;3469:12;;3412:75;;;:::o;3493:269::-;3603:39;3634:7;3603:39;:::i;:::-;3664:91;3713:41;3737:16;3713:41;:::i;:::-;3705:6;3698:4;3692:11;3664:91;:::i;:::-;3658:4;3651:105;3569:193;3493:269;;;:::o;3768:73::-;3813:3;3768:73;:::o;3847:189::-;3924:32;;:::i;:::-;3965:65;4023:6;4015;4009:4;3965:65;:::i;:::-;3900:136;3847:189;;:::o;4042:186::-;4102:120;4119:3;4112:5;4109:14;4102:120;;;4173:39;4210:1;4203:5;4173:39;:::i;:::-;4146:1;4139:5;4135:13;4126:22;;4102:120;;;4042:186;;:::o;4234:543::-;4335:2;4330:3;4327:11;4324:446;;;4369:38;4401:5;4369:38;:::i;:::-;4453:29;4471:10;4453:29;:::i;:::-;4443:8;4439:44;4636:2;4624:10;4621:18;4618:49;;;4657:8;4642:23;;4618:49;4680:80;4736:22;4754:3;4736:22;:::i;:::-;4726:8;4722:37;4709:11;4680:80;:::i;:::-;4339:431;;4324:446;4234:543;;;:::o;4783:117::-;4837:8;4887:5;4881:4;4877:16;4856:37;;4783:117;;;;:::o;4906:169::-;4950:6;4983:51;5031:1;5027:6;5019:5;5016:1;5012:13;4983:51;:::i;:::-;4979:56;5064:4;5058;5054:15;5044:25;;4957:118;4906:169;;;;:::o;5080:295::-;5156:4;5302:29;5327:3;5321:4;5302:29;:::i;:::-;5294:37;;5364:3;5361:1;5357:11;5351:4;5348:21;5340:29;;5080:295;;;;:::o;5380:1395::-;5497:37;5530:3;5497:37;:::i;:::-;5599:18;5591:6;5588:30;5585:56;;;5621:18;;:::i;:::-;5585:56;5665:38;5697:4;5691:11;5665:38;:::i;:::-;5750:67;5810:6;5802;5796:4;5750:67;:::i;:::-;5844:1;5868:4;5855:17;;5900:2;5892:6;5889:14;5917:1;5912:618;;;;6574:1;6591:6;6588:77;;;6640:9;6635:3;6631:19;6625:26;6616:35;;6588:77;6691:67;6751:6;6744:5;6691:67;:::i;:::-;6685:4;6678:81;6547:222;5882:887;;5912:618;5964:4;5960:9;5952:6;5948:22;5998:37;6030:4;5998:37;:::i;:::-;6057:1;6071:208;6085:7;6082:1;6079:14;6071:208;;;6164:9;6159:3;6155:19;6149:26;6141:6;6134:42;6215:1;6207:6;6203:14;6193:24;;6262:2;6251:9;6247:18;6234:31;;6108:4;6105:1;6101:12;6096:17;;6071:208;;;6307:6;6298:7;6295:19;6292:179;;;6365:9;6360:3;6356:19;6350:26;6408:48;6450:4;6442:6;6438:17;6427:9;6408:48;:::i;:::-;6400:6;6393:64;6315:156;6292:179;6517:1;6513;6505:6;6501:14;6497:22;6491:4;6484:36;5919:611;;;5882:887;;5472:1303;;;5380:1395;;:::o;251:225:13:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_1334": {
									"entryPoint": 4333,
									"id": 1334,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_burnBatch_1140": {
									"entryPoint": 3037,
									"id": 1140,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1101": {
									"entryPoint": 3999,
									"id": 1101,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2594,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1318": {
									"entryPoint": 5730,
									"id": 1318,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1248": {
									"entryPoint": 5299,
									"id": 1248,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1791": {
									"entryPoint": 2748,
									"id": 1791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_947": {
									"entryPoint": 2755,
									"id": 947,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_892": {
									"entryPoint": 3737,
									"id": 892,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1180": {
									"entryPoint": 3376,
									"id": 1180,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setURI_958": {
									"entryPoint": 2729,
									"id": 958,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3181,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_826": {
									"entryPoint": 4161,
									"id": 826,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_750": {
									"entryPoint": 4381,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_474": {
									"entryPoint": 1354,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_404": {
									"entryPoint": 711,
									"id": 404,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@burnBatch_1579": {
									"entryPoint": 1623,
									"id": 1579,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@burn_1542": {
									"entryPoint": 2317,
									"id": 1542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isApprovedForAll_507": {
									"entryPoint": 1876,
									"id": 507,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1814,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1795,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_597": {
									"entryPoint": 1187,
									"id": 597,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_551": {
									"entryPoint": 2018,
									"id": 551,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_490": {
									"entryPoint": 1854,
									"id": 490,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setURI_3036": {
									"entryPoint": 1021,
									"id": 3036,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1934": {
									"entryPoint": 2489,
									"id": 1934,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_376": {
									"entryPoint": 796,
									"id": 376,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2185,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unsafeMemoryAccess_1765": {
									"entryPoint": 3018,
									"id": 1765,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1778": {
									"entryPoint": 2999,
									"id": 1778,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_387": {
									"entryPoint": 1041,
									"id": 387,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7784,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7231,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7428,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 6806,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 6871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 7538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 8608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 8798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 6916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 8107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 8092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 8971,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10234,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10083,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9830,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9948,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9010,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6161,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 6744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9486,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6792,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7056,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9094,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8878,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9049,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6624,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6600,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7227,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6604,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6174,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6170,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9255,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9387,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9424,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:31227:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:14"
															},
															"nodeType": "YulIf",
															"src": "621:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:14",
														"type": ""
													}
												],
												"src": "568:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:14",
														"type": ""
													}
												],
												"src": "696:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:14",
														"type": ""
													}
												],
												"src": "841:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:14"
															},
															"nodeType": "YulIf",
															"src": "977:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:14",
														"type": ""
													}
												],
												"src": "924:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:14",
														"type": ""
													}
												],
												"src": "1052:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:14"
															},
															"nodeType": "YulIf",
															"src": "1290:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:14",
														"type": ""
													}
												],
												"src": "1197:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:14",
														"type": ""
													}
												],
												"src": "1677:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:14",
														"type": ""
													}
												],
												"src": "1801:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:105:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2083:89:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:14",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:78:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2055:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2065:7:14",
														"type": ""
													}
												],
												"src": "2029:149:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2226:78:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2282:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:42:14"
															},
															"nodeType": "YulIf",
															"src": "2236:62:14"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2219:5:14",
														"type": ""
													}
												],
												"src": "2184:120:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2361:86:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2371:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2339:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2347:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2355:5:14",
														"type": ""
													}
												],
												"src": "2310:137:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:262:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2564:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:32:14"
															},
															"nodeType": "YulIf",
															"src": "2528:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "2657:116:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2701:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2488:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2499:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2511:6:14",
														"type": ""
													}
												],
												"src": "2453:327:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2828:48:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2838:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2810:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2820:7:14",
														"type": ""
													}
												],
												"src": "2786:90:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2941:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2929:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2936:3:14",
														"type": ""
													}
												],
												"src": "2882:109:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3089:118:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3099:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3061:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3073:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3084:4:14",
														"type": ""
													}
												],
												"src": "2997:210:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3302:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3322:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3312:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3312:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3312:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3213:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3425:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3442:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3445:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3435:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3435:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3435:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3336:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3507:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3517:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3535:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3542:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3531:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3531:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3551:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3547:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3547:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3527:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3527:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3517:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3490:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3500:6:14",
														"type": ""
													}
												],
												"src": "3459:102:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3612:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3605:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3605:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3605:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3709:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3712:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3702:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3702:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3702:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3733:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3736:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3726:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3726:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3726:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3567:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3796:238:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3806:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3828:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3858:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3836:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3836:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3824:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3824:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3810:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3975:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3977:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3977:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3918:10:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3930:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3915:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3954:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3966:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3951:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3951:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3912:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:62:14"
															},
															"nodeType": "YulIf",
															"src": "3909:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4013:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4017:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4006:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4006:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4006:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3782:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3790:4:14",
														"type": ""
													}
												],
												"src": "3753:281:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4081:88:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4091:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "4101:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4101:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4091:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4150:6:14"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4158:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4130:19:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4130:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4130:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4065:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4074:6:14",
														"type": ""
													}
												],
												"src": "4040:129:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4242:241:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4347:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4349:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4349:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4349:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4319:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4327:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4316:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:30:14"
															},
															"nodeType": "YulIf",
															"src": "4313:56:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4379:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4409:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "4387:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4453:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4465:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4471:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4453:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4226:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4237:4:14",
														"type": ""
													}
												],
												"src": "4175:308:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4553:82:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4576:3:14"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4581:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4586:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4563:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4563:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4613:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4618:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4609:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4609:16:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4627:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4602:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4602:27:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4602:27:14"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4535:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4540:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4545:6:14",
														"type": ""
													}
												],
												"src": "4489:146:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4725:341:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4735:75:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4802:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4760:41:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4760:49:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4744:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4744:66:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4735:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4826:5:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4833:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4819:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4819:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4819:21:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4849:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4864:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4871:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4860:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4860:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4853:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4914:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "4916:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4916:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4916:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4895:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4900:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4891:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4891:16:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4909:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4888:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4888:25:14"
															},
															"nodeType": "YulIf",
															"src": "4885:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5043:3:14"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5048:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5053:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5006:36:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5006:54:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5006:54:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4698:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4703:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4711:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4719:5:14",
														"type": ""
													}
												],
												"src": "4641:425:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5148:278:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5197:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5199:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5199:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5199:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5176:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5184:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5172:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5172:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5191:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5168:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5168:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5161:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5161:35:14"
															},
															"nodeType": "YulIf",
															"src": "5158:122:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5289:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5316:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5303:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5303:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5293:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5332:88:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5393:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5401:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5389:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5389:17:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5408:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5416:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5341:47:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5341:79:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5332:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5126:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5134:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5142:5:14",
														"type": ""
													}
												],
												"src": "5086:340:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5508:433:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5554:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5556:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5556:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5556:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5529:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5538:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5525:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5525:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5550:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5521:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5521:32:14"
															},
															"nodeType": "YulIf",
															"src": "5518:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "5647:287:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5662:45:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5693:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5704:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5689:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5689:17:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5676:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5676:31:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5666:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5754:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5756:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5756:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5756:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5726:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5734:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5723:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5723:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "5720:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5851:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5896:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5907:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5892:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5892:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5916:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5861:30:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5861:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5851:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5478:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5489:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5501:6:14",
														"type": ""
													}
												],
												"src": "5432:509:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6013:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6059:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6061:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6061:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6061:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6034:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6043:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6030:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6030:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6055:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6026:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6026:32:14"
															},
															"nodeType": "YulIf",
															"src": "6023:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "6152:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6167:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6181:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6171:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6196:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6231:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6242:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6227:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6227:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6251:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6206:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6206:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6196:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5983:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5994:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6006:6:14",
														"type": ""
													}
												],
												"src": "5947:329:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6341:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6352:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6368:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6362:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6362:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6352:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6324:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6334:6:14",
														"type": ""
													}
												],
												"src": "6282:99:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6483:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6500:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6505:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6493:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6493:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6493:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6521:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6540:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6545:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6536:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6536:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6521:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6455:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6460:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6471:11:14",
														"type": ""
													}
												],
												"src": "6387:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6624:184:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6634:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6643:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6638:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6703:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6728:3:14"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6733:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6724:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6724:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "6747:3:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6752:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6743:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6743:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6737:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6737:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6717:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6717:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6717:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6664:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6667:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6661:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6661:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6675:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6677:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6686:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6689:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6682:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6682:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6677:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6657:3:14",
																"statements": []
															},
															"src": "6653:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6786:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6791:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6782:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6782:16:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6800:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6775:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:27:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6775:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6606:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6611:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6616:6:14",
														"type": ""
													}
												],
												"src": "6562:246:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6906:285:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6916:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6963:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6930:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6930:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6920:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6978:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7044:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7049:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6985:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6985:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6978:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7104:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7111:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7100:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7100:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7118:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7123:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7065:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7065:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7065:65:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7139:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7150:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7177:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7155:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7155:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7146:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7146:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7139:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6887:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6894:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6902:3:14",
														"type": ""
													}
												],
												"src": "6814:377:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7315:195:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7325:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7337:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7348:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7333:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7333:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7325:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7372:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7383:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7368:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7368:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7391:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7397:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7387:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7387:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7361:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7361:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7361:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7417:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7489:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7498:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7425:63:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7425:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7417:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7287:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7299:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7310:4:14",
														"type": ""
													}
												],
												"src": "7197:313:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7598:229:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7703:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7705:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7705:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7705:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7675:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7683:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7672:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7672:30:14"
															},
															"nodeType": "YulIf",
															"src": "7669:56:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7735:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7747:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7755:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7743:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7743:17:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7735:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7797:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7809:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7815:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7805:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7805:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7797:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7582:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7593:4:14",
														"type": ""
													}
												],
												"src": "7516:311:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7922:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7939:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7932:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7932:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7932:12:14"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "7833:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8075:608:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8085:90:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8167:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8110:56:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8110:64:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8094:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8094:81:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8085:5:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8184:16:14",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "8195:5:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8188:3:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8217:5:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8224:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8210:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8210:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8210:21:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8240:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8251:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8258:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8247:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8247:16:14"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "8240:3:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8273:44:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8291:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8303:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8311:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8299:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8299:17:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8287:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8287:30:14"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "8277:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8345:103:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "8359:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8359:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8359:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8332:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8340:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8329:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8329:15:14"
															},
															"nodeType": "YulIf",
															"src": "8326:122:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8533:144:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8548:21:14",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:14"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "8552:10:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "8590:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "8616:10:14"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "8628:3:14"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "8595:20:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8595:37:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8583:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8583:50:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8583:50:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8646:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "8657:3:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8662:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8653:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8653:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8646:3:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8486:3:14"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8491:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8483:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8483:15:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8499:25:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8501:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "8512:3:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8517:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8508:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8501:3:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8461:21:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8463:17:14",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "8474:6:14"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "8467:3:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8457:220:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8045:6:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8053:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8061:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8069:5:14",
														"type": ""
													}
												],
												"src": "7973:710:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8783:293:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8832:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8834:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8834:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8834:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8811:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8819:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8807:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8807:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8826:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8803:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8803:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8796:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8796:35:14"
															},
															"nodeType": "YulIf",
															"src": "8793:122:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8924:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8951:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8938:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8938:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8928:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8967:103:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9043:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9051:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9039:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9039:17:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9058:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9066:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8976:62:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8976:94:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8967:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8761:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8769:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8777:5:14",
														"type": ""
													}
												],
												"src": "8706:370:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9148:241:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9253:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9255:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9255:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9255:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9225:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9233:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9222:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9222:30:14"
															},
															"nodeType": "YulIf",
															"src": "9219:56:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9285:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9315:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "9293:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9293:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9285:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9359:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9371:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9377:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9367:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9367:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9359:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9132:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9143:4:14",
														"type": ""
													}
												],
												"src": "9082:307:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9478:340:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9488:74:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9554:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9513:40:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9513:48:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "9497:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9497:65:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "9488:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "9578:5:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9585:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9571:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9571:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9571:21:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9601:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "9616:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9623:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9612:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9612:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "9605:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9666:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "9668:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9668:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9668:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "9647:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9652:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9643:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9643:16:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9661:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9640:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9640:25:14"
															},
															"nodeType": "YulIf",
															"src": "9637:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "9795:3:14"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "9800:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9805:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9758:36:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9758:54:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9758:54:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9451:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9456:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9464:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "9472:5:14",
														"type": ""
													}
												],
												"src": "9395:423:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9898:277:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9947:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "9949:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9949:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9949:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9926:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9934:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9922:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9922:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "9941:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "9918:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9918:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9911:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9911:35:14"
															},
															"nodeType": "YulIf",
															"src": "9908:122:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10039:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10066:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10053:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10053:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10043:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10082:87:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10142:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10150:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10138:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10138:17:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10157:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10165:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10091:46:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10091:78:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10082:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9876:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9884:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "9892:5:14",
														"type": ""
													}
												],
												"src": "9837:338:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10374:1316:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10421:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10423:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10423:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10423:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10395:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10404:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10391:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10391:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10416:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10387:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10387:33:14"
															},
															"nodeType": "YulIf",
															"src": "10384:120:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "10514:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10529:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10543:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10533:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10558:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10593:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10604:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10589:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10589:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10613:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10568:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10568:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10558:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10641:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10656:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10670:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10660:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10686:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10721:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10732:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10717:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10717:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10741:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10696:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10696:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10686:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10769:303:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10784:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10815:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10826:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10811:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10811:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10798:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10798:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10788:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10877:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "10879:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10879:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10879:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10849:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10857:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10846:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10846:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "10843:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10974:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11034:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11045:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11030:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11030:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11054:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10984:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10984:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "10974:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11082:303:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11097:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11128:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11139:2:14",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11124:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11124:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11111:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11111:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11101:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11190:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11192:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11192:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11192:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11162:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11170:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11159:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11159:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "11156:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11287:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11347:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11358:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11343:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11343:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11367:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11297:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11297:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "11287:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11395:288:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11410:47:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11441:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11452:3:14",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11437:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11437:19:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11424:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11424:33:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11414:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11504:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11506:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11506:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11506:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11476:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11484:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11473:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11473:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "11470:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11601:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11645:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11656:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11641:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11641:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11665:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11611:29:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11611:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "11601:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10312:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10323:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10335:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10343:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10351:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10359:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10367:6:14",
														"type": ""
													}
												],
												"src": "10181:1509:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11778:229:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11883:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "11885:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11885:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11885:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11855:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11863:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11852:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11852:30:14"
															},
															"nodeType": "YulIf",
															"src": "11849:56:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11915:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11927:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11935:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11923:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11923:17:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "11915:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11977:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "11989:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11995:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11985:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11985:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "11977:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11762:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "11773:4:14",
														"type": ""
													}
												],
												"src": "11696:311:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12132:608:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12142:90:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12224:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12167:56:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12167:64:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "12151:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12151:81:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "12142:5:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12241:16:14",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "12252:5:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "12245:3:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "12274:5:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12281:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12267:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12267:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12267:21:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12297:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "12308:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12315:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12304:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12304:16:14"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "12297:3:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12330:44:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12348:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12360:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12368:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "12356:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12356:17:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12344:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12344:30:14"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "12334:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12402:103:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "12416:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12416:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12416:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "12389:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "12397:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12386:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12386:15:14"
															},
															"nodeType": "YulIf",
															"src": "12383:122:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12590:144:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12605:21:14",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "12623:3:14"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "12609:10:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "12647:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "12673:10:14"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "12685:3:14"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "12652:20:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12652:37:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12640:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12640:50:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12640:50:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12703:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "12714:3:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12719:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12710:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12710:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "12703:3:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "12543:3:14"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "12548:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12540:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12540:15:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12556:25:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12558:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "12569:3:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12574:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12565:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12565:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "12558:3:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12518:21:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12520:17:14",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "12531:6:14"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "12524:3:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "12514:220:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12102:6:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12110:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12118:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "12126:5:14",
														"type": ""
													}
												],
												"src": "12030:710:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12840:293:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12889:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "12891:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12891:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12891:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12868:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12876:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12864:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12864:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "12883:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "12860:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12860:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12853:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12853:35:14"
															},
															"nodeType": "YulIf",
															"src": "12850:122:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12981:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13008:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "12995:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12995:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12985:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13024:103:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13100:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13108:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13096:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13096:17:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13115:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "13123:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13033:62:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13033:94:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "13024:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12818:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12826:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "12834:5:14",
														"type": ""
													}
												],
												"src": "12763:370:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13272:761:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13318:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13320:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13320:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13320:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13293:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13302:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13289:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13289:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13314:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13285:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13285:32:14"
															},
															"nodeType": "YulIf",
															"src": "13282:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "13411:302:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13426:45:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13457:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13468:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13453:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13453:17:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "13440:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13440:31:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13430:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13518:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "13520:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13520:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "13520:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13490:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13498:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13487:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13487:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "13484:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13615:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13675:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13686:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13671:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13671:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13695:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "13625:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13625:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13615:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13723:303:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13738:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13769:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13780:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13765:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13765:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "13752:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13752:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13742:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13831:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "13833:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13833:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "13833:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13803:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13811:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13800:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13800:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "13797:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13928:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13988:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13999:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13984:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13984:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14008:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "13938:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13938:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "13928:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13234:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13245:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13257:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13265:6:14",
														"type": ""
													}
												],
												"src": "13139:894:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14113:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14124:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14140:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14134:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14134:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14124:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14096:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14106:6:14",
														"type": ""
													}
												],
												"src": "14039:114:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14270:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14287:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14292:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14280:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14280:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14280:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14308:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14327:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14332:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14323:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14323:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14308:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14242:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14247:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14258:11:14",
														"type": ""
													}
												],
												"src": "14159:184:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14421:60:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14431:11:14",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "14439:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "14431:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14452:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "14464:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14469:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14460:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14460:14:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "14452:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "14408:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14416:4:14",
														"type": ""
													}
												],
												"src": "14349:132:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14542:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14559:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14582:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "14564:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14564:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14552:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14552:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14552:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14530:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14537:3:14",
														"type": ""
													}
												],
												"src": "14487:108:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14681:99:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14725:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14733:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14691:33:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14691:46:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14691:46:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14746:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14764:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14769:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14760:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14760:14:14"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "14746:10:14"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14654:6:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14662:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "14670:10:14",
														"type": ""
													}
												],
												"src": "14601:179:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14861:38:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14871:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "14883:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14888:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14879:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14879:14:14"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "14871:4:14"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "14848:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "14856:4:14",
														"type": ""
													}
												],
												"src": "14786:113:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15059:608:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15069:68:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15131:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15083:47:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15083:54:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15073:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15146:93:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15227:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15232:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15153:73:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15153:86:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15146:3:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15248:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15313:5:14"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15263:49:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15263:56:14"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "15252:7:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15328:21:14",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "15342:7:14"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "15332:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15418:224:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15432:34:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "15459:6:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "15453:5:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15453:13:14"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "15436:13:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15479:70:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "15530:13:14"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "15545:3:14"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "15486:43:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15486:63:14"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15479:3:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15562:70:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "15625:6:14"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "15572:52:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15572:60:14"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15562:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15380:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15383:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15377:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15377:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15391:18:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15393:14:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15402:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15405:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15398:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15398:9:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15393:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15362:14:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15364:10:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "15373:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "15368:1:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "15358:284:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15651:10:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "15658:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15651:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15038:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15045:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15054:3:14",
														"type": ""
													}
												],
												"src": "14935:732:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15821:225:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15831:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15843:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15854:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15839:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15839:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15831:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15878:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15889:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15874:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15874:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15897:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15903:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15893:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15893:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15867:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15867:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15867:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15923:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16025:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16034:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15931:93:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15931:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15923:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15793:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15805:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15816:4:14",
														"type": ""
													}
												],
												"src": "15673:373:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16202:889:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16248:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16250:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16250:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16250:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16223:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16232:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16219:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16219:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16244:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16215:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16215:32:14"
															},
															"nodeType": "YulIf",
															"src": "16212:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "16341:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16356:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16370:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16360:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16385:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16420:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16431:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16416:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16416:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16440:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16395:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16395:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16385:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16468:303:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16483:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16514:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16525:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16510:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16510:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "16497:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16497:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16487:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16576:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16578:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16578:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16578:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16548:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16556:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16545:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16545:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "16542:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16673:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16733:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16744:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16729:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16729:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16753:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16683:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16683:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "16673:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16781:303:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16796:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16827:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16838:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16823:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16823:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "16810:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16810:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16800:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16889:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16891:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16891:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16891:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16861:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16869:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16858:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16858:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "16855:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16986:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17046:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17057:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17042:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17042:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17066:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16996:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16996:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "16986:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16156:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16167:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16179:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16187:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16195:6:14",
														"type": ""
													}
												],
												"src": "16052:1039:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17162:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17179:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17202:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "17184:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17184:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17172:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17172:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17172:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17150:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17157:3:14",
														"type": ""
													}
												],
												"src": "17097:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17319:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17329:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17341:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17352:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17337:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17337:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17329:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17409:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17422:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17433:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17418:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17418:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17365:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17365:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17365:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17291:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17303:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17314:4:14",
														"type": ""
													}
												],
												"src": "17221:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17489:76:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17543:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17552:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17555:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17545:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17545:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17545:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17512:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17534:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "17519:14:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17519:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17509:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17509:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17502:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17502:40:14"
															},
															"nodeType": "YulIf",
															"src": "17499:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17482:5:14",
														"type": ""
													}
												],
												"src": "17449:116:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17620:84:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17630:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17652:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "17639:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17639:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17630:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17692:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "17668:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17668:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17668:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17598:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17606:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17614:5:14",
														"type": ""
													}
												],
												"src": "17571:133:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17790:388:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17836:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "17838:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17838:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17838:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17811:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17820:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17807:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17807:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17832:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17803:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17803:32:14"
															},
															"nodeType": "YulIf",
															"src": "17800:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "17929:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17944:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17958:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17948:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17973:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18008:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18019:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18004:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18004:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18028:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "17983:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17983:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17973:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18056:115:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18071:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18085:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18075:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18101:60:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18133:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18144:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18129:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18129:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18153:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "18111:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18111:50:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "18101:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17752:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17763:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17775:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17783:6:14",
														"type": ""
													}
												],
												"src": "17710:468:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18267:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18313:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "18315:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18315:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18315:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18288:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18297:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18284:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18284:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18309:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "18280:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18280:32:14"
															},
															"nodeType": "YulIf",
															"src": "18277:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "18406:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18421:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18435:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18425:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18450:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18485:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18496:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18481:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18481:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18505:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "18460:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18460:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "18450:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18533:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18548:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18562:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18552:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18578:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18613:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18624:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18609:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18609:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18633:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "18588:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18588:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "18578:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18229:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "18240:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18252:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18260:6:14",
														"type": ""
													}
												],
												"src": "18184:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18807:946:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18854:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "18856:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18856:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18856:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18828:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18837:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18824:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18824:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18849:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "18820:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18820:33:14"
															},
															"nodeType": "YulIf",
															"src": "18817:120:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "18947:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18962:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18976:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18966:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18991:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19026:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19037:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19022:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19022:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19046:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19001:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19001:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "18991:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19074:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19089:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19103:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19093:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19119:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19154:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19165:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19150:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19150:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19174:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19129:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19129:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "19119:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19202:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19217:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19231:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19221:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19247:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19282:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19293:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19278:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19278:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19302:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "19257:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19257:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "19247:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19330:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19345:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19359:2:14",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19349:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19375:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19410:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19421:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19406:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19406:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19430:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "19385:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19385:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "19375:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19458:288:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19473:47:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19504:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19515:3:14",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19500:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19500:19:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "19487:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19487:33:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19477:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "19567:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "19569:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19569:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "19569:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "19539:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19547:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19536:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19536:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "19533:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19664:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19708:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19719:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19704:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19704:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19728:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "19674:29:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19674:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "19664:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18745:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "18756:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18768:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18776:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18784:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "18792:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "18800:6:14",
														"type": ""
													}
												],
												"src": "18664:1089:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19825:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19871:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19873:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19873:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19873:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19846:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19855:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19842:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19842:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19867:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19838:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19838:32:14"
															},
															"nodeType": "YulIf",
															"src": "19835:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "19964:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19979:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19993:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19983:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20008:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20043:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20054:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20039:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20039:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20063:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "20018:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20018:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "20008:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19795:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19806:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19818:6:14",
														"type": ""
													}
												],
												"src": "19759:329:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20194:519:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20240:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "20242:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20242:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20242:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20215:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20224:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20211:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20211:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20236:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20207:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20207:32:14"
															},
															"nodeType": "YulIf",
															"src": "20204:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "20333:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20348:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20362:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20352:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20377:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20412:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20423:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20408:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20408:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20432:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "20387:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20387:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "20377:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20460:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20475:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20489:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20479:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20505:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20540:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20551:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20536:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20536:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20560:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "20515:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20515:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "20505:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20588:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20603:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20617:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20607:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20633:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20668:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20679:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20664:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20664:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20688:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "20643:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20643:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "20633:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20148:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20159:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20171:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20179:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20187:6:14",
														"type": ""
													}
												],
												"src": "20094:619:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20747:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20764:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20767:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20757:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20757:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20757:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20861:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20864:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20854:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20854:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20854:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20885:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20888:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20878:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20878:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20878:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "20719:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20956:269:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20966:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20980:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20986:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "20976:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20976:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "20966:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20997:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "21027:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21033:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21023:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21023:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "21001:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21074:51:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "21088:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "21102:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21110:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "21098:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21098:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "21088:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "21054:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21047:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21047:26:14"
															},
															"nodeType": "YulIf",
															"src": "21044:81:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21177:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "21191:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21191:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21191:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "21141:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "21164:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21172:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "21161:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21161:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "21138:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21138:38:14"
															},
															"nodeType": "YulIf",
															"src": "21135:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "20940:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20949:6:14",
														"type": ""
													}
												],
												"src": "20905:320:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21357:206:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21367:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21379:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21390:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21375:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21375:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21367:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21447:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21460:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21471:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21456:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21456:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21403:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21403:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21403:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21528:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21541:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21552:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21537:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21537:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21484:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21484:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21484:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21321:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21333:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21341:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21352:4:14",
														"type": ""
													}
												],
												"src": "21231:332:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21695:206:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21705:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21717:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21728:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21713:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21713:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21705:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21785:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21798:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21809:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21794:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21794:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21741:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21741:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21741:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21866:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21879:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21890:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21875:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21875:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21822:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21822:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21822:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21659:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21671:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21679:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21690:4:14",
														"type": ""
													}
												],
												"src": "21569:332:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21935:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21952:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21955:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21945:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21945:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21945:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22049:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22052:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22042:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22042:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22042:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22073:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22076:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22066:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22066:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22066:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "21907:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22121:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22138:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22141:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22131:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22131:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22131:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22235:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22238:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22228:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22228:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22228:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22259:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22262:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22252:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22252:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22252:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "22093:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22322:190:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22332:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22359:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22341:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22341:24:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "22332:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22455:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22457:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22457:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22457:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22380:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22387:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "22377:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22377:77:14"
															},
															"nodeType": "YulIf",
															"src": "22374:103:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22486:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22497:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22504:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22493:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22493:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "22486:3:14"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22308:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "22318:3:14",
														"type": ""
													}
												],
												"src": "22279:233:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22572:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22582:11:14",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "22590:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "22582:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22610:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "22613:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22603:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22603:14:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22603:14:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22626:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22644:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22647:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "22634:9:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22634:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "22626:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "22559:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "22567:4:14",
														"type": ""
													}
												],
												"src": "22518:141:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22709:49:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22719:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22737:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22744:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22733:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22733:14:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22749:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "22729:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22729:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "22719:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22692:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "22702:6:14",
														"type": ""
													}
												],
												"src": "22665:93:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22817:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22827:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "22852:4:14"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22858:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "22848:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22848:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "22827:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "22792:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22798:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "22808:8:14",
														"type": ""
													}
												],
												"src": "22764:107:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22953:317:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22963:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "22984:10:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22996:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "22980:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22980:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "22967:9:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23007:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "23038:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23049:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "23019:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23019:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "23011:4:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23125:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "23156:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "23167:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "23137:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23137:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "23125:8:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23185:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23198:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "23209:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "23205:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23205:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "23194:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23194:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "23185:5:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23224:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23237:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "23248:8:14"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "23258:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "23244:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23244:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "23234:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23234:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "23224:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22914:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "22921:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "22933:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "22946:6:14",
														"type": ""
													}
												],
												"src": "22877:393:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23308:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23318:12:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "23325:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "23318:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23294:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "23304:3:14",
														"type": ""
													}
												],
												"src": "23276:60:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23402:82:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23412:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "23470:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "23452:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23452:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "23443:8:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23443:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23425:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23425:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "23412:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23382:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "23392:9:14",
														"type": ""
													}
												],
												"src": "23342:142:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23537:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23547:12:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "23554:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "23547:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23523:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "23533:3:14",
														"type": ""
													}
												],
												"src": "23490:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23647:193:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23657:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "23712:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23681:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23681:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "23661:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "23736:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "23776:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "23770:5:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23770:11:14"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "23783:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "23815:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "23791:23:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23791:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "23742:27:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23742:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "23729:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23729:105:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23729:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "23624:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "23630:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "23638:7:14",
														"type": ""
													}
												],
												"src": "23571:269:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23895:24:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23905:8:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "23912:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "23905:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "23891:3:14",
														"type": ""
													}
												],
												"src": "23846:73:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23978:136:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23988:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24002:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24002:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "23992:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "24087:4:14"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "24093:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "24101:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24043:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24043:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24043:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "23964:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "23970:6:14",
														"type": ""
													}
												],
												"src": "23925:189:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24170:136:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24237:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "24281:5:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24288:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "24251:29:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24251:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24251:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "24190:5:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "24197:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "24187:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24187:14:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "24202:26:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "24204:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "24217:5:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24224:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "24213:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24213:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "24204:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "24184:2:14",
																"statements": []
															},
															"src": "24180:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "24158:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24165:3:14",
														"type": ""
													}
												],
												"src": "24120:186:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24391:464:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24417:431:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "24431:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "24479:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "24447:31:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24447:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "24435:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "24498:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "24521:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "24549:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "24531:17:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24531:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "24517:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24517:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "24502:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "24718:27:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "24720:23:14",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "24735:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "24720:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "24702:10:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24714:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "24699:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24699:18:14"
																		},
																		"nodeType": "YulIf",
																		"src": "24696:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "24787:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "24804:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "24832:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "24814:17:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "24814:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "24800:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24800:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "24758:28:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24758:80:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24758:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "24408:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24413:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24405:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24405:11:14"
															},
															"nodeType": "YulIf",
															"src": "24402:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "24367:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "24374:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "24379:10:14",
														"type": ""
													}
												],
												"src": "24312:543:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24924:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24934:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "24959:4:14"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24965:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "24955:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24955:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "24934:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "24899:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24905:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "24915:8:14",
														"type": ""
													}
												],
												"src": "24861:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25035:118:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25045:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25094:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "25097:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "25090:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25090:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25109:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "25105:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25105:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "25061:28:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25061:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "25057:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25057:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "25049:4:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25122:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "25136:4:14"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "25142:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "25132:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25132:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "25122:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "25012:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "25018:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "25028:6:14",
														"type": ""
													}
												],
												"src": "24984:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25239:214:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25372:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "25399:4:14"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "25405:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "25380:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25380:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "25372:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25418:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "25429:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25439:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "25442:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "25435:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25435:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "25426:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25426:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "25418:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "25220:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "25226:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "25234:4:14",
														"type": ""
													}
												],
												"src": "25158:295:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25550:1303:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25561:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "25608:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "25575:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25575:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "25565:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25697:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "25699:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25699:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25699:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "25669:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25677:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25666:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25666:30:14"
															},
															"nodeType": "YulIf",
															"src": "25663:56:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25729:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "25775:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "25769:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25769:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "25743:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25743:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "25733:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "25874:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "25880:6:14"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "25888:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "25828:45:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25828:67:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25828:67:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25905:18:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "25922:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "25909:9:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25933:17:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "25946:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "25933:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "25997:611:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "26011:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "26030:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "26042:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "26038:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "26038:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "26026:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26026:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "26015:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "26062:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "26108:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "26076:31:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26076:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "26066:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "26126:10:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26135:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "26130:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "26194:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "26219:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "26237:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "26242:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "26233:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "26233:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "26227:5:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "26227:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "26212:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26212:42:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "26212:42:14"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "26271:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "26285:6:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "26293:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "26281:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26281:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "26271:6:14"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "26312:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "26329:9:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "26340:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "26325:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26325:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "26312:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "26160:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "26163:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "26157:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26157:14:14"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "26172:21:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "26174:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "26183:1:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "26186:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "26179:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26179:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "26174:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "26153:3:14",
																					"statements": []
																				},
																				"src": "26149:208:14"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "26393:156:14",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "26411:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "26438:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "26443:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "26434:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "26434:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "26428:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26428:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "26415:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "26478:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "26505:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "26520:6:14"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "26528:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "26516:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "26516:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "26486:18:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "26486:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "26471:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26471:64:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "26471:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "26376:7:14"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "26385:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "26373:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26373:19:14"
																				},
																				"nodeType": "YulIf",
																				"src": "26370:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "26569:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "26583:6:14"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "26591:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "26579:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "26579:14:14"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "26595:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "26575:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "26575:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "26562:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26562:36:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "26562:36:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "25990:618:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25995:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "26625:222:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "26639:14:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26652:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "26643:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "26676:67:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "26694:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "26713:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "26718:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "26709:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "26709:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "26703:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26703:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "26694:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "26669:6:14"
																				},
																				"nodeType": "YulIf",
																				"src": "26666:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "26763:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "26822:5:14"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "26829:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "26769:52:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "26769:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "26756:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26756:81:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "26756:81:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "26617:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "25970:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25978:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25967:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25967:14:14"
															},
															"nodeType": "YulSwitch",
															"src": "25960:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "25539:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "25545:3:14",
														"type": ""
													}
												],
												"src": "25458:1395:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27041:371:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27051:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27063:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27074:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27059:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27059:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27051:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27132:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27145:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27156:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27141:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27141:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27088:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27088:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27088:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27213:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27226:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27237:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27222:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27222:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27169:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27169:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27169:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "27295:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27308:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27319:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27304:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27304:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27251:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27251:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27251:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "27377:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27390:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27401:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27386:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27386:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27333:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27333:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27333:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26989:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "27001:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "27009:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27017:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27025:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27036:4:14",
														"type": ""
													}
												],
												"src": "26859:553:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27462:147:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27472:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27495:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27477:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27477:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "27472:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27506:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27529:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27511:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27511:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "27506:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27540:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27551:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27554:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27547:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27547:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "27540:3:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27580:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "27582:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27582:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27582:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27572:1:14"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "27575:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "27569:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27569:10:14"
															},
															"nodeType": "YulIf",
															"src": "27566:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "27449:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "27452:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "27458:3:14",
														"type": ""
													}
												],
												"src": "27418:191:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27841:408:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27851:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27863:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27874:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27859:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27859:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27851:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27898:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27909:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27894:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27894:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27917:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27923:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27913:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27913:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27887:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27887:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27887:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27943:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28045:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28054:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27951:93:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27951:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27943:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28080:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28091:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28076:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28076:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28100:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28106:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28096:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28096:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28069:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28069:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28069:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28126:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "28228:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28237:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28134:93:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28134:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28126:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27805:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27817:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27825:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27836:4:14",
														"type": ""
													}
												],
												"src": "27615:634:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28313:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28324:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28340:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "28334:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28334:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "28324:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28296:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "28306:6:14",
														"type": ""
													}
												],
												"src": "28255:98:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28454:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28471:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28476:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28464:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28464:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28464:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28492:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28511:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28516:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28507:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28507:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "28492:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28426:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "28431:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "28442:11:14",
														"type": ""
													}
												],
												"src": "28359:168:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28623:283:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "28633:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28679:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "28647:31:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28647:38:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "28637:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28694:77:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28759:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28764:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28701:57:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28701:70:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28694:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28819:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28826:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28815:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28815:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28833:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28838:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "28780:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28780:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28780:65:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28854:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28865:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "28892:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "28870:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28870:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28861:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28861:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28854:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28604:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28611:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28619:3:14",
														"type": ""
													}
												],
												"src": "28533:373:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29140:523:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29150:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29162:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29173:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29158:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29158:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29150:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "29231:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29244:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29255:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29240:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29240:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29187:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29187:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29187:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "29312:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29325:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29336:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29321:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29321:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29268:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29268:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29268:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "29394:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29407:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29418:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29403:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29403:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29350:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29350:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29350:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "29476:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29489:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29500:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29485:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29485:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29432:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29432:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29432:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29525:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29536:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29521:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29521:19:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29546:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29552:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29542:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29542:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29514:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29514:49:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29514:49:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29572:84:14",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "29642:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29651:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29580:61:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29580:76:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29572:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29080:9:14",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "29092:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "29100:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "29108:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "29116:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29124:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29135:4:14",
														"type": ""
													}
												],
												"src": "28912:751:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29731:79:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29741:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "29756:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "29750:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29750:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "29741:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29798:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "29772:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29772:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29772:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "29709:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29717:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29725:5:14",
														"type": ""
													}
												],
												"src": "29669:141:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29892:273:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29938:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "29940:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29940:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29940:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "29913:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29922:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29909:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29909:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29934:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "29905:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29905:32:14"
															},
															"nodeType": "YulIf",
															"src": "29902:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "30031:127:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "30046:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30060:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "30050:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "30075:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "30120:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "30131:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30116:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30116:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "30140:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "30085:30:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30085:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "30075:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29862:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "29873:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29885:6:14",
														"type": ""
													}
												],
												"src": "29816:349:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30499:725:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30509:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30521:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30532:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30517:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "30517:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30509:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "30590:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30603:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30614:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30599:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30599:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30546:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "30546:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30546:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "30671:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30684:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30695:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30680:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30680:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30627:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "30627:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30627:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30720:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30731:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30716:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30716:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30740:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30746:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30736:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30736:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30709:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "30709:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30709:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30766:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "30868:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30877:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30774:93:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "30774:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30766:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30903:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30914:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30899:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30899:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30923:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30929:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30919:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30919:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30892:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "30892:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30892:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30949:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "31051:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31060:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30957:93:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "30957:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30949:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31086:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31097:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31082:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31082:19:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "31107:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31113:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31103:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31103:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31075:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "31075:49:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31075:49:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31133:84:14",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "31203:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31212:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31141:61:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "31141:76:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31133:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30439:9:14",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "30451:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "30459:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "30467:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "30475:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "30483:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30494:4:14",
														"type": ""
													}
												],
												"src": "30171:1053:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e7575f3560e01c8063715018a61161008a578063e985e9c511610064578063e985e9c514610243578063f242432a14610273578063f2fde38b1461028f578063f5298aca146102ab576100e7565b8063715018a6146101ff5780638da5cb5b14610209578063a22cb46514610227576100e7565b80630e89341c116100c65780630e89341c146101675780632eb2c2d6146101975780634e1273f4146101b35780636b20c454146101e3576100e7565b8062fdd58e146100eb57806301ffc9a71461011b57806302fe53051461014b575b5f80fd5b610105600480360381019061010091906118af565b6102c7565b60405161011291906118fc565b60405180910390f35b6101356004803603810190610130919061196a565b61031c565b60405161014291906119af565b60405180910390f35b61016560048036038101906101609190611b04565b6103fd565b005b610181600480360381019061017c9190611b4b565b610411565b60405161018e9190611bf0565b60405180910390f35b6101b160048036038101906101ac9190611d72565b6104a3565b005b6101cd60048036038101906101c89190611efd565b61054a565b6040516101da919061202a565b60405180910390f35b6101fd60048036038101906101f8919061204a565b610657565b005b610207610703565b005b610211610716565b60405161021e91906120e1565b60405180910390f35b610241600480360381019061023c9190612124565b61073e565b005b61025d60048036038101906102589190612162565b610754565b60405161026a91906119af565b60405180910390f35b61028d600480360381019061028891906121a0565b6107e2565b005b6102a960048036038101906102a49190612233565b610889565b005b6102c560048036038101906102c0919061225e565b61090d565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103e657507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f657506103f5826109b9565b5b9050919050565b610405610a22565b61040e81610aa9565b50565b606060028054610420906122db565b80601f016020809104026020016040519081016040528092919081815260200182805461044c906122db565b80156104975780601f1061046e57610100808354040283529160200191610497565b820191905f5260205f20905b81548152906001019060200180831161047a57829003601f168201915b50505050509050919050565b5f6104ac610abc565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156104f157506104ef8682610754565b155b156105355780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161052c92919061230b565b60405180910390fd5b6105428686868686610ac3565b505050505050565b6060815183511461059657815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161058d929190612332565b60405180910390fd5b5f835167ffffffffffffffff8111156105b2576105b16119e0565b5b6040519080825280602002602001820160405280156105e05781602001602082028036833780820191505090505b5090505f5b845181101561064c5761061c6106048287610bb790919063ffffffff16565b6106178387610bca90919063ffffffff16565b6102c7565b82828151811061062f5761062e612359565b5b60200260200101818152505080610645906123b3565b90506105e5565b508091505092915050565b61065f610abc565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156106a857506106a6836106a1610abc565b610754565b155b156106f3576106b5610abc565b836040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016106ea92919061230b565b60405180910390fd5b6106fe838383610bdd565b505050565b61070b610a22565b6107145f610c6d565b565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610750610749610abc565b8383610d30565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f6107eb610abc565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610830575061082e8682610754565b155b156108745780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161086b92919061230b565b60405180910390fd5b6108818686868686610e99565b505050505050565b610891610a22565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610901575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108f891906120e1565b60405180910390fd5b61090a81610c6d565b50565b610915610abc565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561095e575061095c83610957610abc565b610754565b155b156109a95761096b610abc565b836040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016109a092919061230b565b60405180910390fd5b6109b4838383610f9f565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a2a610abc565b73ffffffffffffffffffffffffffffffffffffffff16610a48610716565b73ffffffffffffffffffffffffffffffffffffffff1614610aa757610a6b610abc565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a9e91906120e1565b60405180910390fd5b565b8060029081610ab89190612597565b5050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b33575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b2a91906120e1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610ba3575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610b9a91906120e1565b60405180910390fd5b610bb08585858585611041565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c4d575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610c4491906120e1565b60405180910390fd5b610c68835f848460405180602001604052805f815250611041565b505050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610da0575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610d9791906120e1565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e8c91906119af565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f09575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610f0091906120e1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610f79575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610f7091906120e1565b60405180910390fd5b5f80610f8585856110ed565b91509150610f968787848487611041565b50505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361100f575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161100691906120e1565b60405180910390fd5b5f8061101b84846110ed565b9150915061103a855f848460405180602001604052805f815250611041565b5050505050565b61104d8585858561111d565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146110e6575f611089610abc565b905060018451036110d5575f6110a85f86610bca90919063ffffffff16565b90505f6110be5f86610bca90919063ffffffff16565b90506110ce8389898585896114b3565b50506110e4565b6110e3818787878787611662565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b805182511461116757815181516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161115e929190612332565b60405180910390fd5b5f611170610abc565b90505f5b8351811015611372575f6111918286610bca90919063ffffffff16565b90505f6111a78386610bca90919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146112ca575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561127657888183856040517f03dee4c500000000000000000000000000000000000000000000000000000000815260040161126d9493929190612666565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461135f57805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461135791906126a9565b925050819055505b50508061136b906123b3565b9050611174565b50600183510361142d575f6113905f85610bca90919063ffffffff16565b90505f6113a65f85610bca90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161141e929190612332565b60405180910390a450506114ac565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516114a39291906126dc565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111561165a578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611513959493929190612763565b6020604051808303815f875af192505050801561154e57506040513d601f19601f8201168201806040525081019061154b91906127cf565b60015b6115cf573d805f811461157c576040519150601f19603f3d011682016040523d82523d5f602084013e611581565b606091505b505f8151036115c757846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016115be91906120e1565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461165857846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161164f91906120e1565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611809578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016116c29594939291906127fa565b6020604051808303815f875af19250505080156116fd57506040513d601f19601f820116820180604052508101906116fa91906127cf565b60015b61177e573d805f811461172b576040519150601f19603f3d011682016040523d82523d5f602084013e611730565b606091505b505f81510361177657846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161176d91906120e1565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461180757846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016117fe91906120e1565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61184b82611822565b9050919050565b61185b81611841565b8114611865575f80fd5b50565b5f8135905061187681611852565b92915050565b5f819050919050565b61188e8161187c565b8114611898575f80fd5b50565b5f813590506118a981611885565b92915050565b5f80604083850312156118c5576118c461181a565b5b5f6118d285828601611868565b92505060206118e38582860161189b565b9150509250929050565b6118f68161187c565b82525050565b5f60208201905061190f5f8301846118ed565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61194981611915565b8114611953575f80fd5b50565b5f8135905061196481611940565b92915050565b5f6020828403121561197f5761197e61181a565b5b5f61198c84828501611956565b91505092915050565b5f8115159050919050565b6119a981611995565b82525050565b5f6020820190506119c25f8301846119a0565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611a16826119d0565b810181811067ffffffffffffffff82111715611a3557611a346119e0565b5b80604052505050565b5f611a47611811565b9050611a538282611a0d565b919050565b5f67ffffffffffffffff821115611a7257611a716119e0565b5b611a7b826119d0565b9050602081019050919050565b828183375f83830152505050565b5f611aa8611aa384611a58565b611a3e565b905082815260208101848484011115611ac457611ac36119cc565b5b611acf848285611a88565b509392505050565b5f82601f830112611aeb57611aea6119c8565b5b8135611afb848260208601611a96565b91505092915050565b5f60208284031215611b1957611b1861181a565b5b5f82013567ffffffffffffffff811115611b3657611b3561181e565b5b611b4284828501611ad7565b91505092915050565b5f60208284031215611b6057611b5f61181a565b5b5f611b6d8482850161189b565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611bad578082015181840152602081019050611b92565b5f8484015250505050565b5f611bc282611b76565b611bcc8185611b80565b9350611bdc818560208601611b90565b611be5816119d0565b840191505092915050565b5f6020820190508181035f830152611c088184611bb8565b905092915050565b5f67ffffffffffffffff821115611c2a57611c296119e0565b5b602082029050602081019050919050565b5f80fd5b5f611c51611c4c84611c10565b611a3e565b90508083825260208201905060208402830185811115611c7457611c73611c3b565b5b835b81811015611c9d5780611c89888261189b565b845260208401935050602081019050611c76565b5050509392505050565b5f82601f830112611cbb57611cba6119c8565b5b8135611ccb848260208601611c3f565b91505092915050565b5f67ffffffffffffffff821115611cee57611ced6119e0565b5b611cf7826119d0565b9050602081019050919050565b5f611d16611d1184611cd4565b611a3e565b905082815260208101848484011115611d3257611d316119cc565b5b611d3d848285611a88565b509392505050565b5f82601f830112611d5957611d586119c8565b5b8135611d69848260208601611d04565b91505092915050565b5f805f805f60a08688031215611d8b57611d8a61181a565b5b5f611d9888828901611868565b9550506020611da988828901611868565b945050604086013567ffffffffffffffff811115611dca57611dc961181e565b5b611dd688828901611ca7565b935050606086013567ffffffffffffffff811115611df757611df661181e565b5b611e0388828901611ca7565b925050608086013567ffffffffffffffff811115611e2457611e2361181e565b5b611e3088828901611d45565b9150509295509295909350565b5f67ffffffffffffffff821115611e5757611e566119e0565b5b602082029050602081019050919050565b5f611e7a611e7584611e3d565b611a3e565b90508083825260208201905060208402830185811115611e9d57611e9c611c3b565b5b835b81811015611ec65780611eb28882611868565b845260208401935050602081019050611e9f565b5050509392505050565b5f82601f830112611ee457611ee36119c8565b5b8135611ef4848260208601611e68565b91505092915050565b5f8060408385031215611f1357611f1261181a565b5b5f83013567ffffffffffffffff811115611f3057611f2f61181e565b5b611f3c85828601611ed0565b925050602083013567ffffffffffffffff811115611f5d57611f5c61181e565b5b611f6985828601611ca7565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611fa58161187c565b82525050565b5f611fb68383611f9c565b60208301905092915050565b5f602082019050919050565b5f611fd882611f73565b611fe28185611f7d565b9350611fed83611f8d565b805f5b8381101561201d5781516120048882611fab565b975061200f83611fc2565b925050600181019050611ff0565b5085935050505092915050565b5f6020820190508181035f8301526120428184611fce565b905092915050565b5f805f606084860312156120615761206061181a565b5b5f61206e86828701611868565b935050602084013567ffffffffffffffff81111561208f5761208e61181e565b5b61209b86828701611ca7565b925050604084013567ffffffffffffffff8111156120bc576120bb61181e565b5b6120c886828701611ca7565b9150509250925092565b6120db81611841565b82525050565b5f6020820190506120f45f8301846120d2565b92915050565b61210381611995565b811461210d575f80fd5b50565b5f8135905061211e816120fa565b92915050565b5f806040838503121561213a5761213961181a565b5b5f61214785828601611868565b925050602061215885828601612110565b9150509250929050565b5f80604083850312156121785761217761181a565b5b5f61218585828601611868565b925050602061219685828601611868565b9150509250929050565b5f805f805f60a086880312156121b9576121b861181a565b5b5f6121c688828901611868565b95505060206121d788828901611868565b94505060406121e88882890161189b565b93505060606121f98882890161189b565b925050608086013567ffffffffffffffff81111561221a5761221961181e565b5b61222688828901611d45565b9150509295509295909350565b5f602082840312156122485761224761181a565b5b5f61225584828501611868565b91505092915050565b5f805f606084860312156122755761227461181a565b5b5f61228286828701611868565b93505060206122938682870161189b565b92505060406122a48682870161189b565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806122f257607f821691505b602082108103612305576123046122ae565b5b50919050565b5f60408201905061231e5f8301856120d2565b61232b60208301846120d2565b9392505050565b5f6040820190506123455f8301856118ed565b61235260208301846118ed565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6123bd8261187c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123ef576123ee612386565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026124567fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261241b565b612460868361241b565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61249b6124966124918461187c565b612478565b61187c565b9050919050565b5f819050919050565b6124b483612481565b6124c86124c0826124a2565b848454612427565b825550505050565b5f90565b6124dc6124d0565b6124e78184846124ab565b505050565b5b8181101561250a576124ff5f826124d4565b6001810190506124ed565b5050565b601f82111561254f57612520816123fa565b6125298461240c565b81016020851015612538578190505b61254c6125448561240c565b8301826124ec565b50505b505050565b5f82821c905092915050565b5f61256f5f1984600802612554565b1980831691505092915050565b5f6125878383612560565b9150826002028217905092915050565b6125a082611b76565b67ffffffffffffffff8111156125b9576125b86119e0565b5b6125c382546122db565b6125ce82828561250e565b5f60209050601f8311600181146125ff575f84156125ed578287015190505b6125f7858261257c565b86555061265e565b601f19841661260d866123fa565b5f5b828110156126345784890151825560018201915060208501945060208101905061260f565b86831015612651578489015161264d601f891682612560565b8355505b6001600288020188555050505b505050505050565b5f6080820190506126795f8301876120d2565b61268660208301866118ed565b61269360408301856118ed565b6126a060608301846118ed565b95945050505050565b5f6126b38261187c565b91506126be8361187c565b92508282019050808211156126d6576126d5612386565b5b92915050565b5f6040820190508181035f8301526126f48185611fce565b905081810360208301526127088184611fce565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61273582612711565b61273f818561271b565b935061274f818560208601611b90565b612758816119d0565b840191505092915050565b5f60a0820190506127765f8301886120d2565b61278360208301876120d2565b61279060408301866118ed565b61279d60608301856118ed565b81810360808301526127af818461272b565b90509695505050505050565b5f815190506127c981611940565b92915050565b5f602082840312156127e4576127e361181a565b5b5f6127f1848285016127bb565b91505092915050565b5f60a08201905061280d5f8301886120d2565b61281a60208301876120d2565b818103604083015261282c8186611fce565b905081810360608301526128408185611fce565b90508181036080830152612854818461272b565b9050969550505050505056fea264697066735822122099a5ddd3865ef62feea394224940d9370aedbc1e6daf38b0abbe5fa7a07be65464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x2AB JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x227 JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x1E3 JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x18AF JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x18FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x196A JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x4A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x202A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x204A JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH2 0x703 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x2162 JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x21A0 JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x2233 JUMP JUMPDEST PUSH2 0x889 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x225E JUMP JUMPDEST PUSH2 0x90D JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3E6 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F6 JUMPI POP PUSH2 0x3F5 DUP3 PUSH2 0x9B9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x405 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x40E DUP2 PUSH2 0xAA9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x420 SWAP1 PUSH2 0x22DB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44C SWAP1 PUSH2 0x22DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x497 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x497 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4AC PUSH2 0xABC JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4F1 JUMPI POP PUSH2 0x4EF DUP7 DUP3 PUSH2 0x754 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x535 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52C SWAP3 SWAP2 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x542 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xAC3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x596 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58D SWAP3 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B2 JUMPI PUSH2 0x5B1 PUSH2 0x19E0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5E0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x64C JUMPI PUSH2 0x61C PUSH2 0x604 DUP3 DUP8 PUSH2 0xBB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x617 DUP4 DUP8 PUSH2 0xBCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x62F JUMPI PUSH2 0x62E PUSH2 0x2359 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x645 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x5E5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x65F PUSH2 0xABC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x6A8 JUMPI POP PUSH2 0x6A6 DUP4 PUSH2 0x6A1 PUSH2 0xABC JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x6F3 JUMPI PUSH2 0x6B5 PUSH2 0xABC JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EA SWAP3 SWAP2 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6FE DUP4 DUP4 DUP4 PUSH2 0xBDD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x70B PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x714 PUSH0 PUSH2 0xC6D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x750 PUSH2 0x749 PUSH2 0xABC JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD30 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7EB PUSH2 0xABC JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x830 JUMPI POP PUSH2 0x82E DUP7 DUP3 PUSH2 0x754 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x874 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86B SWAP3 SWAP2 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x881 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xE99 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x891 PUSH2 0xA22 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x901 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F8 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90A DUP2 PUSH2 0xC6D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x915 PUSH2 0xABC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x95E JUMPI POP PUSH2 0x95C DUP4 PUSH2 0x957 PUSH2 0xABC JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x9A9 JUMPI PUSH2 0x96B PUSH2 0xABC JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A0 SWAP3 SWAP2 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B4 DUP4 DUP4 DUP4 PUSH2 0xF9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2A PUSH2 0xABC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA48 PUSH2 0x716 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAA7 JUMPI PUSH2 0xA6B PUSH2 0xABC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9E SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xAB8 SWAP2 SWAP1 PUSH2 0x2597 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB33 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2A SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9A SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1041 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC4D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC44 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC68 DUP4 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1041 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE8C SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF09 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF00 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF79 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF70 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xF85 DUP6 DUP6 PUSH2 0x10ED JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xF96 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1041 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x100F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1006 SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x101B DUP5 DUP5 PUSH2 0x10ED JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x103A DUP6 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1041 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x104D DUP6 DUP6 DUP6 DUP6 PUSH2 0x111D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10E6 JUMPI PUSH0 PUSH2 0x1089 PUSH2 0xABC JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x10D5 JUMPI PUSH0 PUSH2 0x10A8 PUSH0 DUP7 PUSH2 0xBCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x10BE PUSH0 DUP7 PUSH2 0xBCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x10CE DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x14B3 JUMP JUMPDEST POP POP PUSH2 0x10E4 JUMP JUMPDEST PUSH2 0x10E3 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1662 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1167 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115E SWAP3 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1170 PUSH2 0xABC JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1372 JUMPI PUSH0 PUSH2 0x1191 DUP3 DUP7 PUSH2 0xBCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x11A7 DUP4 DUP7 PUSH2 0xBCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12CA JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1276 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x135F JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1357 SWAP2 SWAP1 PUSH2 0x26A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x136B SWAP1 PUSH2 0x23B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1174 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x142D JUMPI PUSH0 PUSH2 0x1390 PUSH0 DUP6 PUSH2 0xBCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x13A6 PUSH0 DUP6 PUSH2 0xBCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x141E SWAP3 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x14AC JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x14A3 SWAP3 SWAP2 SWAP1 PUSH2 0x26DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x165A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1513 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2763 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x154E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x154B SWAP2 SWAP1 PUSH2 0x27CF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x15CF JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x157C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x15C7 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BE SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1658 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164F SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1809 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x16FD JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16FA SWAP2 SWAP1 PUSH2 0x27CF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x177E JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x172B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1776 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176D SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1807 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17FE SWAP2 SWAP1 PUSH2 0x20E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x184B DUP3 PUSH2 0x1822 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x185B DUP2 PUSH2 0x1841 JUMP JUMPDEST DUP2 EQ PUSH2 0x1865 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1876 DUP2 PUSH2 0x1852 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x188E DUP2 PUSH2 0x187C JUMP JUMPDEST DUP2 EQ PUSH2 0x1898 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18A9 DUP2 PUSH2 0x1885 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18C5 JUMPI PUSH2 0x18C4 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18D2 DUP6 DUP3 DUP7 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18E3 DUP6 DUP3 DUP7 ADD PUSH2 0x189B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F6 DUP2 PUSH2 0x187C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x190F PUSH0 DUP4 ADD DUP5 PUSH2 0x18ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1949 DUP2 PUSH2 0x1915 JUMP JUMPDEST DUP2 EQ PUSH2 0x1953 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1964 DUP2 PUSH2 0x1940 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x197F JUMPI PUSH2 0x197E PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x198C DUP5 DUP3 DUP6 ADD PUSH2 0x1956 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19A9 DUP2 PUSH2 0x1995 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19C2 PUSH0 DUP4 ADD DUP5 PUSH2 0x19A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1A16 DUP3 PUSH2 0x19D0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A35 JUMPI PUSH2 0x1A34 PUSH2 0x19E0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A47 PUSH2 0x1811 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A53 DUP3 DUP3 PUSH2 0x1A0D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A72 JUMPI PUSH2 0x1A71 PUSH2 0x19E0 JUMP JUMPDEST JUMPDEST PUSH2 0x1A7B DUP3 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA8 PUSH2 0x1AA3 DUP5 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x1A3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1AC4 JUMPI PUSH2 0x1AC3 PUSH2 0x19CC JUMP JUMPDEST JUMPDEST PUSH2 0x1ACF DUP5 DUP3 DUP6 PUSH2 0x1A88 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AEB JUMPI PUSH2 0x1AEA PUSH2 0x19C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AFB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B19 JUMPI PUSH2 0x1B18 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B36 JUMPI PUSH2 0x1B35 PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x1B42 DUP5 DUP3 DUP6 ADD PUSH2 0x1AD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B60 JUMPI PUSH2 0x1B5F PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B6D DUP5 DUP3 DUP6 ADD PUSH2 0x189B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BAD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B92 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC2 DUP3 PUSH2 0x1B76 JUMP JUMPDEST PUSH2 0x1BCC DUP2 DUP6 PUSH2 0x1B80 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BDC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B90 JUMP JUMPDEST PUSH2 0x1BE5 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C08 DUP2 DUP5 PUSH2 0x1BB8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C2A JUMPI PUSH2 0x1C29 PUSH2 0x19E0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1C51 PUSH2 0x1C4C DUP5 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0x1A3E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1C74 JUMPI PUSH2 0x1C73 PUSH2 0x1C3B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C9D JUMPI DUP1 PUSH2 0x1C89 DUP9 DUP3 PUSH2 0x189B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C76 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CBB JUMPI PUSH2 0x1CBA PUSH2 0x19C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CCB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CEE JUMPI PUSH2 0x1CED PUSH2 0x19E0 JUMP JUMPDEST JUMPDEST PUSH2 0x1CF7 DUP3 PUSH2 0x19D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D16 PUSH2 0x1D11 DUP5 PUSH2 0x1CD4 JUMP JUMPDEST PUSH2 0x1A3E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1D32 JUMPI PUSH2 0x1D31 PUSH2 0x19CC JUMP JUMPDEST JUMPDEST PUSH2 0x1D3D DUP5 DUP3 DUP6 PUSH2 0x1A88 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D59 JUMPI PUSH2 0x1D58 PUSH2 0x19C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D69 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D04 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D8B JUMPI PUSH2 0x1D8A PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D98 DUP9 DUP3 DUP10 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1DA9 DUP9 DUP3 DUP10 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DCA JUMPI PUSH2 0x1DC9 PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x1DD6 DUP9 DUP3 DUP10 ADD PUSH2 0x1CA7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DF7 JUMPI PUSH2 0x1DF6 PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x1E03 DUP9 DUP3 DUP10 ADD PUSH2 0x1CA7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E24 JUMPI PUSH2 0x1E23 PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x1E30 DUP9 DUP3 DUP10 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E57 JUMPI PUSH2 0x1E56 PUSH2 0x19E0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7A PUSH2 0x1E75 DUP5 PUSH2 0x1E3D JUMP JUMPDEST PUSH2 0x1A3E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1E9D JUMPI PUSH2 0x1E9C PUSH2 0x1C3B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EC6 JUMPI DUP1 PUSH2 0x1EB2 DUP9 DUP3 PUSH2 0x1868 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E9F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EE4 JUMPI PUSH2 0x1EE3 PUSH2 0x19C8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1EF4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E68 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F13 JUMPI PUSH2 0x1F12 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F30 JUMPI PUSH2 0x1F2F PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x1F3C DUP6 DUP3 DUP7 ADD PUSH2 0x1ED0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F5D JUMPI PUSH2 0x1F5C PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x1F69 DUP6 DUP3 DUP7 ADD PUSH2 0x1CA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FA5 DUP2 PUSH2 0x187C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB6 DUP4 DUP4 PUSH2 0x1F9C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FD8 DUP3 PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0x1FE2 DUP2 DUP6 PUSH2 0x1F7D JUMP JUMPDEST SWAP4 POP PUSH2 0x1FED DUP4 PUSH2 0x1F8D JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x201D JUMPI DUP2 MLOAD PUSH2 0x2004 DUP9 DUP3 PUSH2 0x1FAB JUMP JUMPDEST SWAP8 POP PUSH2 0x200F DUP4 PUSH2 0x1FC2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1FF0 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2042 DUP2 DUP5 PUSH2 0x1FCE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2061 JUMPI PUSH2 0x2060 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x206E DUP7 DUP3 DUP8 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x208F JUMPI PUSH2 0x208E PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x209B DUP7 DUP3 DUP8 ADD PUSH2 0x1CA7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20BC JUMPI PUSH2 0x20BB PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x20C8 DUP7 DUP3 DUP8 ADD PUSH2 0x1CA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x20DB DUP2 PUSH2 0x1841 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x20D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2103 DUP2 PUSH2 0x1995 JUMP JUMPDEST DUP2 EQ PUSH2 0x210D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x211E DUP2 PUSH2 0x20FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x213A JUMPI PUSH2 0x2139 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2147 DUP6 DUP3 DUP7 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2158 DUP6 DUP3 DUP7 ADD PUSH2 0x2110 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2178 JUMPI PUSH2 0x2177 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2185 DUP6 DUP3 DUP7 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2196 DUP6 DUP3 DUP7 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x21B9 JUMPI PUSH2 0x21B8 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21C6 DUP9 DUP3 DUP10 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x21D7 DUP9 DUP3 DUP10 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x21E8 DUP9 DUP3 DUP10 ADD PUSH2 0x189B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x21F9 DUP9 DUP3 DUP10 ADD PUSH2 0x189B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x221A JUMPI PUSH2 0x2219 PUSH2 0x181E JUMP JUMPDEST JUMPDEST PUSH2 0x2226 DUP9 DUP3 DUP10 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2248 JUMPI PUSH2 0x2247 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2255 DUP5 DUP3 DUP6 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2275 JUMPI PUSH2 0x2274 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2282 DUP7 DUP3 DUP8 ADD PUSH2 0x1868 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2293 DUP7 DUP3 DUP8 ADD PUSH2 0x189B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x22A4 DUP7 DUP3 DUP8 ADD PUSH2 0x189B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22F2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2305 JUMPI PUSH2 0x2304 PUSH2 0x22AE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x231E PUSH0 DUP4 ADD DUP6 PUSH2 0x20D2 JUMP JUMPDEST PUSH2 0x232B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2345 PUSH0 DUP4 ADD DUP6 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x2352 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18ED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x23BD DUP3 PUSH2 0x187C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x23EF JUMPI PUSH2 0x23EE PUSH2 0x2386 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2456 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x241B JUMP JUMPDEST PUSH2 0x2460 DUP7 DUP4 PUSH2 0x241B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x249B PUSH2 0x2496 PUSH2 0x2491 DUP5 PUSH2 0x187C JUMP JUMPDEST PUSH2 0x2478 JUMP JUMPDEST PUSH2 0x187C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B4 DUP4 PUSH2 0x2481 JUMP JUMPDEST PUSH2 0x24C8 PUSH2 0x24C0 DUP3 PUSH2 0x24A2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2427 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x24DC PUSH2 0x24D0 JUMP JUMPDEST PUSH2 0x24E7 DUP2 DUP5 DUP5 PUSH2 0x24AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x250A JUMPI PUSH2 0x24FF PUSH0 DUP3 PUSH2 0x24D4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x24ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x254F JUMPI PUSH2 0x2520 DUP2 PUSH2 0x23FA JUMP JUMPDEST PUSH2 0x2529 DUP5 PUSH2 0x240C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2538 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x254C PUSH2 0x2544 DUP6 PUSH2 0x240C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x24EC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x256F PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2554 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2587 DUP4 DUP4 PUSH2 0x2560 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25A0 DUP3 PUSH2 0x1B76 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25B9 JUMPI PUSH2 0x25B8 PUSH2 0x19E0 JUMP JUMPDEST JUMPDEST PUSH2 0x25C3 DUP3 SLOAD PUSH2 0x22DB JUMP JUMPDEST PUSH2 0x25CE DUP3 DUP3 DUP6 PUSH2 0x250E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x25FF JUMPI PUSH0 DUP5 ISZERO PUSH2 0x25ED JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x25F7 DUP6 DUP3 PUSH2 0x257C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x265E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x260D DUP7 PUSH2 0x23FA JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2634 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x260F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2651 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x264D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2560 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2679 PUSH0 DUP4 ADD DUP8 PUSH2 0x20D2 JUMP JUMPDEST PUSH2 0x2686 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x2693 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x26A0 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x18ED JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26B3 DUP3 PUSH2 0x187C JUMP JUMPDEST SWAP2 POP PUSH2 0x26BE DUP4 PUSH2 0x187C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26D6 JUMPI PUSH2 0x26D5 PUSH2 0x2386 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26F4 DUP2 DUP6 PUSH2 0x1FCE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2708 DUP2 DUP5 PUSH2 0x1FCE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2735 DUP3 PUSH2 0x2711 JUMP JUMPDEST PUSH2 0x273F DUP2 DUP6 PUSH2 0x271B JUMP JUMPDEST SWAP4 POP PUSH2 0x274F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B90 JUMP JUMPDEST PUSH2 0x2758 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2776 PUSH0 DUP4 ADD DUP9 PUSH2 0x20D2 JUMP JUMPDEST PUSH2 0x2783 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x20D2 JUMP JUMPDEST PUSH2 0x2790 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x279D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x18ED JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x27AF DUP2 DUP5 PUSH2 0x272B JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27C9 DUP2 PUSH2 0x1940 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27E4 JUMPI PUSH2 0x27E3 PUSH2 0x181A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27F1 DUP5 DUP3 DUP6 ADD PUSH2 0x27BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x280D PUSH0 DUP4 ADD DUP9 PUSH2 0x20D2 JUMP JUMPDEST PUSH2 0x281A PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x20D2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x282C DUP2 DUP7 PUSH2 0x1FCE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2840 DUP2 DUP6 PUSH2 0x1FCE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2854 DUP2 DUP5 PUSH2 0x272B JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xA5 0xDD 0xD3 DUP7 0x5E 0xF6 0x2F 0xEE LOG3 SWAP5 0x22 0x49 BLOCKHASH 0xD9 CALLDATACOPY EXP 0xED 0xBC 0x1E PUSH14 0xAF38B0ABBE5FA7A07BE65464736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "251:225:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1380:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:87:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2084:103:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4014:429;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2536:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;681:313:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3156:144:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3367:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3591:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;394:281:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2247:132:2;2324:7;2350:9;:13;2360:2;2350:13;;;;;;;;;;;:22;2364:7;2350:22;;;;;;;;;;;;;;;;2343:29;;2247:132;;;;:::o;1380:305::-;1482:4;1532:26;1517:41;;;:11;:41;;;;:109;;;;1589:37;1574:52;;;:11;:52;;;;1517:109;:161;;;;1642:36;1666:11;1642:23;:36::i;:::-;1517:161;1498:180;;1380:305;;;:::o;387:87:13:-;1531:13:0;:11;:13::i;:::-;452:15:13::1;460:6;452:7;:15::i;:::-;387:87:::0;:::o;2084:103:2:-;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;4014:429::-;4208:14;4225:12;:10;:12::i;:::-;4208:29;;4259:6;4251:14;;:4;:14;;;;:49;;;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4352:6;4360:4;4323:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;2536:552::-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:3;:10;2782:8;:15;2744:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2688:121;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;2972:68;2982:30;3010:1;2982:8;:27;;:30;;;;:::i;:::-;3014:25;3037:1;3014:3;:22;;:25;;;;:::i;:::-;2972:9;:68::i;:::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2934:3;;;;:::i;:::-;;;2893:158;;;;3068:13;3061:20;;;2536:552;;;;:::o;681:313:5:-;804:12;:10;:12::i;:::-;793:23;;:7;:23;;;;:67;;;;;821:39;838:7;847:12;:10;:12::i;:::-;821:16;:39::i;:::-;820:40;793:67;789:156;;;912:12;:10;:12::i;:::-;926:7;883:51;;;;;;;;;;;;:::i;:::-;;;;;;;;789:156;955:32;966:7;975:3;980:6;955:10;:32::i;:::-;681:313;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3156:144:2:-;3241:52;3260:12;:10;:12::i;:::-;3274:8;3284;3241:18;:52::i;:::-;3156:144;;:::o;3367:157::-;3457:4;3480:18;:27;3499:7;3480:27;;;;;;;;;;;;;;;:37;3508:8;3480:37;;;;;;;;;;;;;;;;;;;;;;;;;3473:44;;3367:157;;;;:::o;3591:351::-;3714:14;3731:12;:10;:12::i;:::-;3714:29;;3765:6;3757:14;;:4;:14;;;;:49;;;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3858:6;3866:4;3829:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3753:129;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;:::-;3704:238;3591:351;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;394:281:5:-;492:12;:10;:12::i;:::-;481:23;;:7;:23;;;;:67;;;;;509:39;526:7;535:12;:10;:12::i;:::-;509:16;:39::i;:::-;508:40;481:67;477:156;;;600:12;:10;:12::i;:::-;614:7;571:51;;;;;;;;;;;;:::i;:::-;;;;;;;;477:156;643:25;649:7;658:2;662:5;643;:25::i;:::-;394:281;;;:::o;762:146:10:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10282:86:2:-;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;9015:445:2:-;9222:1;9208:16;;:2;:16;;;9204:88;;9278:1;9247:34;;;;;;;;;;;:::i;:::-;;;;;;;;9204:88;9321:1;9305:18;;:4;:18;;;9301:88;;9375:1;9346:32;;;;;;;;;;;:::i;:::-;;;;;;;;9301:88;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;4603:197:7:-;4689:11;4777:4;4772:3;4768:14;4761:4;4756:3;4752:14;4748:35;4742:42;4735:49;;4603:197;;;;:::o;4204:::-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;12784:265:2:-;12904:1;12888:18;;:4;:18;;;12884:88;;12958:1;12929:32;;;;;;;;;;;:::i;:::-;;;;;;;;12884:88;12981:61;13008:4;13022:1;13026:3;13031:6;12981:61;;;;;;;;;;;;:26;:61::i;:::-;12784:265;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;13268:315:2:-;13395:1;13375:22;;:8;:22;;;13371:94;;13451:1;13420:34;;;;;;;;;;;:::i;:::-;;;;;;;;13371:94;13512:8;13474:18;:25;13493:5;13474:25;;;;;;;;;;;;;;;:35;13500:8;13474:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13557:8;13535:41;;13550:5;13535:41;;;13567:8;13535:41;;;;;;:::i;:::-;;;;;;;;13268:315;;;:::o;8151:463::-;8287:1;8273:16;;:2;:16;;;8269:88;;8343:1;8312:34;;;;;;;;;;;:::i;:::-;;;;;;;;8269:88;8386:1;8370:18;;:4;:18;;;8366:88;;8440:1;8411:32;;;;;;;;;;;:::i;:::-;;;;;;;;8366:88;8464:20;8486:23;8513:29;8532:2;8536:5;8513:18;:29::i;:::-;8463:79;;;;8552:55;8579:4;8585:2;8589:3;8594:6;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;12099:329::-;12194:1;12178:18;;:4;:18;;;12174:88;;12248:1;12219:32;;;;;;;;;;;:::i;:::-;;;;;;;;12174:88;12272:20;12294:23;12321:29;12340:2;12344:5;12321:18;:29::i;:::-;12271:79;;;;12360:61;12387:4;12401:1;12405:3;12410:6;12360:61;;;;;;;;;;;;:26;:61::i;:::-;12164:264;;12099:329;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;:12::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;16080:849::-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;:12::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;:::i;:::-;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;13761:974::-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:117::-;3322:1;3319;3312:12;3336:117;3445:1;3442;3435:12;3459:102;3500:6;3551:2;3547:7;3542:2;3535:5;3531:14;3527:28;3517:38;;3459:102;;;:::o;3567:180::-;3615:77;3612:1;3605:88;3712:4;3709:1;3702:15;3736:4;3733:1;3726:15;3753:281;3836:27;3858:4;3836:27;:::i;:::-;3828:6;3824:40;3966:6;3954:10;3951:22;3930:18;3918:10;3915:34;3912:62;3909:88;;;3977:18;;:::i;:::-;3909:88;4017:10;4013:2;4006:22;3796:238;3753:281;;:::o;4040:129::-;4074:6;4101:20;;:::i;:::-;4091:30;;4130:33;4158:4;4150:6;4130:33;:::i;:::-;4040:129;;;:::o;4175:308::-;4237:4;4327:18;4319:6;4316:30;4313:56;;;4349:18;;:::i;:::-;4313:56;4387:29;4409:6;4387:29;:::i;:::-;4379:37;;4471:4;4465;4461:15;4453:23;;4175:308;;;:::o;4489:146::-;4586:6;4581:3;4576;4563:30;4627:1;4618:6;4613:3;4609:16;4602:27;4489:146;;;:::o;4641:425::-;4719:5;4744:66;4760:49;4802:6;4760:49;:::i;:::-;4744:66;:::i;:::-;4735:75;;4833:6;4826:5;4819:21;4871:4;4864:5;4860:16;4909:3;4900:6;4895:3;4891:16;4888:25;4885:112;;;4916:79;;:::i;:::-;4885:112;5006:54;5053:6;5048:3;5043;5006:54;:::i;:::-;4725:341;4641:425;;;;;:::o;5086:340::-;5142:5;5191:3;5184:4;5176:6;5172:17;5168:27;5158:122;;5199:79;;:::i;:::-;5158:122;5316:6;5303:20;5341:79;5416:3;5408:6;5401:4;5393:6;5389:17;5341:79;:::i;:::-;5332:88;;5148:278;5086:340;;;;:::o;5432:509::-;5501:6;5550:2;5538:9;5529:7;5525:23;5521:32;5518:119;;;5556:79;;:::i;:::-;5518:119;5704:1;5693:9;5689:17;5676:31;5734:18;5726:6;5723:30;5720:117;;;5756:79;;:::i;:::-;5720:117;5861:63;5916:7;5907:6;5896:9;5892:22;5861:63;:::i;:::-;5851:73;;5647:287;5432:509;;;;:::o;5947:329::-;6006:6;6055:2;6043:9;6034:7;6030:23;6026:32;6023:119;;;6061:79;;:::i;:::-;6023:119;6181:1;6206:53;6251:7;6242:6;6231:9;6227:22;6206:53;:::i;:::-;6196:63;;6152:117;5947:329;;;;:::o;6282:99::-;6334:6;6368:5;6362:12;6352:22;;6282:99;;;:::o;6387:169::-;6471:11;6505:6;6500:3;6493:19;6545:4;6540:3;6536:14;6521:29;;6387:169;;;;:::o;6562:246::-;6643:1;6653:113;6667:6;6664:1;6661:13;6653:113;;;6752:1;6747:3;6743:11;6737:18;6733:1;6728:3;6724:11;6717:39;6689:2;6686:1;6682:10;6677:15;;6653:113;;;6800:1;6791:6;6786:3;6782:16;6775:27;6624:184;6562:246;;;:::o;6814:377::-;6902:3;6930:39;6963:5;6930:39;:::i;:::-;6985:71;7049:6;7044:3;6985:71;:::i;:::-;6978:78;;7065:65;7123:6;7118:3;7111:4;7104:5;7100:16;7065:65;:::i;:::-;7155:29;7177:6;7155:29;:::i;:::-;7150:3;7146:39;7139:46;;6906:285;6814:377;;;;:::o;7197:313::-;7310:4;7348:2;7337:9;7333:18;7325:26;;7397:9;7391:4;7387:20;7383:1;7372:9;7368:17;7361:47;7425:78;7498:4;7489:6;7425:78;:::i;:::-;7417:86;;7197:313;;;;:::o;7516:311::-;7593:4;7683:18;7675:6;7672:30;7669:56;;;7705:18;;:::i;:::-;7669:56;7755:4;7747:6;7743:17;7735:25;;7815:4;7809;7805:15;7797:23;;7516:311;;;:::o;7833:117::-;7942:1;7939;7932:12;7973:710;8069:5;8094:81;8110:64;8167:6;8110:64;:::i;:::-;8094:81;:::i;:::-;8085:90;;8195:5;8224:6;8217:5;8210:21;8258:4;8251:5;8247:16;8240:23;;8311:4;8303:6;8299:17;8291:6;8287:30;8340:3;8332:6;8329:15;8326:122;;;8359:79;;:::i;:::-;8326:122;8474:6;8457:220;8491:6;8486:3;8483:15;8457:220;;;8566:3;8595:37;8628:3;8616:10;8595:37;:::i;:::-;8590:3;8583:50;8662:4;8657:3;8653:14;8646:21;;8533:144;8517:4;8512:3;8508:14;8501:21;;8457:220;;;8461:21;8075:608;;7973:710;;;;;:::o;8706:370::-;8777:5;8826:3;8819:4;8811:6;8807:17;8803:27;8793:122;;8834:79;;:::i;:::-;8793:122;8951:6;8938:20;8976:94;9066:3;9058:6;9051:4;9043:6;9039:17;8976:94;:::i;:::-;8967:103;;8783:293;8706:370;;;;:::o;9082:307::-;9143:4;9233:18;9225:6;9222:30;9219:56;;;9255:18;;:::i;:::-;9219:56;9293:29;9315:6;9293:29;:::i;:::-;9285:37;;9377:4;9371;9367:15;9359:23;;9082:307;;;:::o;9395:423::-;9472:5;9497:65;9513:48;9554:6;9513:48;:::i;:::-;9497:65;:::i;:::-;9488:74;;9585:6;9578:5;9571:21;9623:4;9616:5;9612:16;9661:3;9652:6;9647:3;9643:16;9640:25;9637:112;;;9668:79;;:::i;:::-;9637:112;9758:54;9805:6;9800:3;9795;9758:54;:::i;:::-;9478:340;9395:423;;;;;:::o;9837:338::-;9892:5;9941:3;9934:4;9926:6;9922:17;9918:27;9908:122;;9949:79;;:::i;:::-;9908:122;10066:6;10053:20;10091:78;10165:3;10157:6;10150:4;10142:6;10138:17;10091:78;:::i;:::-;10082:87;;9898:277;9837:338;;;;:::o;10181:1509::-;10335:6;10343;10351;10359;10367;10416:3;10404:9;10395:7;10391:23;10387:33;10384:120;;;10423:79;;:::i;:::-;10384:120;10543:1;10568:53;10613:7;10604:6;10593:9;10589:22;10568:53;:::i;:::-;10558:63;;10514:117;10670:2;10696:53;10741:7;10732:6;10721:9;10717:22;10696:53;:::i;:::-;10686:63;;10641:118;10826:2;10815:9;10811:18;10798:32;10857:18;10849:6;10846:30;10843:117;;;10879:79;;:::i;:::-;10843:117;10984:78;11054:7;11045:6;11034:9;11030:22;10984:78;:::i;:::-;10974:88;;10769:303;11139:2;11128:9;11124:18;11111:32;11170:18;11162:6;11159:30;11156:117;;;11192:79;;:::i;:::-;11156:117;11297:78;11367:7;11358:6;11347:9;11343:22;11297:78;:::i;:::-;11287:88;;11082:303;11452:3;11441:9;11437:19;11424:33;11484:18;11476:6;11473:30;11470:117;;;11506:79;;:::i;:::-;11470:117;11611:62;11665:7;11656:6;11645:9;11641:22;11611:62;:::i;:::-;11601:72;;11395:288;10181:1509;;;;;;;;:::o;11696:311::-;11773:4;11863:18;11855:6;11852:30;11849:56;;;11885:18;;:::i;:::-;11849:56;11935:4;11927:6;11923:17;11915:25;;11995:4;11989;11985:15;11977:23;;11696:311;;;:::o;12030:710::-;12126:5;12151:81;12167:64;12224:6;12167:64;:::i;:::-;12151:81;:::i;:::-;12142:90;;12252:5;12281:6;12274:5;12267:21;12315:4;12308:5;12304:16;12297:23;;12368:4;12360:6;12356:17;12348:6;12344:30;12397:3;12389:6;12386:15;12383:122;;;12416:79;;:::i;:::-;12383:122;12531:6;12514:220;12548:6;12543:3;12540:15;12514:220;;;12623:3;12652:37;12685:3;12673:10;12652:37;:::i;:::-;12647:3;12640:50;12719:4;12714:3;12710:14;12703:21;;12590:144;12574:4;12569:3;12565:14;12558:21;;12514:220;;;12518:21;12132:608;;12030:710;;;;;:::o;12763:370::-;12834:5;12883:3;12876:4;12868:6;12864:17;12860:27;12850:122;;12891:79;;:::i;:::-;12850:122;13008:6;12995:20;13033:94;13123:3;13115:6;13108:4;13100:6;13096:17;13033:94;:::i;:::-;13024:103;;12840:293;12763:370;;;;:::o;13139:894::-;13257:6;13265;13314:2;13302:9;13293:7;13289:23;13285:32;13282:119;;;13320:79;;:::i;:::-;13282:119;13468:1;13457:9;13453:17;13440:31;13498:18;13490:6;13487:30;13484:117;;;13520:79;;:::i;:::-;13484:117;13625:78;13695:7;13686:6;13675:9;13671:22;13625:78;:::i;:::-;13615:88;;13411:302;13780:2;13769:9;13765:18;13752:32;13811:18;13803:6;13800:30;13797:117;;;13833:79;;:::i;:::-;13797:117;13938:78;14008:7;13999:6;13988:9;13984:22;13938:78;:::i;:::-;13928:88;;13723:303;13139:894;;;;;:::o;14039:114::-;14106:6;14140:5;14134:12;14124:22;;14039:114;;;:::o;14159:184::-;14258:11;14292:6;14287:3;14280:19;14332:4;14327:3;14323:14;14308:29;;14159:184;;;;:::o;14349:132::-;14416:4;14439:3;14431:11;;14469:4;14464:3;14460:14;14452:22;;14349:132;;;:::o;14487:108::-;14564:24;14582:5;14564:24;:::i;:::-;14559:3;14552:37;14487:108;;:::o;14601:179::-;14670:10;14691:46;14733:3;14725:6;14691:46;:::i;:::-;14769:4;14764:3;14760:14;14746:28;;14601:179;;;;:::o;14786:113::-;14856:4;14888;14883:3;14879:14;14871:22;;14786:113;;;:::o;14935:732::-;15054:3;15083:54;15131:5;15083:54;:::i;:::-;15153:86;15232:6;15227:3;15153:86;:::i;:::-;15146:93;;15263:56;15313:5;15263:56;:::i;:::-;15342:7;15373:1;15358:284;15383:6;15380:1;15377:13;15358:284;;;15459:6;15453:13;15486:63;15545:3;15530:13;15486:63;:::i;:::-;15479:70;;15572:60;15625:6;15572:60;:::i;:::-;15562:70;;15418:224;15405:1;15402;15398:9;15393:14;;15358:284;;;15362:14;15658:3;15651:10;;15059:608;;;14935:732;;;;:::o;15673:373::-;15816:4;15854:2;15843:9;15839:18;15831:26;;15903:9;15897:4;15893:20;15889:1;15878:9;15874:17;15867:47;15931:108;16034:4;16025:6;15931:108;:::i;:::-;15923:116;;15673:373;;;;:::o;16052:1039::-;16179:6;16187;16195;16244:2;16232:9;16223:7;16219:23;16215:32;16212:119;;;16250:79;;:::i;:::-;16212:119;16370:1;16395:53;16440:7;16431:6;16420:9;16416:22;16395:53;:::i;:::-;16385:63;;16341:117;16525:2;16514:9;16510:18;16497:32;16556:18;16548:6;16545:30;16542:117;;;16578:79;;:::i;:::-;16542:117;16683:78;16753:7;16744:6;16733:9;16729:22;16683:78;:::i;:::-;16673:88;;16468:303;16838:2;16827:9;16823:18;16810:32;16869:18;16861:6;16858:30;16855:117;;;16891:79;;:::i;:::-;16855:117;16996:78;17066:7;17057:6;17046:9;17042:22;16996:78;:::i;:::-;16986:88;;16781:303;16052:1039;;;;;:::o;17097:118::-;17184:24;17202:5;17184:24;:::i;:::-;17179:3;17172:37;17097:118;;:::o;17221:222::-;17314:4;17352:2;17341:9;17337:18;17329:26;;17365:71;17433:1;17422:9;17418:17;17409:6;17365:71;:::i;:::-;17221:222;;;;:::o;17449:116::-;17519:21;17534:5;17519:21;:::i;:::-;17512:5;17509:32;17499:60;;17555:1;17552;17545:12;17499:60;17449:116;:::o;17571:133::-;17614:5;17652:6;17639:20;17630:29;;17668:30;17692:5;17668:30;:::i;:::-;17571:133;;;;:::o;17710:468::-;17775:6;17783;17832:2;17820:9;17811:7;17807:23;17803:32;17800:119;;;17838:79;;:::i;:::-;17800:119;17958:1;17983:53;18028:7;18019:6;18008:9;18004:22;17983:53;:::i;:::-;17973:63;;17929:117;18085:2;18111:50;18153:7;18144:6;18133:9;18129:22;18111:50;:::i;:::-;18101:60;;18056:115;17710:468;;;;;:::o;18184:474::-;18252:6;18260;18309:2;18297:9;18288:7;18284:23;18280:32;18277:119;;;18315:79;;:::i;:::-;18277:119;18435:1;18460:53;18505:7;18496:6;18485:9;18481:22;18460:53;:::i;:::-;18450:63;;18406:117;18562:2;18588:53;18633:7;18624:6;18613:9;18609:22;18588:53;:::i;:::-;18578:63;;18533:118;18184:474;;;;;:::o;18664:1089::-;18768:6;18776;18784;18792;18800;18849:3;18837:9;18828:7;18824:23;18820:33;18817:120;;;18856:79;;:::i;:::-;18817:120;18976:1;19001:53;19046:7;19037:6;19026:9;19022:22;19001:53;:::i;:::-;18991:63;;18947:117;19103:2;19129:53;19174:7;19165:6;19154:9;19150:22;19129:53;:::i;:::-;19119:63;;19074:118;19231:2;19257:53;19302:7;19293:6;19282:9;19278:22;19257:53;:::i;:::-;19247:63;;19202:118;19359:2;19385:53;19430:7;19421:6;19410:9;19406:22;19385:53;:::i;:::-;19375:63;;19330:118;19515:3;19504:9;19500:19;19487:33;19547:18;19539:6;19536:30;19533:117;;;19569:79;;:::i;:::-;19533:117;19674:62;19728:7;19719:6;19708:9;19704:22;19674:62;:::i;:::-;19664:72;;19458:288;18664:1089;;;;;;;;:::o;19759:329::-;19818:6;19867:2;19855:9;19846:7;19842:23;19838:32;19835:119;;;19873:79;;:::i;:::-;19835:119;19993:1;20018:53;20063:7;20054:6;20043:9;20039:22;20018:53;:::i;:::-;20008:63;;19964:117;19759:329;;;;:::o;20094:619::-;20171:6;20179;20187;20236:2;20224:9;20215:7;20211:23;20207:32;20204:119;;;20242:79;;:::i;:::-;20204:119;20362:1;20387:53;20432:7;20423:6;20412:9;20408:22;20387:53;:::i;:::-;20377:63;;20333:117;20489:2;20515:53;20560:7;20551:6;20540:9;20536:22;20515:53;:::i;:::-;20505:63;;20460:118;20617:2;20643:53;20688:7;20679:6;20668:9;20664:22;20643:53;:::i;:::-;20633:63;;20588:118;20094:619;;;;;:::o;20719:180::-;20767:77;20764:1;20757:88;20864:4;20861:1;20854:15;20888:4;20885:1;20878:15;20905:320;20949:6;20986:1;20980:4;20976:12;20966:22;;21033:1;21027:4;21023:12;21054:18;21044:81;;21110:4;21102:6;21098:17;21088:27;;21044:81;21172:2;21164:6;21161:14;21141:18;21138:38;21135:84;;21191:18;;:::i;:::-;21135:84;20956:269;20905:320;;;:::o;21231:332::-;21352:4;21390:2;21379:9;21375:18;21367:26;;21403:71;21471:1;21460:9;21456:17;21447:6;21403:71;:::i;:::-;21484:72;21552:2;21541:9;21537:18;21528:6;21484:72;:::i;:::-;21231:332;;;;;:::o;21569:::-;21690:4;21728:2;21717:9;21713:18;21705:26;;21741:71;21809:1;21798:9;21794:17;21785:6;21741:71;:::i;:::-;21822:72;21890:2;21879:9;21875:18;21866:6;21822:72;:::i;:::-;21569:332;;;;;:::o;21907:180::-;21955:77;21952:1;21945:88;22052:4;22049:1;22042:15;22076:4;22073:1;22066:15;22093:180;22141:77;22138:1;22131:88;22238:4;22235:1;22228:15;22262:4;22259:1;22252:15;22279:233;22318:3;22341:24;22359:5;22341:24;:::i;:::-;22332:33;;22387:66;22380:5;22377:77;22374:103;;22457:18;;:::i;:::-;22374:103;22504:1;22497:5;22493:13;22486:20;;22279:233;;;:::o;22518:141::-;22567:4;22590:3;22582:11;;22613:3;22610:1;22603:14;22647:4;22644:1;22634:18;22626:26;;22518:141;;;:::o;22665:93::-;22702:6;22749:2;22744;22737:5;22733:14;22729:23;22719:33;;22665:93;;;:::o;22764:107::-;22808:8;22858:5;22852:4;22848:16;22827:37;;22764:107;;;;:::o;22877:393::-;22946:6;22996:1;22984:10;22980:18;23019:97;23049:66;23038:9;23019:97;:::i;:::-;23137:39;23167:8;23156:9;23137:39;:::i;:::-;23125:51;;23209:4;23205:9;23198:5;23194:21;23185:30;;23258:4;23248:8;23244:19;23237:5;23234:30;23224:40;;22953:317;;22877:393;;;;;:::o;23276:60::-;23304:3;23325:5;23318:12;;23276:60;;;:::o;23342:142::-;23392:9;23425:53;23443:34;23452:24;23470:5;23452:24;:::i;:::-;23443:34;:::i;:::-;23425:53;:::i;:::-;23412:66;;23342:142;;;:::o;23490:75::-;23533:3;23554:5;23547:12;;23490:75;;;:::o;23571:269::-;23681:39;23712:7;23681:39;:::i;:::-;23742:91;23791:41;23815:16;23791:41;:::i;:::-;23783:6;23776:4;23770:11;23742:91;:::i;:::-;23736:4;23729:105;23647:193;23571:269;;;:::o;23846:73::-;23891:3;23846:73;:::o;23925:189::-;24002:32;;:::i;:::-;24043:65;24101:6;24093;24087:4;24043:65;:::i;:::-;23978:136;23925:189;;:::o;24120:186::-;24180:120;24197:3;24190:5;24187:14;24180:120;;;24251:39;24288:1;24281:5;24251:39;:::i;:::-;24224:1;24217:5;24213:13;24204:22;;24180:120;;;24120:186;;:::o;24312:543::-;24413:2;24408:3;24405:11;24402:446;;;24447:38;24479:5;24447:38;:::i;:::-;24531:29;24549:10;24531:29;:::i;:::-;24521:8;24517:44;24714:2;24702:10;24699:18;24696:49;;;24735:8;24720:23;;24696:49;24758:80;24814:22;24832:3;24814:22;:::i;:::-;24804:8;24800:37;24787:11;24758:80;:::i;:::-;24417:431;;24402:446;24312:543;;;:::o;24861:117::-;24915:8;24965:5;24959:4;24955:16;24934:37;;24861:117;;;;:::o;24984:169::-;25028:6;25061:51;25109:1;25105:6;25097:5;25094:1;25090:13;25061:51;:::i;:::-;25057:56;25142:4;25136;25132:15;25122:25;;25035:118;24984:169;;;;:::o;25158:295::-;25234:4;25380:29;25405:3;25399:4;25380:29;:::i;:::-;25372:37;;25442:3;25439:1;25435:11;25429:4;25426:21;25418:29;;25158:295;;;;:::o;25458:1395::-;25575:37;25608:3;25575:37;:::i;:::-;25677:18;25669:6;25666:30;25663:56;;;25699:18;;:::i;:::-;25663:56;25743:38;25775:4;25769:11;25743:38;:::i;:::-;25828:67;25888:6;25880;25874:4;25828:67;:::i;:::-;25922:1;25946:4;25933:17;;25978:2;25970:6;25967:14;25995:1;25990:618;;;;26652:1;26669:6;26666:77;;;26718:9;26713:3;26709:19;26703:26;26694:35;;26666:77;26769:67;26829:6;26822:5;26769:67;:::i;:::-;26763:4;26756:81;26625:222;25960:887;;25990:618;26042:4;26038:9;26030:6;26026:22;26076:37;26108:4;26076:37;:::i;:::-;26135:1;26149:208;26163:7;26160:1;26157:14;26149:208;;;26242:9;26237:3;26233:19;26227:26;26219:6;26212:42;26293:1;26285:6;26281:14;26271:24;;26340:2;26329:9;26325:18;26312:31;;26186:4;26183:1;26179:12;26174:17;;26149:208;;;26385:6;26376:7;26373:19;26370:179;;;26443:9;26438:3;26434:19;26428:26;26486:48;26528:4;26520:6;26516:17;26505:9;26486:48;:::i;:::-;26478:6;26471:64;26393:156;26370:179;26595:1;26591;26583:6;26579:14;26575:22;26569:4;26562:36;25997:611;;;25960:887;;25550:1303;;;25458:1395;;:::o;26859:553::-;27036:4;27074:3;27063:9;27059:19;27051:27;;27088:71;27156:1;27145:9;27141:17;27132:6;27088:71;:::i;:::-;27169:72;27237:2;27226:9;27222:18;27213:6;27169:72;:::i;:::-;27251;27319:2;27308:9;27304:18;27295:6;27251:72;:::i;:::-;27333;27401:2;27390:9;27386:18;27377:6;27333:72;:::i;:::-;26859:553;;;;;;;:::o;27418:191::-;27458:3;27477:20;27495:1;27477:20;:::i;:::-;27472:25;;27511:20;27529:1;27511:20;:::i;:::-;27506:25;;27554:1;27551;27547:9;27540:16;;27575:3;27572:1;27569:10;27566:36;;;27582:18;;:::i;:::-;27566:36;27418:191;;;;:::o;27615:634::-;27836:4;27874:2;27863:9;27859:18;27851:26;;27923:9;27917:4;27913:20;27909:1;27898:9;27894:17;27887:47;27951:108;28054:4;28045:6;27951:108;:::i;:::-;27943:116;;28106:9;28100:4;28096:20;28091:2;28080:9;28076:18;28069:48;28134:108;28237:4;28228:6;28134:108;:::i;:::-;28126:116;;27615:634;;;;;:::o;28255:98::-;28306:6;28340:5;28334:12;28324:22;;28255:98;;;:::o;28359:168::-;28442:11;28476:6;28471:3;28464:19;28516:4;28511:3;28507:14;28492:29;;28359:168;;;;:::o;28533:373::-;28619:3;28647:38;28679:5;28647:38;:::i;:::-;28701:70;28764:6;28759:3;28701:70;:::i;:::-;28694:77;;28780:65;28838:6;28833:3;28826:4;28819:5;28815:16;28780:65;:::i;:::-;28870:29;28892:6;28870:29;:::i;:::-;28865:3;28861:39;28854:46;;28623:283;28533:373;;;;:::o;28912:751::-;29135:4;29173:3;29162:9;29158:19;29150:27;;29187:71;29255:1;29244:9;29240:17;29231:6;29187:71;:::i;:::-;29268:72;29336:2;29325:9;29321:18;29312:6;29268:72;:::i;:::-;29350;29418:2;29407:9;29403:18;29394:6;29350:72;:::i;:::-;29432;29500:2;29489:9;29485:18;29476:6;29432:72;:::i;:::-;29552:9;29546:4;29542:20;29536:3;29525:9;29521:19;29514:49;29580:76;29651:4;29642:6;29580:76;:::i;:::-;29572:84;;28912:751;;;;;;;;:::o;29669:141::-;29725:5;29756:6;29750:13;29741:22;;29772:32;29798:5;29772:32;:::i;:::-;29669:141;;;;:::o;29816:349::-;29885:6;29934:2;29922:9;29913:7;29909:23;29905:32;29902:119;;;29940:79;;:::i;:::-;29902:119;30060:1;30085:63;30140:7;30131:6;30120:9;30116:22;30085:63;:::i;:::-;30075:73;;30031:127;29816:349;;;;:::o;30171:1053::-;30494:4;30532:3;30521:9;30517:19;30509:27;;30546:71;30614:1;30603:9;30599:17;30590:6;30546:71;:::i;:::-;30627:72;30695:2;30684:9;30680:18;30671:6;30627:72;:::i;:::-;30746:9;30740:4;30736:20;30731:2;30720:9;30716:18;30709:48;30774:108;30877:4;30868:6;30774:108;:::i;:::-;30766:116;;30929:9;30923:4;30919:20;30914:2;30903:9;30899:18;30892:48;30957:108;31060:4;31051:6;30957:108;:::i;:::-;30949:116;;31113:9;31107:4;31103:20;31097:3;31086:9;31082:19;31075:49;31141:76;31212:4;31203:6;31141:76;:::i;:::-;31133:84;;30171:1053;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2078000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"burn(address,uint256,uint256)": "infinite",
								"burnBatch(address,uint256[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setURI(string)": "infinite",
								"supportsInterface(bytes4)": "809",
								"transferOwnership(address)": "infinite",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 476,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 251,
									"end": 476,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 251,
									"end": 476,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 381,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 311,
									"end": 381,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 381,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 311,
									"end": 381,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 311,
									"end": 381,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 311,
									"end": 381,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 311,
									"end": 381,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 311,
									"end": 381,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 311,
									"end": 381,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 365,
									"end": 377,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 311,
									"end": 381,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 251,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 251,
									"end": 476,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10355,
									"end": 10361,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10348,
									"end": 10361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10282,
									"end": 10368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 14,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "tag",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1606,
									"end": 1612,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1640,
									"end": 1645,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1634,
									"end": 1646,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1554,
									"end": 1653,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1659,
									"end": 1839,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 1659,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1707,
									"end": 1784,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1704,
									"end": 1705,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1697,
									"end": 1785,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1804,
									"end": 1808,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 1801,
									"end": 1802,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1794,
									"end": 1809,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1828,
									"end": 1832,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1825,
									"end": 1826,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1818,
									"end": 1833,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1845,
									"end": 2025,
									"name": "tag",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 1845,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1893,
									"end": 1970,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1890,
									"end": 1891,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1883,
									"end": 1971,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1990,
									"end": 1994,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1987,
									"end": 1988,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1980,
									"end": 1995,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2014,
									"end": 2018,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 2011,
									"end": 2012,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2004,
									"end": 2019,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2075,
									"end": 2081,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2112,
									"end": 2113,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 2106,
									"end": 2110,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2102,
									"end": 2114,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 2092,
									"end": 2114,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2092,
									"end": 2114,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2159,
									"end": 2160,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2153,
									"end": 2157,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2149,
									"end": 2161,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2180,
									"end": 2198,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2236,
									"end": 2240,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2224,
									"end": 2241,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2214,
									"end": 2241,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2214,
									"end": 2241,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "tag",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2298,
									"end": 2300,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2287,
									"end": 2301,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 2267,
									"end": 2285,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2264,
									"end": 2302,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 2317,
									"end": 2335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "tag",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "tag",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2082,
									"end": 2351,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2031,
									"end": 2351,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "tag",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2432,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2421,
									"end": 2432,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2421,
									"end": 2432,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2452,
									"end": 2455,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2442,
									"end": 2456,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2486,
									"end": 2490,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2473,
									"end": 2491,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 2465,
									"end": 2491,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2465,
									"end": 2491,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2357,
									"end": 2498,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2588,
									"end": 2590,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2583,
									"end": 2585,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2576,
									"end": 2581,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2572,
									"end": 2586,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2568,
									"end": 2591,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 2558,
									"end": 2591,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2558,
									"end": 2591,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2504,
									"end": 2597,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2647,
									"end": 2655,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2697,
									"end": 2702,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2691,
									"end": 2695,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 2703,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 2666,
									"end": 2703,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2666,
									"end": 2703,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2603,
									"end": 2710,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2785,
									"end": 2791,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2835,
									"end": 2836,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 2823,
									"end": 2833,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2819,
									"end": 2837,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "81"
								},
								{
									"begin": 2888,
									"end": 2954,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2877,
									"end": 2886,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 2858,
									"end": 2955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "tag",
									"source": 14,
									"value": "81"
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "82"
								},
								{
									"begin": 3006,
									"end": 3014,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2995,
									"end": 3004,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 2976,
									"end": 3015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "tag",
									"source": 14,
									"value": "82"
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2964,
									"end": 3015,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 2964,
									"end": 3015,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3048,
									"end": 3052,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3044,
									"end": 3053,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 3037,
									"end": 3042,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3033,
									"end": 3054,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3024,
									"end": 3054,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 3024,
									"end": 3054,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3097,
									"end": 3101,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3087,
									"end": 3095,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3083,
									"end": 3102,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3076,
									"end": 3081,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3073,
									"end": 3103,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 3063,
									"end": 3103,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3063,
									"end": 3103,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2792,
									"end": 3109,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2792,
									"end": 3109,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2716,
									"end": 3109,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3152,
									"end": 3159,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3181,
									"end": 3186,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3170,
									"end": 3186,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3170,
									"end": 3186,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3115,
									"end": 3192,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3226,
									"end": 3229,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3247,
									"end": 3252,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3240,
									"end": 3252,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3240,
									"end": 3252,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3198,
									"end": 3258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3314,
									"end": 3323,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "87"
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 3392,
									"end": 3397,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 3374,
									"end": 3398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "tag",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 3365,
									"end": 3399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "tag",
									"source": 14,
									"value": "87"
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 3347,
									"end": 3400,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "tag",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3334,
									"end": 3400,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3334,
									"end": 3400,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3264,
									"end": 3406,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3455,
									"end": 3458,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3476,
									"end": 3481,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3469,
									"end": 3481,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3469,
									"end": 3481,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3412,
									"end": 3487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "tag",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 3634,
									"end": 3641,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3603,
									"end": 3642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "tag",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 3737,
									"end": 3753,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 3713,
									"end": 3754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "tag",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3705,
									"end": 3711,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3698,
									"end": 3702,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3692,
									"end": 3703,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 3664,
									"end": 3755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "tag",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3658,
									"end": 3662,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3651,
									"end": 3756,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 3569,
									"end": 3762,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3493,
									"end": 3762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3813,
									"end": 3816,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3768,
									"end": 3841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "tag",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 3924,
									"end": 3956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "tag",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "97"
								},
								{
									"begin": 4023,
									"end": 4029,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4015,
									"end": 4021,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4009,
									"end": 4013,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 3965,
									"end": 4030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "tag",
									"source": 14,
									"value": "97"
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3900,
									"end": 4036,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3847,
									"end": 4036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "tag",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "tag",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4119,
									"end": 4122,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4112,
									"end": 4117,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4109,
									"end": 4123,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "102"
								},
								{
									"begin": 4210,
									"end": 4211,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4203,
									"end": 4208,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 4173,
									"end": 4212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "tag",
									"source": 14,
									"value": "102"
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4146,
									"end": 4147,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 4139,
									"end": 4144,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4135,
									"end": 4148,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4126,
									"end": 4148,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4126,
									"end": 4148,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "tag",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4042,
									"end": 4228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "tag",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4335,
									"end": 4337,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4330,
									"end": 4333,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4327,
									"end": 4338,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "104"
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "105"
								},
								{
									"begin": 4401,
									"end": 4406,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 4369,
									"end": 4407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "tag",
									"source": 14,
									"value": "105"
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 4471,
									"end": 4481,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 4453,
									"end": 4482,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "tag",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4439,
									"end": 4483,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4636,
									"end": 4638,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4624,
									"end": 4634,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4621,
									"end": 4639,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "107"
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4657,
									"end": 4665,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4642,
									"end": 4665,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4642,
									"end": 4665,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "tag",
									"source": 14,
									"value": "107"
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "108"
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "109"
								},
								{
									"begin": 4754,
									"end": 4757,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 4736,
									"end": 4758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "tag",
									"source": 14,
									"value": "109"
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4726,
									"end": 4734,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4722,
									"end": 4759,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4709,
									"end": 4720,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 4680,
									"end": 4760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "tag",
									"source": 14,
									"value": "108"
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4339,
									"end": 4770,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4339,
									"end": 4770,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "tag",
									"source": 14,
									"value": "104"
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4234,
									"end": 4777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "tag",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4837,
									"end": 4845,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4887,
									"end": 4892,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4881,
									"end": 4885,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4877,
									"end": 4893,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 4856,
									"end": 4893,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4856,
									"end": 4893,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4783,
									"end": 4900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "tag",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4950,
									"end": 4956,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 5031,
									"end": 5032,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5027,
									"end": 5033,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 5019,
									"end": 5024,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5016,
									"end": 5017,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 4983,
									"end": 5034,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "tag",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4979,
									"end": 5035,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 5064,
									"end": 5068,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 5058,
									"end": 5062,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5054,
									"end": 5069,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 5044,
									"end": 5069,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5044,
									"end": 5069,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4957,
									"end": 5075,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4906,
									"end": 5075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "tag",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5156,
									"end": 5160,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "114"
								},
								{
									"begin": 5327,
									"end": 5330,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5321,
									"end": 5325,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 5302,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "tag",
									"source": 14,
									"value": "114"
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5294,
									"end": 5331,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5294,
									"end": 5331,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5364,
									"end": 5367,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5361,
									"end": 5362,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 5357,
									"end": 5368,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 5351,
									"end": 5355,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5348,
									"end": 5369,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 5340,
									"end": 5369,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5340,
									"end": 5369,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5080,
									"end": 5375,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "tag",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "116"
								},
								{
									"begin": 5530,
									"end": 5533,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 5497,
									"end": 5534,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "tag",
									"source": 14,
									"value": "116"
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5599,
									"end": 5617,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5591,
									"end": 5597,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5588,
									"end": 5618,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 5621,
									"end": 5639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "tag",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "tag",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 5697,
									"end": 5701,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5691,
									"end": 5702,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 5665,
									"end": 5703,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "tag",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "120"
								},
								{
									"begin": 5810,
									"end": 5816,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5802,
									"end": 5808,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5796,
									"end": 5800,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 5750,
									"end": 5817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "tag",
									"source": 14,
									"value": "120"
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5844,
									"end": 5845,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5868,
									"end": 5872,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 5855,
									"end": 5872,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5855,
									"end": 5872,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5900,
									"end": 5902,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 5892,
									"end": 5898,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5889,
									"end": 5903,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 5917,
									"end": 5918,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6574,
									"end": 6575,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6591,
									"end": 6597,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "123"
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6640,
									"end": 6649,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6635,
									"end": 6638,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 6631,
									"end": 6650,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6625,
									"end": 6651,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 6616,
									"end": 6651,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6616,
									"end": 6651,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "tag",
									"source": 14,
									"value": "123"
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 6751,
									"end": 6757,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 6744,
									"end": 6749,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 6691,
									"end": 6758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "tag",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6685,
									"end": 6689,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 6678,
									"end": 6759,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 6547,
									"end": 6769,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "121"
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "tag",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5964,
									"end": 5968,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 5960,
									"end": 5969,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 5952,
									"end": 5958,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5948,
									"end": 5970,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "125"
								},
								{
									"begin": 6030,
									"end": 6034,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 5998,
									"end": 6035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "tag",
									"source": 14,
									"value": "125"
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6057,
									"end": 6058,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "tag",
									"source": 14,
									"value": "126"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6085,
									"end": 6092,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6082,
									"end": 6083,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6079,
									"end": 6093,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "128"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6164,
									"end": 6173,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6159,
									"end": 6162,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 6155,
									"end": 6174,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6149,
									"end": 6175,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 6141,
									"end": 6147,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6134,
									"end": 6176,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 6215,
									"end": 6216,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 6207,
									"end": 6213,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6203,
									"end": 6217,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6193,
									"end": 6217,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 6193,
									"end": 6217,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6262,
									"end": 6264,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 6251,
									"end": 6260,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 6247,
									"end": 6265,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6234,
									"end": 6265,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 6234,
									"end": 6265,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6108,
									"end": 6112,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 6105,
									"end": 6106,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6101,
									"end": 6113,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6096,
									"end": 6113,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6096,
									"end": 6113,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "126"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "tag",
									"source": 14,
									"value": "128"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6307,
									"end": 6313,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 6298,
									"end": 6305,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6295,
									"end": 6314,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "129"
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6365,
									"end": 6374,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6360,
									"end": 6363,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 6356,
									"end": 6375,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6350,
									"end": 6376,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 6450,
									"end": 6454,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 6442,
									"end": 6448,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 6438,
									"end": 6455,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 6427,
									"end": 6436,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 6408,
									"end": 6456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "tag",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6400,
									"end": 6406,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6393,
									"end": 6457,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 6315,
									"end": 6471,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "tag",
									"source": 14,
									"value": "129"
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6517,
									"end": 6518,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 6513,
									"end": 6514,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 6505,
									"end": 6511,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 6501,
									"end": 6515,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 6497,
									"end": 6519,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6491,
									"end": 6495,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 6484,
									"end": 6520,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "tag",
									"source": 14,
									"value": "121"
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5380,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 251,
									"end": 476,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 251,
									"end": 476,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 251,
									"end": 476,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 476,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 251,
									"end": 476,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 476,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 476,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 251,
									"end": 476,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 476,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122099a5ddd3865ef62feea394224940d9370aedbc1e6daf38b0abbe5fa7a07be65464736f6c63430008140033",
									".code": [
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "E985E9C5"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "E985E9C5"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "F242432A"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "F5298ACA"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "A22CB465"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "E89341C"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "E89341C"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "2EB2C2D6"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "4E1273F4"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "6B20C454"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FDD58E"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A7"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "2FE5305"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 476,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 387,
											"end": 474,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 387,
											"end": 474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 387,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 387,
											"end": 474,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 474,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 387,
											"end": 474,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 387,
											"end": 474,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 387,
											"end": 474,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 387,
											"end": 474,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 387,
											"end": 474,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 387,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 387,
											"end": 474,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 387,
											"end": 474,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 387,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 387,
											"end": 474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 387,
											"end": 474,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 387,
											"end": 474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 387,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 387,
											"end": 474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 387,
											"end": 474,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 387,
											"end": 474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 387,
											"end": 474,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 681,
											"end": 994,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 681,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 681,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 394,
											"end": 675,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 394,
											"end": 675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 394,
											"end": 675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1642,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 387,
											"end": 474,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 387,
											"end": 474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 452,
											"end": 467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 460,
											"end": 466,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 452,
											"end": 459,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 452,
											"end": 467,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 452,
											"end": 467,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 452,
											"end": 467,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 387,
											"end": 474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 387,
											"end": 474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4225,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4225,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4255,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4270,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4300,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4323,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4385,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4198,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2707,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2790,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2744,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2852,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3017,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2972,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2953,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2934,
											"end": 2937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 681,
											"end": 994,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 804,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 804,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 804,
											"end": 816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 816,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 804,
											"end": 816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 793,
											"end": 816,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 793,
											"end": 816,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 793,
											"end": 860,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 793,
											"end": 860,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 793,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 793,
											"end": 860,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 793,
											"end": 860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 821,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 838,
											"end": 845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 847,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 847,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 847,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 847,
											"end": 859,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 847,
											"end": 859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 821,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 821,
											"end": 860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 821,
											"end": 860,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 821,
											"end": 860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 820,
											"end": 860,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 793,
											"end": 860,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 793,
											"end": 860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 789,
											"end": 945,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 789,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 789,
											"end": 945,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 912,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 912,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 912,
											"end": 924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 912,
											"end": 924,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 912,
											"end": 924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 926,
											"end": 933,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 883,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 789,
											"end": 945,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 789,
											"end": 945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 955,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 966,
											"end": 973,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 975,
											"end": 978,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 955,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 955,
											"end": 987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 987,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 955,
											"end": 987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3260,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3260,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3282,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3292,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3241,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3506,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3516,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3731,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3731,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3761,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3776,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3829,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3891,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 394,
											"end": 675,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 492,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 492,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 492,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 492,
											"end": 504,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 492,
											"end": 504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 481,
											"end": 504,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 481,
											"end": 504,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 481,
											"end": 488,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 481,
											"end": 504,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 481,
											"end": 504,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 481,
											"end": 504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 481,
											"end": 504,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 481,
											"end": 548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 481,
											"end": 548,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 481,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 481,
											"end": 548,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 481,
											"end": 548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 526,
											"end": 533,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 535,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 535,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 535,
											"end": 547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 535,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 535,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 509,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 548,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 509,
											"end": 548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 508,
											"end": 548,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 481,
											"end": 548,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 481,
											"end": 548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 477,
											"end": 633,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 477,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 477,
											"end": 633,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 600,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 600,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 600,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 600,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 614,
											"end": 621,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH",
											"source": 5,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 571,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 477,
											"end": 633,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 477,
											"end": 633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 643,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 649,
											"end": 656,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 658,
											"end": 660,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 662,
											"end": 667,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 643,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 643,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 643,
											"end": 668,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 643,
											"end": 668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10368,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 10282,
											"end": 10368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10355,
											"end": 10361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10352,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10348,
											"end": 10361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10282,
											"end": 10368,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10282,
											"end": 10368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9210,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 9247,
											"end": 9281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9309,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 9346,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 9425,
											"end": 9429,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 9398,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4689,
											"end": 4700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4301,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4373,
											"end": 4376,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4383,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4360,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4385,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12904,
											"end": 12905,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12888,
											"end": 12892,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12884,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 12884,
											"end": 12972,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12958,
											"end": 12959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 12929,
											"end": 12961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12884,
											"end": 12972,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 12884,
											"end": 12972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 13008,
											"end": 13012,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13022,
											"end": 13023,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13026,
											"end": 13029,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13031,
											"end": 13037,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 12981,
											"end": 13042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12784,
											"end": 13049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13395,
											"end": 13396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13383,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13451,
											"end": 13452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "CED3E10000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 13420,
											"end": 13454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13512,
											"end": 13520,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13493,
											"end": 13498,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13508,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13557,
											"end": 13565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13550,
											"end": 13555,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13567,
											"end": 13575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 13535,
											"end": 13576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 8312,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8374,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 8411,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8536,
											"end": 8541,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 8513,
											"end": 8542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 8552,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12194,
											"end": 12195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12178,
											"end": 12182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12248,
											"end": 12249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 12219,
											"end": 12251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12292,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12294,
											"end": 12317,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 12340,
											"end": 12342,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12344,
											"end": 12349,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12321,
											"end": 12339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 12321,
											"end": 12350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 12387,
											"end": 12391,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12401,
											"end": 12402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12405,
											"end": 12408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12410,
											"end": 12416,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 12360,
											"end": 12421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12164,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12164,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7205,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7251,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 7300,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 7300,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 7514,
											"end": 7522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7538,
											"end": 7543,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 7483,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7625,
											"end": 7633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 7589,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7267,
											"end": 7688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16188,
											"end": 16211,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 16213,
											"end": 16236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16436,
											"end": 16442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16582,
											"end": 16590,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16567,
											"end": 16573,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16704,
											"end": 16708,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16696,
											"end": 16702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16737,
											"end": 16738,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16729,
											"end": 16735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16771,
											"end": 16775,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16763,
											"end": 16769,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16907,
											"end": 16911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16899,
											"end": 16905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5292,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5315,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 5407,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5407,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5559,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5604,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5672,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5715,
											"end": 5720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5784,
											"end": 5795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5797,
											"end": 5802,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5751,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5952,
											"end": 5954,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 6016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6080,
											"end": 6082,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 6070,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5466,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6182,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 6260,
											"end": 6261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6240,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 6281,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 6362,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13985,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14377,
											"end": 14378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14360,
											"end": 14373,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14487,
											"end": 14489,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 14464,
											"end": 14490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14651,
											"end": 14664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14642,
											"end": 14648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14638,
											"end": 14640,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14634,
											"end": 14649,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14627,
											"end": 14665,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14273,
											"end": 14275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 14250,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14077,
											"end": 14309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15171,
											"end": 15172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15154,
											"end": 15156,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15172,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15209,
											"end": 15211,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 15236,
											"end": 15244,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15246,
											"end": 15250,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15257,
											"end": 15263,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15265,
											"end": 15269,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15606,
											"end": 15607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15589,
											"end": 15595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15589,
											"end": 15602,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15589,
											"end": 15607,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15716,
											"end": 15718,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 15693,
											"end": 15719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15886,
											"end": 15892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15880,
											"end": 15893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15871,
											"end": 15877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15867,
											"end": 15869,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15863,
											"end": 15878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15856,
											"end": 15894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15357,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 15504,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 15479,
											"end": 15505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15271,
											"end": 15538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3213,
											"end": 3330,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 3213,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3322,
											"end": 3323,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3312,
											"end": 3324,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3336,
											"end": 3453,
											"name": "tag",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 3336,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3447,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3500,
											"end": 3506,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3553,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3547,
											"end": 3554,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 3542,
											"end": 3544,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3531,
											"end": 3545,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3527,
											"end": 3555,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3555,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3459,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3567,
											"end": 3747,
											"name": "tag",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 3567,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3615,
											"end": 3692,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3612,
											"end": 3613,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3693,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3712,
											"end": 3716,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 3709,
											"end": 3710,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3702,
											"end": 3717,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3736,
											"end": 3740,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3741,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 3858,
											"end": 3862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 3836,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "tag",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3828,
											"end": 3834,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 3864,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3954,
											"end": 3964,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3951,
											"end": 3973,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 3930,
											"end": 3948,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3918,
											"end": 3928,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3912,
											"end": 3974,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 3977,
											"end": 3995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "tag",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4017,
											"end": 4027,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4015,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4006,
											"end": 4028,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3796,
											"end": 4034,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 4034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4074,
											"end": 4080,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 4101,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4121,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4121,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 4158,
											"end": 4162,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4150,
											"end": 4156,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 4130,
											"end": 4163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4040,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "tag",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4237,
											"end": 4241,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 4349,
											"end": 4367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 4387,
											"end": 4416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "tag",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4379,
											"end": 4416,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4379,
											"end": 4416,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4471,
											"end": 4475,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4465,
											"end": 4469,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4461,
											"end": 4476,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4453,
											"end": 4476,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4453,
											"end": 4476,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4489,
											"end": 4635,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 4489,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4586,
											"end": 4592,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4581,
											"end": 4584,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4576,
											"end": 4579,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4563,
											"end": 4593,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 4627,
											"end": 4628,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4624,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4613,
											"end": 4616,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4609,
											"end": 4625,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4602,
											"end": 4629,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4489,
											"end": 4635,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4489,
											"end": 4635,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4489,
											"end": 4635,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4489,
											"end": 4635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "tag",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 4760,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 4802,
											"end": 4808,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4760,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 4760,
											"end": 4809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4760,
											"end": 4809,
											"name": "tag",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 4760,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4744,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 4744,
											"end": 4810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4744,
											"end": 4810,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 4744,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4735,
											"end": 4810,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4735,
											"end": 4810,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4833,
											"end": 4839,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4826,
											"end": 4831,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4819,
											"end": 4840,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4871,
											"end": 4875,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4864,
											"end": 4869,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4860,
											"end": 4876,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4909,
											"end": 4912,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4900,
											"end": 4906,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4895,
											"end": 4898,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4891,
											"end": 4907,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4888,
											"end": 4913,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4885,
											"end": 4997,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4885,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 4885,
											"end": 4997,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4916,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 4916,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 4916,
											"end": 4995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4916,
											"end": 4995,
											"name": "tag",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 4916,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4885,
											"end": 4997,
											"name": "tag",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 4885,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5006,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 5053,
											"end": 5059,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5048,
											"end": 5051,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5043,
											"end": 5046,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5006,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 5006,
											"end": 5060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5006,
											"end": 5060,
											"name": "tag",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 5006,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4725,
											"end": 5066,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4641,
											"end": 5066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5142,
											"end": 5147,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5194,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 5176,
											"end": 5182,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5172,
											"end": 5189,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5168,
											"end": 5195,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5158,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 5158,
											"end": 5280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5199,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 5199,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 5199,
											"end": 5278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5199,
											"end": 5278,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 5199,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5158,
											"end": 5280,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 5158,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5316,
											"end": 5322,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5303,
											"end": 5323,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5341,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 5416,
											"end": 5419,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5408,
											"end": 5414,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5401,
											"end": 5405,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5389,
											"end": 5406,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5341,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 5341,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5341,
											"end": 5420,
											"name": "tag",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 5341,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5332,
											"end": 5420,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5332,
											"end": 5420,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5148,
											"end": 5426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5086,
											"end": 5426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5432,
											"end": 5941,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 5432,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5552,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5538,
											"end": 5547,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5529,
											"end": 5536,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5521,
											"end": 5553,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5518,
											"end": 5637,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5518,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 5518,
											"end": 5637,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5556,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 5556,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 5556,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5556,
											"end": 5635,
											"name": "tag",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 5556,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5518,
											"end": 5637,
											"name": "tag",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 5518,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5704,
											"end": 5705,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5702,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5689,
											"end": 5706,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5676,
											"end": 5707,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5734,
											"end": 5752,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5726,
											"end": 5732,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5723,
											"end": 5753,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5756,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 5756,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 5756,
											"end": 5835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5756,
											"end": 5835,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 5756,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "tag",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5861,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 5916,
											"end": 5923,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5907,
											"end": 5913,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5896,
											"end": 5905,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5892,
											"end": 5914,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5861,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 5861,
											"end": 5924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5861,
											"end": 5924,
											"name": "tag",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 5861,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5851,
											"end": 5924,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5851,
											"end": 5924,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5647,
											"end": 5934,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5432,
											"end": 5941,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5432,
											"end": 5941,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5432,
											"end": 5941,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5432,
											"end": 5941,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5432,
											"end": 5941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5947,
											"end": 6276,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 5947,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6006,
											"end": 6012,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6057,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6043,
											"end": 6052,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6034,
											"end": 6041,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6030,
											"end": 6053,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6026,
											"end": 6058,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 6023,
											"end": 6142,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6023,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 6023,
											"end": 6142,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6061,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 6061,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 6061,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6061,
											"end": 6140,
											"name": "tag",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 6061,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6023,
											"end": 6142,
											"name": "tag",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 6023,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6181,
											"end": 6182,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6206,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 6251,
											"end": 6258,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6242,
											"end": 6248,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6231,
											"end": 6240,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6227,
											"end": 6249,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6206,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 6206,
											"end": 6259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6206,
											"end": 6259,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 6206,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6196,
											"end": 6259,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6196,
											"end": 6259,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6152,
											"end": 6269,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5947,
											"end": 6276,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5947,
											"end": 6276,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5947,
											"end": 6276,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5947,
											"end": 6276,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5947,
											"end": 6276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6381,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 6282,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6334,
											"end": 6340,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6368,
											"end": 6373,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6362,
											"end": 6374,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6352,
											"end": 6374,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6352,
											"end": 6374,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6381,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6381,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6381,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6387,
											"end": 6556,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 6387,
											"end": 6556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6471,
											"end": 6482,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6505,
											"end": 6511,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6500,
											"end": 6503,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6545,
											"end": 6549,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6540,
											"end": 6543,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6536,
											"end": 6550,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6521,
											"end": 6550,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6521,
											"end": 6550,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6387,
											"end": 6556,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6387,
											"end": 6556,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6387,
											"end": 6556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6387,
											"end": 6556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6387,
											"end": 6556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6562,
											"end": 6808,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 6562,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6643,
											"end": 6644,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6667,
											"end": 6673,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6664,
											"end": 6665,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6661,
											"end": 6674,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6752,
											"end": 6753,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6747,
											"end": 6750,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6754,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6737,
											"end": 6755,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6733,
											"end": 6734,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6728,
											"end": 6731,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6724,
											"end": 6735,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6717,
											"end": 6756,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6689,
											"end": 6691,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6686,
											"end": 6687,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6682,
											"end": 6692,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6677,
											"end": 6692,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6677,
											"end": 6692,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6800,
											"end": 6801,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6797,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6786,
											"end": 6789,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6782,
											"end": 6798,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6775,
											"end": 6802,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6624,
											"end": 6808,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6562,
											"end": 6808,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6562,
											"end": 6808,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6562,
											"end": 6808,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6562,
											"end": 6808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6814,
											"end": 7191,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 6814,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6902,
											"end": 6905,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 6963,
											"end": 6968,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6930,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 6930,
											"end": 6969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6930,
											"end": 6969,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 6930,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6985,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 7049,
											"end": 7055,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7044,
											"end": 7047,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6985,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 6985,
											"end": 7056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6985,
											"end": 7056,
											"name": "tag",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 6985,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6978,
											"end": 7056,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6978,
											"end": 7056,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7065,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 7123,
											"end": 7129,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7118,
											"end": 7121,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7111,
											"end": 7115,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7104,
											"end": 7109,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7100,
											"end": 7116,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7065,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 7065,
											"end": 7130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7065,
											"end": 7130,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 7065,
											"end": 7130,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7155,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 7177,
											"end": 7183,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7155,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 7155,
											"end": 7184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7155,
											"end": 7184,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 7155,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7150,
											"end": 7153,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7185,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7139,
											"end": 7185,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7139,
											"end": 7185,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6906,
											"end": 7191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6814,
											"end": 7191,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6814,
											"end": 7191,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6814,
											"end": 7191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6814,
											"end": 7191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6814,
											"end": 7191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7197,
											"end": 7510,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 7197,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7310,
											"end": 7314,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7350,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7337,
											"end": 7346,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7333,
											"end": 7351,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7325,
											"end": 7351,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7325,
											"end": 7351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7397,
											"end": 7406,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7391,
											"end": 7395,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7387,
											"end": 7407,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7383,
											"end": 7384,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7381,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7361,
											"end": 7408,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7425,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 7498,
											"end": 7502,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7489,
											"end": 7495,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7425,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 7425,
											"end": 7503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7425,
											"end": 7503,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 7425,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7417,
											"end": 7503,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7417,
											"end": 7503,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7197,
											"end": 7510,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7197,
											"end": 7510,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7197,
											"end": 7510,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7197,
											"end": 7510,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7197,
											"end": 7510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7516,
											"end": 7827,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 7516,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7683,
											"end": 7701,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7675,
											"end": 7681,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7672,
											"end": 7702,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7669,
											"end": 7725,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7669,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 7669,
											"end": 7725,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7705,
											"end": 7723,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 7705,
											"end": 7723,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 7705,
											"end": 7723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7705,
											"end": 7723,
											"name": "tag",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 7705,
											"end": 7723,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7669,
											"end": 7725,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 7669,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7755,
											"end": 7759,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7747,
											"end": 7753,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7743,
											"end": 7760,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7735,
											"end": 7760,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7735,
											"end": 7760,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7815,
											"end": 7819,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7809,
											"end": 7813,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7805,
											"end": 7820,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7797,
											"end": 7820,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7797,
											"end": 7820,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7516,
											"end": 7827,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7516,
											"end": 7827,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7516,
											"end": 7827,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7516,
											"end": 7827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7833,
											"end": 7950,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 7833,
											"end": 7950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7942,
											"end": 7943,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7939,
											"end": 7940,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7932,
											"end": 7944,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7973,
											"end": 8683,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 7973,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8069,
											"end": 8074,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8094,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 8110,
											"end": 8174,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 8167,
											"end": 8173,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8110,
											"end": 8174,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 8110,
											"end": 8174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8110,
											"end": 8174,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 8110,
											"end": 8174,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8094,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 8094,
											"end": 8175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8094,
											"end": 8175,
											"name": "tag",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 8094,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8085,
											"end": 8175,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8085,
											"end": 8175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8195,
											"end": 8200,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8224,
											"end": 8230,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8217,
											"end": 8222,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8210,
											"end": 8231,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8258,
											"end": 8262,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8251,
											"end": 8256,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8247,
											"end": 8263,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8240,
											"end": 8263,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8240,
											"end": 8263,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8311,
											"end": 8315,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8303,
											"end": 8309,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8299,
											"end": 8316,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 8291,
											"end": 8297,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8287,
											"end": 8317,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8340,
											"end": 8343,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8332,
											"end": 8338,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8329,
											"end": 8344,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8326,
											"end": 8448,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8326,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 8326,
											"end": 8448,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8359,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 8359,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 8359,
											"end": 8438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8359,
											"end": 8438,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 8359,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8326,
											"end": 8448,
											"name": "tag",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 8326,
											"end": 8448,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8474,
											"end": 8480,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8491,
											"end": 8497,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8486,
											"end": 8489,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8483,
											"end": 8498,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8566,
											"end": 8569,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8595,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 8628,
											"end": 8631,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 8616,
											"end": 8626,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8595,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 8595,
											"end": 8632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8595,
											"end": 8632,
											"name": "tag",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 8595,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8590,
											"end": 8593,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8583,
											"end": 8633,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8662,
											"end": 8666,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8657,
											"end": 8660,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8653,
											"end": 8667,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8646,
											"end": 8667,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8646,
											"end": 8667,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8533,
											"end": 8677,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8517,
											"end": 8521,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8512,
											"end": 8515,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8508,
											"end": 8522,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8501,
											"end": 8522,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8501,
											"end": 8522,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8461,
											"end": 8482,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8683,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8683,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7973,
											"end": 8683,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7973,
											"end": 8683,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7973,
											"end": 8683,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7973,
											"end": 8683,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7973,
											"end": 8683,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7973,
											"end": 8683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8706,
											"end": 9076,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 8706,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8777,
											"end": 8782,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8826,
											"end": 8829,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8819,
											"end": 8823,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 8811,
											"end": 8817,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8807,
											"end": 8824,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8793,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 8793,
											"end": 8915,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8834,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 8834,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 8834,
											"end": 8913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8834,
											"end": 8913,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 8834,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8793,
											"end": 8915,
											"name": "tag",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 8793,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8951,
											"end": 8957,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8938,
											"end": 8958,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 8976,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 9066,
											"end": 9069,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9058,
											"end": 9064,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9051,
											"end": 9055,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9043,
											"end": 9049,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9056,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8976,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 8976,
											"end": 9070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8976,
											"end": 9070,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 8976,
											"end": 9070,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8967,
											"end": 9070,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8967,
											"end": 9070,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8783,
											"end": 9076,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8706,
											"end": 9076,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8706,
											"end": 9076,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8706,
											"end": 9076,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8706,
											"end": 9076,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8706,
											"end": 9076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9082,
											"end": 9389,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 9082,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9143,
											"end": 9147,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9233,
											"end": 9251,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9225,
											"end": 9231,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9222,
											"end": 9252,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9219,
											"end": 9275,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9219,
											"end": 9275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 9219,
											"end": 9275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9255,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 9255,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 9255,
											"end": 9273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9255,
											"end": 9273,
											"name": "tag",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 9255,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9219,
											"end": 9275,
											"name": "tag",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 9219,
											"end": 9275,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9293,
											"end": 9322,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 9315,
											"end": 9321,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9293,
											"end": 9322,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 9293,
											"end": 9322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9293,
											"end": 9322,
											"name": "tag",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 9293,
											"end": 9322,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9285,
											"end": 9322,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9285,
											"end": 9322,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9377,
											"end": 9381,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9371,
											"end": 9375,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9359,
											"end": 9382,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9359,
											"end": 9382,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9082,
											"end": 9389,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9082,
											"end": 9389,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9082,
											"end": 9389,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9082,
											"end": 9389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9395,
											"end": 9818,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 9395,
											"end": 9818,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9472,
											"end": 9477,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 9513,
											"end": 9561,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 9554,
											"end": 9560,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9513,
											"end": 9561,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 9513,
											"end": 9561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9513,
											"end": 9561,
											"name": "tag",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 9513,
											"end": 9561,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9497,
											"end": 9562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 9497,
											"end": 9562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9497,
											"end": 9562,
											"name": "tag",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 9497,
											"end": 9562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9488,
											"end": 9562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9488,
											"end": 9562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9585,
											"end": 9591,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9578,
											"end": 9583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9571,
											"end": 9592,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9623,
											"end": 9627,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9616,
											"end": 9621,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9612,
											"end": 9628,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9661,
											"end": 9664,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9652,
											"end": 9658,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9647,
											"end": 9650,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9643,
											"end": 9659,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9640,
											"end": 9665,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9637,
											"end": 9749,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9637,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 9637,
											"end": 9749,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9668,
											"end": 9747,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 9668,
											"end": 9747,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 9668,
											"end": 9747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9668,
											"end": 9747,
											"name": "tag",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 9668,
											"end": 9747,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9637,
											"end": 9749,
											"name": "tag",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 9637,
											"end": 9749,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9758,
											"end": 9812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9800,
											"end": 9803,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9795,
											"end": 9798,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9758,
											"end": 9812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 9758,
											"end": 9812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9758,
											"end": 9812,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 9758,
											"end": 9812,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9478,
											"end": 9818,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9395,
											"end": 9818,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9395,
											"end": 9818,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9395,
											"end": 9818,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9395,
											"end": 9818,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9395,
											"end": 9818,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9395,
											"end": 9818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9837,
											"end": 10175,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 9837,
											"end": 10175,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9892,
											"end": 9897,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9941,
											"end": 9944,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9934,
											"end": 9938,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 9926,
											"end": 9932,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9922,
											"end": 9939,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9918,
											"end": 9945,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9908,
											"end": 10030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 9908,
											"end": 10030,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9949,
											"end": 10028,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 9949,
											"end": 10028,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 9949,
											"end": 10028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9949,
											"end": 10028,
											"name": "tag",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 9949,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9908,
											"end": 10030,
											"name": "tag",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 9908,
											"end": 10030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10053,
											"end": 10073,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 10091,
											"end": 10169,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 10165,
											"end": 10168,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10157,
											"end": 10163,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10150,
											"end": 10154,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10142,
											"end": 10148,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10138,
											"end": 10155,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10091,
											"end": 10169,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 10091,
											"end": 10169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10091,
											"end": 10169,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 10091,
											"end": 10169,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10082,
											"end": 10169,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10082,
											"end": 10169,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9898,
											"end": 10175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9837,
											"end": 10175,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9837,
											"end": 10175,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9837,
											"end": 10175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9837,
											"end": 10175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9837,
											"end": 10175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10181,
											"end": 11690,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 10181,
											"end": 11690,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10335,
											"end": 10341,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10343,
											"end": 10349,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10351,
											"end": 10357,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10359,
											"end": 10365,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10367,
											"end": 10373,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10416,
											"end": 10419,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 10404,
											"end": 10413,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10395,
											"end": 10402,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10391,
											"end": 10414,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10387,
											"end": 10420,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10384,
											"end": 10504,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10384,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 10384,
											"end": 10504,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10423,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 10423,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 10423,
											"end": 10502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10423,
											"end": 10502,
											"name": "tag",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 10423,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10384,
											"end": 10504,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 10384,
											"end": 10504,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10543,
											"end": 10544,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10568,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 10613,
											"end": 10620,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10604,
											"end": 10610,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10593,
											"end": 10602,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10589,
											"end": 10611,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10568,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 10568,
											"end": 10621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10568,
											"end": 10621,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 10568,
											"end": 10621,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10558,
											"end": 10621,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10558,
											"end": 10621,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10514,
											"end": 10631,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10670,
											"end": 10672,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10696,
											"end": 10749,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 10741,
											"end": 10748,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10732,
											"end": 10738,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10721,
											"end": 10730,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10717,
											"end": 10739,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10696,
											"end": 10749,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 10696,
											"end": 10749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10696,
											"end": 10749,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 10696,
											"end": 10749,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10686,
											"end": 10749,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 10686,
											"end": 10749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10641,
											"end": 10759,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10826,
											"end": 10828,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10815,
											"end": 10824,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10811,
											"end": 10829,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10849,
											"end": 10855,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10846,
											"end": 10876,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10843,
											"end": 10960,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10843,
											"end": 10960,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 10843,
											"end": 10960,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10879,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 10879,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 10879,
											"end": 10958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10879,
											"end": 10958,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 10879,
											"end": 10958,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10843,
											"end": 10960,
											"name": "tag",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 10843,
											"end": 10960,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10984,
											"end": 11062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 11054,
											"end": 11061,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11045,
											"end": 11051,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11034,
											"end": 11043,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 11030,
											"end": 11052,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10984,
											"end": 11062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 10984,
											"end": 11062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10984,
											"end": 11062,
											"name": "tag",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 10984,
											"end": 11062,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10974,
											"end": 11062,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10974,
											"end": 11062,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10769,
											"end": 11072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11139,
											"end": 11141,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 11128,
											"end": 11137,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11124,
											"end": 11142,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11111,
											"end": 11143,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 11170,
											"end": 11188,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11162,
											"end": 11168,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11159,
											"end": 11189,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11156,
											"end": 11273,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11156,
											"end": 11273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 11156,
											"end": 11273,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11192,
											"end": 11271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 11192,
											"end": 11271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 11192,
											"end": 11271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11192,
											"end": 11271,
											"name": "tag",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 11192,
											"end": 11271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11156,
											"end": 11273,
											"name": "tag",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 11156,
											"end": 11273,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11297,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 11367,
											"end": 11374,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11358,
											"end": 11364,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11347,
											"end": 11356,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 11343,
											"end": 11365,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11297,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 11297,
											"end": 11375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11297,
											"end": 11375,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 11297,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11287,
											"end": 11375,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11287,
											"end": 11375,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11082,
											"end": 11385,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11452,
											"end": 11455,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 11441,
											"end": 11450,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11437,
											"end": 11456,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11424,
											"end": 11457,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 11484,
											"end": 11502,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11476,
											"end": 11482,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11473,
											"end": 11503,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11470,
											"end": 11587,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11470,
											"end": 11587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 11470,
											"end": 11587,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11506,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 11506,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 11506,
											"end": 11585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11506,
											"end": 11585,
											"name": "tag",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 11506,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11470,
											"end": 11587,
											"name": "tag",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 11470,
											"end": 11587,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11611,
											"end": 11673,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 11665,
											"end": 11672,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11656,
											"end": 11662,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 11641,
											"end": 11663,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11611,
											"end": 11673,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 11611,
											"end": 11673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11611,
											"end": 11673,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 11611,
											"end": 11673,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11601,
											"end": 11673,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11601,
											"end": 11673,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11395,
											"end": 11683,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10181,
											"end": 11690,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10181,
											"end": 11690,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10181,
											"end": 11690,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10181,
											"end": 11690,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10181,
											"end": 11690,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10181,
											"end": 11690,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10181,
											"end": 11690,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10181,
											"end": 11690,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10181,
											"end": 11690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11696,
											"end": 12007,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 11696,
											"end": 12007,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11773,
											"end": 11777,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11863,
											"end": 11881,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11855,
											"end": 11861,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11852,
											"end": 11882,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11849,
											"end": 11905,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11849,
											"end": 11905,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 11849,
											"end": 11905,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11885,
											"end": 11903,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 11885,
											"end": 11903,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 11885,
											"end": 11903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11885,
											"end": 11903,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 11885,
											"end": 11903,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11849,
											"end": 11905,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 11849,
											"end": 11905,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11935,
											"end": 11939,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11927,
											"end": 11933,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11923,
											"end": 11940,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 11915,
											"end": 11940,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11915,
											"end": 11940,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11995,
											"end": 11999,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11989,
											"end": 11993,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11985,
											"end": 12000,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11977,
											"end": 12000,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11977,
											"end": 12000,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11696,
											"end": 12007,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11696,
											"end": 12007,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11696,
											"end": 12007,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11696,
											"end": 12007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12030,
											"end": 12740,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 12030,
											"end": 12740,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12126,
											"end": 12131,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12151,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 12167,
											"end": 12231,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 12224,
											"end": 12230,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12167,
											"end": 12231,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 12167,
											"end": 12231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12167,
											"end": 12231,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 12167,
											"end": 12231,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12151,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 12151,
											"end": 12232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12151,
											"end": 12232,
											"name": "tag",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 12151,
											"end": 12232,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12142,
											"end": 12232,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12142,
											"end": 12232,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12252,
											"end": 12257,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12281,
											"end": 12287,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12274,
											"end": 12279,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12267,
											"end": 12288,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12315,
											"end": 12319,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12308,
											"end": 12313,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12304,
											"end": 12320,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12297,
											"end": 12320,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12297,
											"end": 12320,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12368,
											"end": 12372,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12360,
											"end": 12366,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12356,
											"end": 12373,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 12348,
											"end": 12354,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12344,
											"end": 12374,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12397,
											"end": 12400,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12389,
											"end": 12395,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12386,
											"end": 12401,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12383,
											"end": 12505,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12383,
											"end": 12505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 12383,
											"end": 12505,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12416,
											"end": 12495,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 12416,
											"end": 12495,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 12416,
											"end": 12495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12416,
											"end": 12495,
											"name": "tag",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 12416,
											"end": 12495,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12383,
											"end": 12505,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 12383,
											"end": 12505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12531,
											"end": 12537,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12514,
											"end": 12734,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 12514,
											"end": 12734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12548,
											"end": 12554,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12543,
											"end": 12546,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12540,
											"end": 12555,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12514,
											"end": 12734,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12514,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 12514,
											"end": 12734,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12623,
											"end": 12626,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12652,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 12685,
											"end": 12688,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 12673,
											"end": 12683,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12652,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 12652,
											"end": 12689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12652,
											"end": 12689,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 12652,
											"end": 12689,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12647,
											"end": 12650,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12640,
											"end": 12690,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12719,
											"end": 12723,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12714,
											"end": 12717,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12710,
											"end": 12724,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12703,
											"end": 12724,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 12703,
											"end": 12724,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12590,
											"end": 12734,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12574,
											"end": 12578,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12569,
											"end": 12572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12565,
											"end": 12579,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12558,
											"end": 12579,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12558,
											"end": 12579,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12514,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 12514,
											"end": 12734,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12514,
											"end": 12734,
											"name": "tag",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 12514,
											"end": 12734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12518,
											"end": 12539,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12132,
											"end": 12740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12132,
											"end": 12740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12030,
											"end": 12740,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 12030,
											"end": 12740,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12030,
											"end": 12740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12030,
											"end": 12740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12030,
											"end": 12740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12030,
											"end": 12740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12763,
											"end": 13133,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 12763,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12834,
											"end": 12839,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12883,
											"end": 12886,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12876,
											"end": 12880,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 12868,
											"end": 12874,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12864,
											"end": 12881,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12860,
											"end": 12887,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 12850,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 12850,
											"end": 12972,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12891,
											"end": 12970,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 12891,
											"end": 12970,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 12891,
											"end": 12970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12891,
											"end": 12970,
											"name": "tag",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 12891,
											"end": 12970,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12850,
											"end": 12972,
											"name": "tag",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 12850,
											"end": 12972,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13008,
											"end": 13014,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12995,
											"end": 13015,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 13033,
											"end": 13127,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 13123,
											"end": 13126,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13115,
											"end": 13121,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13108,
											"end": 13112,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13100,
											"end": 13106,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13096,
											"end": 13113,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13033,
											"end": 13127,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 13033,
											"end": 13127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13033,
											"end": 13127,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 13033,
											"end": 13127,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13024,
											"end": 13127,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13024,
											"end": 13127,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12840,
											"end": 13133,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12763,
											"end": 13133,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12763,
											"end": 13133,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12763,
											"end": 13133,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12763,
											"end": 13133,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12763,
											"end": 13133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13139,
											"end": 14033,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 13139,
											"end": 14033,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13257,
											"end": 13263,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13265,
											"end": 13271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13314,
											"end": 13316,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13302,
											"end": 13311,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13293,
											"end": 13300,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13289,
											"end": 13312,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13285,
											"end": 13317,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13282,
											"end": 13401,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13282,
											"end": 13401,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 13282,
											"end": 13401,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13320,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 13320,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 13320,
											"end": 13399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13320,
											"end": 13399,
											"name": "tag",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 13320,
											"end": 13399,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13282,
											"end": 13401,
											"name": "tag",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 13282,
											"end": 13401,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13468,
											"end": 13469,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13457,
											"end": 13466,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13453,
											"end": 13470,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13440,
											"end": 13471,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 13498,
											"end": 13516,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13490,
											"end": 13496,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13487,
											"end": 13517,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13484,
											"end": 13601,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13484,
											"end": 13601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 13484,
											"end": 13601,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13520,
											"end": 13599,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 13520,
											"end": 13599,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 13520,
											"end": 13599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13520,
											"end": 13599,
											"name": "tag",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 13520,
											"end": 13599,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13484,
											"end": 13601,
											"name": "tag",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 13484,
											"end": 13601,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13625,
											"end": 13703,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 13695,
											"end": 13702,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13686,
											"end": 13692,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13675,
											"end": 13684,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13671,
											"end": 13693,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13625,
											"end": 13703,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 13625,
											"end": 13703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13625,
											"end": 13703,
											"name": "tag",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 13625,
											"end": 13703,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13615,
											"end": 13703,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13615,
											"end": 13703,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13411,
											"end": 13713,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13780,
											"end": 13782,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13769,
											"end": 13778,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13765,
											"end": 13783,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13752,
											"end": 13784,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 13811,
											"end": 13829,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13803,
											"end": 13809,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13800,
											"end": 13830,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13797,
											"end": 13914,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13797,
											"end": 13914,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 13797,
											"end": 13914,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13833,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 13833,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 13833,
											"end": 13912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13833,
											"end": 13912,
											"name": "tag",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 13833,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13797,
											"end": 13914,
											"name": "tag",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 13797,
											"end": 13914,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13938,
											"end": 14016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 14008,
											"end": 14015,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13999,
											"end": 14005,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13988,
											"end": 13997,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13984,
											"end": 14006,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13938,
											"end": 14016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 13938,
											"end": 14016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13938,
											"end": 14016,
											"name": "tag",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 13938,
											"end": 14016,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13928,
											"end": 14016,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13928,
											"end": 14016,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13723,
											"end": 14026,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13139,
											"end": 14033,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13139,
											"end": 14033,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13139,
											"end": 14033,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13139,
											"end": 14033,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13139,
											"end": 14033,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13139,
											"end": 14033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14039,
											"end": 14153,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 14039,
											"end": 14153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14106,
											"end": 14112,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14140,
											"end": 14145,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14134,
											"end": 14146,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14124,
											"end": 14146,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14124,
											"end": 14146,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14039,
											"end": 14153,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14039,
											"end": 14153,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14039,
											"end": 14153,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14039,
											"end": 14153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14159,
											"end": 14343,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 14159,
											"end": 14343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14258,
											"end": 14269,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14292,
											"end": 14298,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14287,
											"end": 14290,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14280,
											"end": 14299,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14332,
											"end": 14336,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14327,
											"end": 14330,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14323,
											"end": 14337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14308,
											"end": 14337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14308,
											"end": 14337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14159,
											"end": 14343,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14159,
											"end": 14343,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14159,
											"end": 14343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14159,
											"end": 14343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14159,
											"end": 14343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14349,
											"end": 14481,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 14349,
											"end": 14481,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14416,
											"end": 14420,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14439,
											"end": 14442,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14431,
											"end": 14442,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14431,
											"end": 14442,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14469,
											"end": 14473,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14464,
											"end": 14467,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14460,
											"end": 14474,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14452,
											"end": 14474,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14452,
											"end": 14474,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14349,
											"end": 14481,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14349,
											"end": 14481,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14349,
											"end": 14481,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14349,
											"end": 14481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14487,
											"end": 14595,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 14487,
											"end": 14595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14564,
											"end": 14588,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 14582,
											"end": 14587,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14564,
											"end": 14588,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 14564,
											"end": 14588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14564,
											"end": 14588,
											"name": "tag",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 14564,
											"end": 14588,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14559,
											"end": 14562,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14552,
											"end": 14589,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14487,
											"end": 14595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14487,
											"end": 14595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14487,
											"end": 14595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14601,
											"end": 14780,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 14601,
											"end": 14780,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14670,
											"end": 14680,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14691,
											"end": 14737,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 14733,
											"end": 14736,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14725,
											"end": 14731,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14691,
											"end": 14737,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 14691,
											"end": 14737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14691,
											"end": 14737,
											"name": "tag",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 14691,
											"end": 14737,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14769,
											"end": 14773,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14764,
											"end": 14767,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14760,
											"end": 14774,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14746,
											"end": 14774,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14746,
											"end": 14774,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14601,
											"end": 14780,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14601,
											"end": 14780,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14601,
											"end": 14780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14601,
											"end": 14780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14601,
											"end": 14780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14786,
											"end": 14899,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 14786,
											"end": 14899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14856,
											"end": 14860,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14888,
											"end": 14892,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14883,
											"end": 14886,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14879,
											"end": 14893,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14871,
											"end": 14893,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14871,
											"end": 14893,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14786,
											"end": 14899,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14786,
											"end": 14899,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14786,
											"end": 14899,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14786,
											"end": 14899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14935,
											"end": 15667,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 14935,
											"end": 15667,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15054,
											"end": 15057,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15083,
											"end": 15137,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 15131,
											"end": 15136,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15083,
											"end": 15137,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 15083,
											"end": 15137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15083,
											"end": 15137,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 15083,
											"end": 15137,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15153,
											"end": 15239,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 15232,
											"end": 15238,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15227,
											"end": 15230,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15153,
											"end": 15239,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 15153,
											"end": 15239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15153,
											"end": 15239,
											"name": "tag",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 15153,
											"end": 15239,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15146,
											"end": 15239,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 15146,
											"end": 15239,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15263,
											"end": 15319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 15313,
											"end": 15318,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15263,
											"end": 15319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 15263,
											"end": 15319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15263,
											"end": 15319,
											"name": "tag",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 15263,
											"end": 15319,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15342,
											"end": 15349,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15373,
											"end": 15374,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15358,
											"end": 15642,
											"name": "tag",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 15358,
											"end": 15642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15383,
											"end": 15389,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15380,
											"end": 15381,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15377,
											"end": 15390,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 15358,
											"end": 15642,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15358,
											"end": 15642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 15358,
											"end": 15642,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15459,
											"end": 15465,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15453,
											"end": 15466,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15486,
											"end": 15549,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 15545,
											"end": 15548,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 15530,
											"end": 15543,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15486,
											"end": 15549,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 15486,
											"end": 15549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15486,
											"end": 15549,
											"name": "tag",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 15486,
											"end": 15549,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15479,
											"end": 15549,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 15479,
											"end": 15549,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15572,
											"end": 15632,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 15625,
											"end": 15631,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15572,
											"end": 15632,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 15572,
											"end": 15632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15572,
											"end": 15632,
											"name": "tag",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 15572,
											"end": 15632,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15562,
											"end": 15632,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15562,
											"end": 15632,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15418,
											"end": 15642,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15405,
											"end": 15406,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 15402,
											"end": 15403,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15398,
											"end": 15407,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15393,
											"end": 15407,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15393,
											"end": 15407,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15358,
											"end": 15642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 15358,
											"end": 15642,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15358,
											"end": 15642,
											"name": "tag",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 15358,
											"end": 15642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15362,
											"end": 15376,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15658,
											"end": 15661,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15651,
											"end": 15661,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 15651,
											"end": 15661,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15059,
											"end": 15667,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15059,
											"end": 15667,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15059,
											"end": 15667,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14935,
											"end": 15667,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14935,
											"end": 15667,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14935,
											"end": 15667,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14935,
											"end": 15667,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14935,
											"end": 15667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15673,
											"end": 16046,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 15673,
											"end": 16046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15816,
											"end": 15820,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15854,
											"end": 15856,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15843,
											"end": 15852,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15839,
											"end": 15857,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15831,
											"end": 15857,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15831,
											"end": 15857,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15903,
											"end": 15912,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15897,
											"end": 15901,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15893,
											"end": 15913,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15889,
											"end": 15890,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15878,
											"end": 15887,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15874,
											"end": 15891,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15867,
											"end": 15914,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15931,
											"end": 16039,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 16034,
											"end": 16038,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16025,
											"end": 16031,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15931,
											"end": 16039,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 15931,
											"end": 16039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15931,
											"end": 16039,
											"name": "tag",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 15931,
											"end": 16039,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15923,
											"end": 16039,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15923,
											"end": 16039,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15673,
											"end": 16046,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15673,
											"end": 16046,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15673,
											"end": 16046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15673,
											"end": 16046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15673,
											"end": 16046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16052,
											"end": 17091,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 16052,
											"end": 17091,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16179,
											"end": 16185,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16187,
											"end": 16193,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16195,
											"end": 16201,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16244,
											"end": 16246,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 16232,
											"end": 16241,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16223,
											"end": 16230,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16219,
											"end": 16242,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16215,
											"end": 16247,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 16212,
											"end": 16331,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16212,
											"end": 16331,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 16212,
											"end": 16331,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16250,
											"end": 16329,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 16250,
											"end": 16329,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 16250,
											"end": 16329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16250,
											"end": 16329,
											"name": "tag",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 16250,
											"end": 16329,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16212,
											"end": 16331,
											"name": "tag",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 16212,
											"end": 16331,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16370,
											"end": 16371,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16395,
											"end": 16448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 16440,
											"end": 16447,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16431,
											"end": 16437,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16420,
											"end": 16429,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 16416,
											"end": 16438,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16395,
											"end": 16448,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 16395,
											"end": 16448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16395,
											"end": 16448,
											"name": "tag",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 16395,
											"end": 16448,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16385,
											"end": 16448,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 16385,
											"end": 16448,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16341,
											"end": 16458,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16525,
											"end": 16527,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16514,
											"end": 16523,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16510,
											"end": 16528,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16497,
											"end": 16529,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 16556,
											"end": 16574,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16548,
											"end": 16554,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16545,
											"end": 16575,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 16542,
											"end": 16659,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16542,
											"end": 16659,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 16542,
											"end": 16659,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16578,
											"end": 16657,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 16578,
											"end": 16657,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 16578,
											"end": 16657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16578,
											"end": 16657,
											"name": "tag",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 16578,
											"end": 16657,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16542,
											"end": 16659,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 16542,
											"end": 16659,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16683,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 16753,
											"end": 16760,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16744,
											"end": 16750,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16733,
											"end": 16742,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 16729,
											"end": 16751,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16683,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 16683,
											"end": 16761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16683,
											"end": 16761,
											"name": "tag",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 16683,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16673,
											"end": 16761,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16673,
											"end": 16761,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16468,
											"end": 16771,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16838,
											"end": 16840,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16827,
											"end": 16836,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16823,
											"end": 16841,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16810,
											"end": 16842,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 16869,
											"end": 16887,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16861,
											"end": 16867,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16858,
											"end": 16888,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 16855,
											"end": 16972,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16855,
											"end": 16972,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 16855,
											"end": 16972,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16891,
											"end": 16970,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 16891,
											"end": 16970,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 16891,
											"end": 16970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16891,
											"end": 16970,
											"name": "tag",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 16891,
											"end": 16970,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16855,
											"end": 16972,
											"name": "tag",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 16855,
											"end": 16972,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16996,
											"end": 17074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 17066,
											"end": 17073,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 17057,
											"end": 17063,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17046,
											"end": 17055,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 17042,
											"end": 17064,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16996,
											"end": 17074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 16996,
											"end": 17074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16996,
											"end": 17074,
											"name": "tag",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 16996,
											"end": 17074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16986,
											"end": 17074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16986,
											"end": 17074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16781,
											"end": 17084,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16052,
											"end": 17091,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16052,
											"end": 17091,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16052,
											"end": 17091,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16052,
											"end": 17091,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16052,
											"end": 17091,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16052,
											"end": 17091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17097,
											"end": 17215,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 17097,
											"end": 17215,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17184,
											"end": 17208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 17202,
											"end": 17207,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17184,
											"end": 17208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 17184,
											"end": 17208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17184,
											"end": 17208,
											"name": "tag",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 17184,
											"end": 17208,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17179,
											"end": 17182,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17172,
											"end": 17209,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17097,
											"end": 17215,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17097,
											"end": 17215,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17097,
											"end": 17215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17221,
											"end": 17443,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 17221,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17314,
											"end": 17318,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17352,
											"end": 17354,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17337,
											"end": 17355,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17329,
											"end": 17355,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17329,
											"end": 17355,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17365,
											"end": 17436,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 17433,
											"end": 17434,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17422,
											"end": 17431,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17418,
											"end": 17435,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17409,
											"end": 17415,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17365,
											"end": 17436,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 17365,
											"end": 17436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17365,
											"end": 17436,
											"name": "tag",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 17365,
											"end": 17436,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17221,
											"end": 17443,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17221,
											"end": 17443,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17221,
											"end": 17443,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17221,
											"end": 17443,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17221,
											"end": 17443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17449,
											"end": 17565,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 17449,
											"end": 17565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17519,
											"end": 17540,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 17534,
											"end": 17539,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17519,
											"end": 17540,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 17519,
											"end": 17540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17519,
											"end": 17540,
											"name": "tag",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 17519,
											"end": 17540,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17512,
											"end": 17517,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17509,
											"end": 17541,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 17499,
											"end": 17559,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 17499,
											"end": 17559,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17555,
											"end": 17556,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17552,
											"end": 17553,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17545,
											"end": 17557,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 17499,
											"end": 17559,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 17499,
											"end": 17559,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17449,
											"end": 17565,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17449,
											"end": 17565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17571,
											"end": 17704,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 17571,
											"end": 17704,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17614,
											"end": 17619,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17652,
											"end": 17658,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17639,
											"end": 17659,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 17630,
											"end": 17659,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17630,
											"end": 17659,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17668,
											"end": 17698,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 17692,
											"end": 17697,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17668,
											"end": 17698,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 17668,
											"end": 17698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17668,
											"end": 17698,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 17668,
											"end": 17698,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17571,
											"end": 17704,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17571,
											"end": 17704,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17571,
											"end": 17704,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17571,
											"end": 17704,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17571,
											"end": 17704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17710,
											"end": 18178,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 17710,
											"end": 18178,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17775,
											"end": 17781,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17783,
											"end": 17789,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17832,
											"end": 17834,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 17820,
											"end": 17829,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17811,
											"end": 17818,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17807,
											"end": 17830,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 17803,
											"end": 17835,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 17800,
											"end": 17919,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17800,
											"end": 17919,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 17800,
											"end": 17919,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17838,
											"end": 17917,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 17838,
											"end": 17917,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 17838,
											"end": 17917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17838,
											"end": 17917,
											"name": "tag",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 17838,
											"end": 17917,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17800,
											"end": 17919,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 17800,
											"end": 17919,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17958,
											"end": 17959,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17983,
											"end": 18036,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 18028,
											"end": 18035,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18019,
											"end": 18025,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18008,
											"end": 18017,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18004,
											"end": 18026,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17983,
											"end": 18036,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 17983,
											"end": 18036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17983,
											"end": 18036,
											"name": "tag",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 17983,
											"end": 18036,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17973,
											"end": 18036,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17973,
											"end": 18036,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17929,
											"end": 18046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18085,
											"end": 18087,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18111,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 18153,
											"end": 18160,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18144,
											"end": 18150,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18133,
											"end": 18142,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18129,
											"end": 18151,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18111,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 18111,
											"end": 18161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18111,
											"end": 18161,
											"name": "tag",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 18111,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18101,
											"end": 18161,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18101,
											"end": 18161,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18056,
											"end": 18171,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17710,
											"end": 18178,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17710,
											"end": 18178,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17710,
											"end": 18178,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17710,
											"end": 18178,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17710,
											"end": 18178,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17710,
											"end": 18178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18184,
											"end": 18658,
											"name": "tag",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 18184,
											"end": 18658,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18252,
											"end": 18258,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18260,
											"end": 18266,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18309,
											"end": 18311,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 18297,
											"end": 18306,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18288,
											"end": 18295,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18284,
											"end": 18307,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18280,
											"end": 18312,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 18277,
											"end": 18396,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18277,
											"end": 18396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 18277,
											"end": 18396,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18315,
											"end": 18394,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 18315,
											"end": 18394,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 18315,
											"end": 18394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18315,
											"end": 18394,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 18315,
											"end": 18394,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18277,
											"end": 18396,
											"name": "tag",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 18277,
											"end": 18396,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18435,
											"end": 18436,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18460,
											"end": 18513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 18505,
											"end": 18512,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18496,
											"end": 18502,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18485,
											"end": 18494,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18481,
											"end": 18503,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18460,
											"end": 18513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 18460,
											"end": 18513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18460,
											"end": 18513,
											"name": "tag",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 18460,
											"end": 18513,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18450,
											"end": 18513,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18450,
											"end": 18513,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18406,
											"end": 18523,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18562,
											"end": 18564,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18588,
											"end": 18641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 18633,
											"end": 18640,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18624,
											"end": 18630,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18613,
											"end": 18622,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18609,
											"end": 18631,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18588,
											"end": 18641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 18588,
											"end": 18641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18588,
											"end": 18641,
											"name": "tag",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 18588,
											"end": 18641,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18578,
											"end": 18641,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18578,
											"end": 18641,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18533,
											"end": 18651,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18184,
											"end": 18658,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18184,
											"end": 18658,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18184,
											"end": 18658,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18184,
											"end": 18658,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18184,
											"end": 18658,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18184,
											"end": 18658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18664,
											"end": 19753,
											"name": "tag",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 18664,
											"end": 19753,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18768,
											"end": 18774,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18776,
											"end": 18782,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18784,
											"end": 18790,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18792,
											"end": 18798,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18800,
											"end": 18806,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18849,
											"end": 18852,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 18837,
											"end": 18846,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18828,
											"end": 18835,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 18824,
											"end": 18847,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18820,
											"end": 18853,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 18817,
											"end": 18937,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18817,
											"end": 18937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 18817,
											"end": 18937,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18856,
											"end": 18935,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 18856,
											"end": 18935,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 18856,
											"end": 18935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18856,
											"end": 18935,
											"name": "tag",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 18856,
											"end": 18935,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18817,
											"end": 18937,
											"name": "tag",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 18817,
											"end": 18937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18976,
											"end": 18977,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19001,
											"end": 19054,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 19046,
											"end": 19053,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 19037,
											"end": 19043,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19026,
											"end": 19035,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 19022,
											"end": 19044,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19001,
											"end": 19054,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 19001,
											"end": 19054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19001,
											"end": 19054,
											"name": "tag",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 19001,
											"end": 19054,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18947,
											"end": 19064,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19103,
											"end": 19105,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19129,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 19174,
											"end": 19181,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 19165,
											"end": 19171,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19154,
											"end": 19163,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 19150,
											"end": 19172,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19129,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 19129,
											"end": 19182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19129,
											"end": 19182,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 19129,
											"end": 19182,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19119,
											"end": 19182,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 19119,
											"end": 19182,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19074,
											"end": 19192,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19231,
											"end": 19233,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 19257,
											"end": 19310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 19302,
											"end": 19309,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 19293,
											"end": 19299,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19282,
											"end": 19291,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 19278,
											"end": 19300,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19257,
											"end": 19310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 19257,
											"end": 19310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19257,
											"end": 19310,
											"name": "tag",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 19257,
											"end": 19310,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19247,
											"end": 19310,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 19247,
											"end": 19310,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19202,
											"end": 19320,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19359,
											"end": 19361,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 19385,
											"end": 19438,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 19430,
											"end": 19437,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 19421,
											"end": 19427,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19410,
											"end": 19419,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 19406,
											"end": 19428,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19385,
											"end": 19438,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 19385,
											"end": 19438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19385,
											"end": 19438,
											"name": "tag",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 19385,
											"end": 19438,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19375,
											"end": 19438,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19375,
											"end": 19438,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19330,
											"end": 19448,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19515,
											"end": 19518,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 19504,
											"end": 19513,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 19500,
											"end": 19519,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19487,
											"end": 19520,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 19547,
											"end": 19565,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19539,
											"end": 19545,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19536,
											"end": 19566,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 19533,
											"end": 19650,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19533,
											"end": 19650,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 19533,
											"end": 19650,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19569,
											"end": 19648,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 19569,
											"end": 19648,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 19569,
											"end": 19648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19569,
											"end": 19648,
											"name": "tag",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 19569,
											"end": 19648,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19533,
											"end": 19650,
											"name": "tag",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 19533,
											"end": 19650,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19674,
											"end": 19736,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 19728,
											"end": 19735,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 19719,
											"end": 19725,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19708,
											"end": 19717,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 19704,
											"end": 19726,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19674,
											"end": 19736,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 19674,
											"end": 19736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19674,
											"end": 19736,
											"name": "tag",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 19674,
											"end": 19736,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19664,
											"end": 19736,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19664,
											"end": 19736,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19458,
											"end": 19746,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18664,
											"end": 19753,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18664,
											"end": 19753,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 18664,
											"end": 19753,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18664,
											"end": 19753,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18664,
											"end": 19753,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 18664,
											"end": 19753,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18664,
											"end": 19753,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 18664,
											"end": 19753,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18664,
											"end": 19753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19759,
											"end": 20088,
											"name": "tag",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 19759,
											"end": 20088,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19818,
											"end": 19824,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19867,
											"end": 19869,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19855,
											"end": 19864,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19846,
											"end": 19853,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19842,
											"end": 19865,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 19838,
											"end": 19870,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 19835,
											"end": 19954,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19835,
											"end": 19954,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 19835,
											"end": 19954,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19873,
											"end": 19952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 19873,
											"end": 19952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 19873,
											"end": 19952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19873,
											"end": 19952,
											"name": "tag",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 19873,
											"end": 19952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19835,
											"end": 19954,
											"name": "tag",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 19835,
											"end": 19954,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19993,
											"end": 19994,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20018,
											"end": 20071,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 20063,
											"end": 20070,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20054,
											"end": 20060,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20043,
											"end": 20052,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 20039,
											"end": 20061,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20018,
											"end": 20071,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 20018,
											"end": 20071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20018,
											"end": 20071,
											"name": "tag",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 20018,
											"end": 20071,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20008,
											"end": 20071,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20008,
											"end": 20071,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19964,
											"end": 20081,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19759,
											"end": 20088,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19759,
											"end": 20088,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19759,
											"end": 20088,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19759,
											"end": 20088,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19759,
											"end": 20088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20094,
											"end": 20713,
											"name": "tag",
											"source": 14,
											"value": "81"
										},
										{
											"begin": 20094,
											"end": 20713,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20171,
											"end": 20177,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20179,
											"end": 20185,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 20187,
											"end": 20193,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20236,
											"end": 20238,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 20224,
											"end": 20233,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20215,
											"end": 20222,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 20211,
											"end": 20234,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20207,
											"end": 20239,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 20204,
											"end": 20323,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 20204,
											"end": 20323,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "589"
										},
										{
											"begin": 20204,
											"end": 20323,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20242,
											"end": 20321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 20242,
											"end": 20321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 20242,
											"end": 20321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20242,
											"end": 20321,
											"name": "tag",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 20242,
											"end": 20321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20204,
											"end": 20323,
											"name": "tag",
											"source": 14,
											"value": "589"
										},
										{
											"begin": 20204,
											"end": 20323,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20362,
											"end": 20363,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20387,
											"end": 20440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 20432,
											"end": 20439,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 20423,
											"end": 20429,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20412,
											"end": 20421,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 20408,
											"end": 20430,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20387,
											"end": 20440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 20387,
											"end": 20440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20387,
											"end": 20440,
											"name": "tag",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 20387,
											"end": 20440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20377,
											"end": 20440,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 20377,
											"end": 20440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20333,
											"end": 20450,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20489,
											"end": 20491,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20515,
											"end": 20568,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 20560,
											"end": 20567,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 20551,
											"end": 20557,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20540,
											"end": 20549,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 20536,
											"end": 20558,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20515,
											"end": 20568,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 20515,
											"end": 20568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20515,
											"end": 20568,
											"name": "tag",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 20515,
											"end": 20568,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20505,
											"end": 20568,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20505,
											"end": 20568,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20460,
											"end": 20578,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20617,
											"end": 20619,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 20643,
											"end": 20696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 20688,
											"end": 20695,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 20679,
											"end": 20685,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20668,
											"end": 20677,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 20664,
											"end": 20686,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20643,
											"end": 20696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 20643,
											"end": 20696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20643,
											"end": 20696,
											"name": "tag",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 20643,
											"end": 20696,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20633,
											"end": 20696,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20633,
											"end": 20696,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20588,
											"end": 20706,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20094,
											"end": 20713,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20094,
											"end": 20713,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20094,
											"end": 20713,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20094,
											"end": 20713,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20094,
											"end": 20713,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20094,
											"end": 20713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20719,
											"end": 20899,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 20719,
											"end": 20899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20767,
											"end": 20844,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20764,
											"end": 20765,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20757,
											"end": 20845,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20864,
											"end": 20868,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 20861,
											"end": 20862,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 20854,
											"end": 20869,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20888,
											"end": 20892,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 20885,
											"end": 20886,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20878,
											"end": 20893,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 20905,
											"end": 21225,
											"name": "tag",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 20905,
											"end": 21225,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20949,
											"end": 20955,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20986,
											"end": 20987,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 20980,
											"end": 20984,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20976,
											"end": 20988,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 20966,
											"end": 20988,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20966,
											"end": 20988,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21033,
											"end": 21034,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 21027,
											"end": 21031,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21023,
											"end": 21035,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 21054,
											"end": 21072,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 21044,
											"end": 21125,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 21044,
											"end": 21125,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21110,
											"end": 21114,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 21102,
											"end": 21108,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21098,
											"end": 21115,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 21088,
											"end": 21115,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21088,
											"end": 21115,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21044,
											"end": 21125,
											"name": "tag",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 21044,
											"end": 21125,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21172,
											"end": 21174,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21164,
											"end": 21170,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21161,
											"end": 21175,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 21141,
											"end": 21159,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21138,
											"end": 21176,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 21135,
											"end": 21219,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 21135,
											"end": 21219,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21191,
											"end": 21209,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 21191,
											"end": 21209,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 21191,
											"end": 21209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21191,
											"end": 21209,
											"name": "tag",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 21191,
											"end": 21209,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21135,
											"end": 21219,
											"name": "tag",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 21135,
											"end": 21219,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20956,
											"end": 21225,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20905,
											"end": 21225,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20905,
											"end": 21225,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20905,
											"end": 21225,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20905,
											"end": 21225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21231,
											"end": 21563,
											"name": "tag",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 21231,
											"end": 21563,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21352,
											"end": 21356,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21390,
											"end": 21392,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 21379,
											"end": 21388,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21375,
											"end": 21393,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21367,
											"end": 21393,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21367,
											"end": 21393,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21403,
											"end": 21474,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 21471,
											"end": 21472,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21460,
											"end": 21469,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21456,
											"end": 21473,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21447,
											"end": 21453,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 21403,
											"end": 21474,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 21403,
											"end": 21474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21403,
											"end": 21474,
											"name": "tag",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 21403,
											"end": 21474,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21484,
											"end": 21556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 21552,
											"end": 21554,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21541,
											"end": 21550,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21537,
											"end": 21555,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21528,
											"end": 21534,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 21484,
											"end": 21556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 21484,
											"end": 21556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21484,
											"end": 21556,
											"name": "tag",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 21484,
											"end": 21556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21231,
											"end": 21563,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 21231,
											"end": 21563,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21231,
											"end": 21563,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21231,
											"end": 21563,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21231,
											"end": 21563,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21231,
											"end": 21563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21569,
											"end": 21901,
											"name": "tag",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 21569,
											"end": 21901,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21690,
											"end": 21694,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21728,
											"end": 21730,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 21717,
											"end": 21726,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21705,
											"end": 21731,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21705,
											"end": 21731,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21741,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 21809,
											"end": 21810,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21798,
											"end": 21807,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21794,
											"end": 21811,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21785,
											"end": 21791,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 21741,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 21741,
											"end": 21812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21741,
											"end": 21812,
											"name": "tag",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 21741,
											"end": 21812,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21822,
											"end": 21894,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 21890,
											"end": 21892,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21879,
											"end": 21888,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21875,
											"end": 21893,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21866,
											"end": 21872,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 21822,
											"end": 21894,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 21822,
											"end": 21894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21822,
											"end": 21894,
											"name": "tag",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 21822,
											"end": 21894,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21569,
											"end": 21901,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 21569,
											"end": 21901,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21569,
											"end": 21901,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21569,
											"end": 21901,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21569,
											"end": 21901,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21569,
											"end": 21901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21907,
											"end": 22087,
											"name": "tag",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 21907,
											"end": 22087,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21955,
											"end": 22032,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21952,
											"end": 21953,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21945,
											"end": 22033,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22052,
											"end": 22056,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 22049,
											"end": 22050,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 22042,
											"end": 22057,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22076,
											"end": 22080,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 22073,
											"end": 22074,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22066,
											"end": 22081,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 22093,
											"end": 22273,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 22093,
											"end": 22273,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22141,
											"end": 22218,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22138,
											"end": 22139,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22131,
											"end": 22219,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22238,
											"end": 22242,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 22235,
											"end": 22236,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 22228,
											"end": 22243,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22262,
											"end": 22266,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 22259,
											"end": 22260,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22252,
											"end": 22267,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 22279,
											"end": 22512,
											"name": "tag",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 22279,
											"end": 22512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22318,
											"end": 22321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22341,
											"end": 22365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 22359,
											"end": 22364,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22341,
											"end": 22365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 22341,
											"end": 22365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22341,
											"end": 22365,
											"name": "tag",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 22341,
											"end": 22365,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22332,
											"end": 22365,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22387,
											"end": 22453,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22380,
											"end": 22385,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22377,
											"end": 22454,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 22374,
											"end": 22477,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 22374,
											"end": 22477,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 22457,
											"end": 22475,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 22457,
											"end": 22475,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 22457,
											"end": 22475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22457,
											"end": 22475,
											"name": "tag",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 22457,
											"end": 22475,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22374,
											"end": 22477,
											"name": "tag",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 22374,
											"end": 22477,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22504,
											"end": 22505,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 22497,
											"end": 22502,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22493,
											"end": 22506,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22486,
											"end": 22506,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22486,
											"end": 22506,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22279,
											"end": 22512,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22279,
											"end": 22512,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22279,
											"end": 22512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22279,
											"end": 22512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22518,
											"end": 22659,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 22518,
											"end": 22659,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22567,
											"end": 22571,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22590,
											"end": 22593,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22582,
											"end": 22593,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22582,
											"end": 22593,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22613,
											"end": 22616,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22610,
											"end": 22611,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22603,
											"end": 22617,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22647,
											"end": 22651,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22644,
											"end": 22645,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22634,
											"end": 22652,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 22626,
											"end": 22652,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22626,
											"end": 22652,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22518,
											"end": 22659,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22518,
											"end": 22659,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22518,
											"end": 22659,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22518,
											"end": 22659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22665,
											"end": 22758,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 22665,
											"end": 22758,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22702,
											"end": 22708,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22749,
											"end": 22751,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22744,
											"end": 22746,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 22737,
											"end": 22742,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22733,
											"end": 22747,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22729,
											"end": 22752,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 22719,
											"end": 22752,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22719,
											"end": 22752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22665,
											"end": 22758,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22665,
											"end": 22758,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22665,
											"end": 22758,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22665,
											"end": 22758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22764,
											"end": 22871,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 22764,
											"end": 22871,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22808,
											"end": 22816,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22858,
											"end": 22863,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22852,
											"end": 22856,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22848,
											"end": 22864,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 22827,
											"end": 22864,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22827,
											"end": 22864,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22764,
											"end": 22871,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22764,
											"end": 22871,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22764,
											"end": 22871,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22764,
											"end": 22871,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22764,
											"end": 22871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22877,
											"end": 23270,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 22877,
											"end": 23270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22946,
											"end": 22952,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22996,
											"end": 22997,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 22984,
											"end": 22994,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22980,
											"end": 22998,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 23019,
											"end": 23116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 23049,
											"end": 23115,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23038,
											"end": 23047,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23019,
											"end": 23116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 23019,
											"end": 23116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23019,
											"end": 23116,
											"name": "tag",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 23019,
											"end": 23116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23137,
											"end": 23176,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 23167,
											"end": 23175,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 23156,
											"end": 23165,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23137,
											"end": 23176,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 23137,
											"end": 23176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23137,
											"end": 23176,
											"name": "tag",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 23137,
											"end": 23176,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23125,
											"end": 23176,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 23125,
											"end": 23176,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23209,
											"end": 23213,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 23205,
											"end": 23214,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 23198,
											"end": 23203,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23194,
											"end": 23215,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 23185,
											"end": 23215,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 23185,
											"end": 23215,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23258,
											"end": 23262,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 23248,
											"end": 23256,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 23244,
											"end": 23263,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 23237,
											"end": 23242,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23234,
											"end": 23264,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 23224,
											"end": 23264,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23224,
											"end": 23264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22953,
											"end": 23270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22953,
											"end": 23270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22877,
											"end": 23270,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 22877,
											"end": 23270,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22877,
											"end": 23270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22877,
											"end": 23270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22877,
											"end": 23270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22877,
											"end": 23270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23276,
											"end": 23336,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 23276,
											"end": 23336,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23304,
											"end": 23307,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23325,
											"end": 23330,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23318,
											"end": 23330,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23318,
											"end": 23330,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23276,
											"end": 23336,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23276,
											"end": 23336,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23276,
											"end": 23336,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23276,
											"end": 23336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23342,
											"end": 23484,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 23342,
											"end": 23484,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23392,
											"end": 23401,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23425,
											"end": 23478,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 23443,
											"end": 23477,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 23452,
											"end": 23476,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 23470,
											"end": 23475,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23452,
											"end": 23476,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 23452,
											"end": 23476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23452,
											"end": 23476,
											"name": "tag",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 23452,
											"end": 23476,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23443,
											"end": 23477,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 23443,
											"end": 23477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23443,
											"end": 23477,
											"name": "tag",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 23443,
											"end": 23477,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23425,
											"end": 23478,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 23425,
											"end": 23478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23425,
											"end": 23478,
											"name": "tag",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 23425,
											"end": 23478,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23412,
											"end": 23478,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23412,
											"end": 23478,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23342,
											"end": 23484,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23342,
											"end": 23484,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23342,
											"end": 23484,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23342,
											"end": 23484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23490,
											"end": 23565,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 23490,
											"end": 23565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23533,
											"end": 23536,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23554,
											"end": 23559,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23547,
											"end": 23559,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23547,
											"end": 23559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23490,
											"end": 23565,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23490,
											"end": 23565,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23490,
											"end": 23565,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23490,
											"end": 23565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23571,
											"end": 23840,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 23571,
											"end": 23840,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23681,
											"end": 23720,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 23712,
											"end": 23719,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23681,
											"end": 23720,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 23681,
											"end": 23720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23681,
											"end": 23720,
											"name": "tag",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 23681,
											"end": 23720,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23742,
											"end": 23833,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 23791,
											"end": 23832,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 23815,
											"end": 23831,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23791,
											"end": 23832,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 23791,
											"end": 23832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23791,
											"end": 23832,
											"name": "tag",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 23791,
											"end": 23832,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23783,
											"end": 23789,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23776,
											"end": 23780,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23770,
											"end": 23781,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 23742,
											"end": 23833,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 23742,
											"end": 23833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23742,
											"end": 23833,
											"name": "tag",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 23742,
											"end": 23833,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23736,
											"end": 23740,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23729,
											"end": 23834,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 23647,
											"end": 23840,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23571,
											"end": 23840,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23571,
											"end": 23840,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23571,
											"end": 23840,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23571,
											"end": 23840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23846,
											"end": 23919,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 23846,
											"end": 23919,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23891,
											"end": 23894,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23846,
											"end": 23919,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23846,
											"end": 23919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23925,
											"end": 24114,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 23925,
											"end": 24114,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24002,
											"end": 24034,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 24002,
											"end": 24034,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 24002,
											"end": 24034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24002,
											"end": 24034,
											"name": "tag",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 24002,
											"end": 24034,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24043,
											"end": 24108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 24101,
											"end": 24107,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24093,
											"end": 24099,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24087,
											"end": 24091,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24043,
											"end": 24108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 24043,
											"end": 24108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24043,
											"end": 24108,
											"name": "tag",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 24043,
											"end": 24108,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23978,
											"end": 24114,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23925,
											"end": 24114,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23925,
											"end": 24114,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23925,
											"end": 24114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24120,
											"end": 24306,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 24120,
											"end": 24306,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24180,
											"end": 24300,
											"name": "tag",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 24180,
											"end": 24300,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24197,
											"end": 24200,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24190,
											"end": 24195,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24187,
											"end": 24201,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 24180,
											"end": 24300,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 24180,
											"end": 24300,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 24180,
											"end": 24300,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 24251,
											"end": 24290,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 24288,
											"end": 24289,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24281,
											"end": 24286,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24251,
											"end": 24290,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 24251,
											"end": 24290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24251,
											"end": 24290,
											"name": "tag",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 24251,
											"end": 24290,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24224,
											"end": 24225,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 24217,
											"end": 24222,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24213,
											"end": 24226,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24204,
											"end": 24226,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24204,
											"end": 24226,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24180,
											"end": 24300,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 24180,
											"end": 24300,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24180,
											"end": 24300,
											"name": "tag",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 24180,
											"end": 24300,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24120,
											"end": 24306,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24120,
											"end": 24306,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24120,
											"end": 24306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24312,
											"end": 24855,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 24312,
											"end": 24855,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24413,
											"end": 24415,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 24408,
											"end": 24411,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24405,
											"end": 24416,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 24402,
											"end": 24848,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 24402,
											"end": 24848,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 24402,
											"end": 24848,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 24447,
											"end": 24485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "638"
										},
										{
											"begin": 24479,
											"end": 24484,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24447,
											"end": 24485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 24447,
											"end": 24485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24447,
											"end": 24485,
											"name": "tag",
											"source": 14,
											"value": "638"
										},
										{
											"begin": 24447,
											"end": 24485,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24531,
											"end": 24560,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 24549,
											"end": 24559,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24531,
											"end": 24560,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 24531,
											"end": 24560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24531,
											"end": 24560,
											"name": "tag",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 24531,
											"end": 24560,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24521,
											"end": 24529,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24517,
											"end": 24561,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24714,
											"end": 24716,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24702,
											"end": 24712,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 24699,
											"end": 24717,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 24696,
											"end": 24745,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 24696,
											"end": 24745,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 24696,
											"end": 24745,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 24735,
											"end": 24743,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24720,
											"end": 24743,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24720,
											"end": 24743,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24696,
											"end": 24745,
											"name": "tag",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 24696,
											"end": 24745,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24758,
											"end": 24838,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 24814,
											"end": 24836,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 24832,
											"end": 24835,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 24814,
											"end": 24836,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 24814,
											"end": 24836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24814,
											"end": 24836,
											"name": "tag",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 24814,
											"end": 24836,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24804,
											"end": 24812,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24800,
											"end": 24837,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24787,
											"end": 24798,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24758,
											"end": 24838,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 24758,
											"end": 24838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24758,
											"end": 24838,
											"name": "tag",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 24758,
											"end": 24838,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24417,
											"end": 24848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24417,
											"end": 24848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24402,
											"end": 24848,
											"name": "tag",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 24402,
											"end": 24848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24312,
											"end": 24855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24312,
											"end": 24855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24312,
											"end": 24855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24312,
											"end": 24855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24861,
											"end": 24978,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 24861,
											"end": 24978,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24915,
											"end": 24923,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24965,
											"end": 24970,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24959,
											"end": 24963,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24955,
											"end": 24971,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 24934,
											"end": 24971,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24934,
											"end": 24971,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24861,
											"end": 24978,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24861,
											"end": 24978,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24861,
											"end": 24978,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24861,
											"end": 24978,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24861,
											"end": 24978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24984,
											"end": 25153,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 24984,
											"end": 25153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25028,
											"end": 25034,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25061,
											"end": 25112,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 25109,
											"end": 25110,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25105,
											"end": 25111,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 25097,
											"end": 25102,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25094,
											"end": 25095,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 25090,
											"end": 25103,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 25061,
											"end": 25112,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 25061,
											"end": 25112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25061,
											"end": 25112,
											"name": "tag",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 25061,
											"end": 25112,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25057,
											"end": 25113,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 25142,
											"end": 25146,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 25136,
											"end": 25140,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25132,
											"end": 25147,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 25122,
											"end": 25147,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25122,
											"end": 25147,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25035,
											"end": 25153,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24984,
											"end": 25153,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24984,
											"end": 25153,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24984,
											"end": 25153,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24984,
											"end": 25153,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24984,
											"end": 25153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25158,
											"end": 25453,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 25158,
											"end": 25453,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25234,
											"end": 25238,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25380,
											"end": 25409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 25405,
											"end": 25408,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25399,
											"end": 25403,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25380,
											"end": 25409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 25380,
											"end": 25409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25380,
											"end": 25409,
											"name": "tag",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 25380,
											"end": 25409,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25372,
											"end": 25409,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25372,
											"end": 25409,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25442,
											"end": 25445,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25439,
											"end": 25440,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 25435,
											"end": 25446,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 25429,
											"end": 25433,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25426,
											"end": 25447,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 25418,
											"end": 25447,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25418,
											"end": 25447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25158,
											"end": 25453,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 25158,
											"end": 25453,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25158,
											"end": 25453,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25158,
											"end": 25453,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25158,
											"end": 25453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25458,
											"end": 26853,
											"name": "tag",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 25458,
											"end": 26853,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25575,
											"end": 25612,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 25608,
											"end": 25611,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25575,
											"end": 25612,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 25575,
											"end": 25612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25575,
											"end": 25612,
											"name": "tag",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 25575,
											"end": 25612,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25677,
											"end": 25695,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25669,
											"end": 25675,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25666,
											"end": 25696,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 25663,
											"end": 25719,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 25663,
											"end": 25719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "650"
										},
										{
											"begin": 25663,
											"end": 25719,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 25699,
											"end": 25717,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 25699,
											"end": 25717,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 25699,
											"end": 25717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25699,
											"end": 25717,
											"name": "tag",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 25699,
											"end": 25717,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25663,
											"end": 25719,
											"name": "tag",
											"source": 14,
											"value": "650"
										},
										{
											"begin": 25663,
											"end": 25719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25743,
											"end": 25781,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "652"
										},
										{
											"begin": 25775,
											"end": 25779,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25769,
											"end": 25780,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 25743,
											"end": 25781,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 25743,
											"end": 25781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25743,
											"end": 25781,
											"name": "tag",
											"source": 14,
											"value": "652"
										},
										{
											"begin": 25743,
											"end": 25781,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25828,
											"end": 25895,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 25888,
											"end": 25894,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25880,
											"end": 25886,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25874,
											"end": 25878,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 25828,
											"end": 25895,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 25828,
											"end": 25895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25828,
											"end": 25895,
											"name": "tag",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 25828,
											"end": 25895,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25922,
											"end": 25923,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25946,
											"end": 25950,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 25933,
											"end": 25950,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25933,
											"end": 25950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25978,
											"end": 25980,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 25970,
											"end": 25976,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25967,
											"end": 25981,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 25995,
											"end": 25996,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 25990,
											"end": 26608,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25990,
											"end": 26608,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 25990,
											"end": 26608,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "655"
										},
										{
											"begin": 25990,
											"end": 26608,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 26652,
											"end": 26653,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26669,
											"end": 26675,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 26666,
											"end": 26743,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 26666,
											"end": 26743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 26666,
											"end": 26743,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 26718,
											"end": 26727,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26713,
											"end": 26716,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 26709,
											"end": 26728,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26703,
											"end": 26729,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 26694,
											"end": 26729,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26694,
											"end": 26729,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26666,
											"end": 26743,
											"name": "tag",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 26666,
											"end": 26743,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26769,
											"end": 26836,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 26829,
											"end": 26835,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 26822,
											"end": 26827,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26769,
											"end": 26836,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 26769,
											"end": 26836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26769,
											"end": 26836,
											"name": "tag",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 26769,
											"end": 26836,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26763,
											"end": 26767,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 26756,
											"end": 26837,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 26625,
											"end": 26847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25960,
											"end": 26847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 25960,
											"end": 26847,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25990,
											"end": 26608,
											"name": "tag",
											"source": 14,
											"value": "655"
										},
										{
											"begin": 25990,
											"end": 26608,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26042,
											"end": 26046,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 26038,
											"end": 26047,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 26030,
											"end": 26036,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 26026,
											"end": 26048,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 26076,
											"end": 26113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 26108,
											"end": 26112,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 26076,
											"end": 26113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 26076,
											"end": 26113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26076,
											"end": 26113,
											"name": "tag",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 26076,
											"end": 26113,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26135,
											"end": 26136,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26149,
											"end": 26357,
											"name": "tag",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 26149,
											"end": 26357,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26163,
											"end": 26170,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26160,
											"end": 26161,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26157,
											"end": 26171,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 26149,
											"end": 26357,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 26149,
											"end": 26357,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 26149,
											"end": 26357,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 26242,
											"end": 26251,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 26237,
											"end": 26240,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 26233,
											"end": 26252,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26227,
											"end": 26253,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 26219,
											"end": 26225,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26212,
											"end": 26254,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 26293,
											"end": 26294,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 26285,
											"end": 26291,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26281,
											"end": 26295,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26271,
											"end": 26295,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26271,
											"end": 26295,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26340,
											"end": 26342,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 26329,
											"end": 26338,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 26325,
											"end": 26343,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26312,
											"end": 26343,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 26312,
											"end": 26343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26186,
											"end": 26190,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 26183,
											"end": 26184,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26179,
											"end": 26191,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26174,
											"end": 26191,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26174,
											"end": 26191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26149,
											"end": 26357,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 26149,
											"end": 26357,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26149,
											"end": 26357,
											"name": "tag",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 26149,
											"end": 26357,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26385,
											"end": 26391,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 26376,
											"end": 26383,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26373,
											"end": 26392,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 26370,
											"end": 26549,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 26370,
											"end": 26549,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 26370,
											"end": 26549,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 26443,
											"end": 26452,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 26438,
											"end": 26441,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 26434,
											"end": 26453,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26428,
											"end": 26454,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 26486,
											"end": 26534,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 26528,
											"end": 26532,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 26520,
											"end": 26526,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 26516,
											"end": 26533,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 26505,
											"end": 26514,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26486,
											"end": 26534,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 26486,
											"end": 26534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26486,
											"end": 26534,
											"name": "tag",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 26486,
											"end": 26534,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26478,
											"end": 26484,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26471,
											"end": 26535,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 26393,
											"end": 26549,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26370,
											"end": 26549,
											"name": "tag",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 26370,
											"end": 26549,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26595,
											"end": 26596,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 26591,
											"end": 26592,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 26583,
											"end": 26589,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 26579,
											"end": 26593,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 26575,
											"end": 26597,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26569,
											"end": 26573,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 26562,
											"end": 26598,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 25997,
											"end": 26608,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25997,
											"end": 26608,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25997,
											"end": 26608,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25960,
											"end": 26847,
											"name": "tag",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 25960,
											"end": 26847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25960,
											"end": 26847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25550,
											"end": 26853,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25550,
											"end": 26853,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25550,
											"end": 26853,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25458,
											"end": 26853,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25458,
											"end": 26853,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25458,
											"end": 26853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26859,
											"end": 27412,
											"name": "tag",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 26859,
											"end": 27412,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27036,
											"end": 27040,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27074,
											"end": 27077,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 27063,
											"end": 27072,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27059,
											"end": 27078,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27051,
											"end": 27078,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27051,
											"end": 27078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27088,
											"end": 27159,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 27156,
											"end": 27157,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27145,
											"end": 27154,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27141,
											"end": 27158,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27132,
											"end": 27138,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 27088,
											"end": 27159,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 27088,
											"end": 27159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27088,
											"end": 27159,
											"name": "tag",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 27088,
											"end": 27159,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27169,
											"end": 27241,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 27237,
											"end": 27239,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 27226,
											"end": 27235,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27222,
											"end": 27240,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27213,
											"end": 27219,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 27169,
											"end": 27241,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 27169,
											"end": 27241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27169,
											"end": 27241,
											"name": "tag",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 27169,
											"end": 27241,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27251,
											"end": 27323,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 27319,
											"end": 27321,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 27308,
											"end": 27317,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27304,
											"end": 27322,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27295,
											"end": 27301,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 27251,
											"end": 27323,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 27251,
											"end": 27323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27251,
											"end": 27323,
											"name": "tag",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 27251,
											"end": 27323,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27333,
											"end": 27405,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 27401,
											"end": 27403,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 27390,
											"end": 27399,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27386,
											"end": 27404,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27377,
											"end": 27383,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 27333,
											"end": 27405,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 27333,
											"end": 27405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27333,
											"end": 27405,
											"name": "tag",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 27333,
											"end": 27405,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26859,
											"end": 27412,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 26859,
											"end": 27412,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 26859,
											"end": 27412,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26859,
											"end": 27412,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26859,
											"end": 27412,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26859,
											"end": 27412,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26859,
											"end": 27412,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26859,
											"end": 27412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27418,
											"end": 27609,
											"name": "tag",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 27418,
											"end": 27609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27458,
											"end": 27461,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27477,
											"end": 27497,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 27495,
											"end": 27496,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27477,
											"end": 27497,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 27477,
											"end": 27497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27477,
											"end": 27497,
											"name": "tag",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 27477,
											"end": 27497,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27472,
											"end": 27497,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27472,
											"end": 27497,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27511,
											"end": 27531,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "671"
										},
										{
											"begin": 27529,
											"end": 27530,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27511,
											"end": 27531,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 27511,
											"end": 27531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27511,
											"end": 27531,
											"name": "tag",
											"source": 14,
											"value": "671"
										},
										{
											"begin": 27511,
											"end": 27531,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27506,
											"end": 27531,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 27506,
											"end": 27531,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27554,
											"end": 27555,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27551,
											"end": 27552,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27547,
											"end": 27556,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27540,
											"end": 27556,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27540,
											"end": 27556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27575,
											"end": 27578,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 27572,
											"end": 27573,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27569,
											"end": 27579,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 27566,
											"end": 27602,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 27566,
											"end": 27602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 27566,
											"end": 27602,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 27582,
											"end": 27600,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 27582,
											"end": 27600,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 27582,
											"end": 27600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27582,
											"end": 27600,
											"name": "tag",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 27582,
											"end": 27600,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27566,
											"end": 27602,
											"name": "tag",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 27566,
											"end": 27602,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27418,
											"end": 27609,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 27418,
											"end": 27609,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27418,
											"end": 27609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27418,
											"end": 27609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27418,
											"end": 27609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27615,
											"end": 28249,
											"name": "tag",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 27615,
											"end": 28249,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27836,
											"end": 27840,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27874,
											"end": 27876,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 27863,
											"end": 27872,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27859,
											"end": 27877,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27851,
											"end": 27877,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27851,
											"end": 27877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27923,
											"end": 27932,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27917,
											"end": 27921,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27913,
											"end": 27933,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 27909,
											"end": 27910,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27898,
											"end": 27907,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27894,
											"end": 27911,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27887,
											"end": 27934,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 27951,
											"end": 28059,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "675"
										},
										{
											"begin": 28054,
											"end": 28058,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28045,
											"end": 28051,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 27951,
											"end": 28059,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 27951,
											"end": 28059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27951,
											"end": 28059,
											"name": "tag",
											"source": 14,
											"value": "675"
										},
										{
											"begin": 27951,
											"end": 28059,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27943,
											"end": 28059,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27943,
											"end": 28059,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28106,
											"end": 28115,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28100,
											"end": 28104,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28096,
											"end": 28116,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 28091,
											"end": 28093,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28080,
											"end": 28089,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28076,
											"end": 28094,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28069,
											"end": 28117,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 28134,
											"end": 28242,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 28237,
											"end": 28241,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28228,
											"end": 28234,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 28134,
											"end": 28242,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 28134,
											"end": 28242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28134,
											"end": 28242,
											"name": "tag",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 28134,
											"end": 28242,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28126,
											"end": 28242,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28126,
											"end": 28242,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27615,
											"end": 28249,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 27615,
											"end": 28249,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 27615,
											"end": 28249,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27615,
											"end": 28249,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27615,
											"end": 28249,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27615,
											"end": 28249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28255,
											"end": 28353,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 28255,
											"end": 28353,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28306,
											"end": 28312,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28340,
											"end": 28345,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28334,
											"end": 28346,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 28324,
											"end": 28346,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28324,
											"end": 28346,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28255,
											"end": 28353,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 28255,
											"end": 28353,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28255,
											"end": 28353,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28255,
											"end": 28353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28359,
											"end": 28527,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 28359,
											"end": 28527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28442,
											"end": 28453,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28476,
											"end": 28482,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28471,
											"end": 28474,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28464,
											"end": 28483,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 28516,
											"end": 28520,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28511,
											"end": 28514,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28507,
											"end": 28521,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28492,
											"end": 28521,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28492,
											"end": 28521,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28359,
											"end": 28527,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 28359,
											"end": 28527,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 28359,
											"end": 28527,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28359,
											"end": 28527,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28359,
											"end": 28527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28533,
											"end": 28906,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 28533,
											"end": 28906,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28619,
											"end": 28622,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28647,
											"end": 28685,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "680"
										},
										{
											"begin": 28679,
											"end": 28684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28647,
											"end": 28685,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 28647,
											"end": 28685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28647,
											"end": 28685,
											"name": "tag",
											"source": 14,
											"value": "680"
										},
										{
											"begin": 28647,
											"end": 28685,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28701,
											"end": 28771,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 28764,
											"end": 28770,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28759,
											"end": 28762,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 28701,
											"end": 28771,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 28701,
											"end": 28771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28701,
											"end": 28771,
											"name": "tag",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 28701,
											"end": 28771,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28694,
											"end": 28771,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 28694,
											"end": 28771,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28780,
											"end": 28845,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 28838,
											"end": 28844,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28833,
											"end": 28836,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 28826,
											"end": 28830,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28819,
											"end": 28824,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 28815,
											"end": 28831,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28780,
											"end": 28845,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 28780,
											"end": 28845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28780,
											"end": 28845,
											"name": "tag",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 28780,
											"end": 28845,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28870,
											"end": 28899,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 28892,
											"end": 28898,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28870,
											"end": 28899,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 28870,
											"end": 28899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28870,
											"end": 28899,
											"name": "tag",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 28870,
											"end": 28899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28865,
											"end": 28868,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 28861,
											"end": 28900,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28854,
											"end": 28900,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 28854,
											"end": 28900,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28623,
											"end": 28906,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28533,
											"end": 28906,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 28533,
											"end": 28906,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 28533,
											"end": 28906,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28533,
											"end": 28906,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28533,
											"end": 28906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28912,
											"end": 29663,
											"name": "tag",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 28912,
											"end": 29663,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29135,
											"end": 29139,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29173,
											"end": 29176,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 29162,
											"end": 29171,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29158,
											"end": 29177,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29150,
											"end": 29177,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29150,
											"end": 29177,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29187,
											"end": 29258,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 29255,
											"end": 29256,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29244,
											"end": 29253,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29240,
											"end": 29257,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29231,
											"end": 29237,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 29187,
											"end": 29258,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 29187,
											"end": 29258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29187,
											"end": 29258,
											"name": "tag",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 29187,
											"end": 29258,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29268,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "686"
										},
										{
											"begin": 29336,
											"end": 29338,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29325,
											"end": 29334,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29321,
											"end": 29339,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29312,
											"end": 29318,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 29268,
											"end": 29340,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 29268,
											"end": 29340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29268,
											"end": 29340,
											"name": "tag",
											"source": 14,
											"value": "686"
										},
										{
											"begin": 29268,
											"end": 29340,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29350,
											"end": 29422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 29418,
											"end": 29420,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 29407,
											"end": 29416,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29403,
											"end": 29421,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29394,
											"end": 29400,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 29350,
											"end": 29422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 29350,
											"end": 29422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29350,
											"end": 29422,
											"name": "tag",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 29350,
											"end": 29422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29432,
											"end": 29504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 29500,
											"end": 29502,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 29489,
											"end": 29498,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29485,
											"end": 29503,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29476,
											"end": 29482,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 29432,
											"end": 29504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 29432,
											"end": 29504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29432,
											"end": 29504,
											"name": "tag",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 29432,
											"end": 29504,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29552,
											"end": 29561,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29546,
											"end": 29550,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29542,
											"end": 29562,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 29536,
											"end": 29539,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 29525,
											"end": 29534,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29521,
											"end": 29540,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29514,
											"end": 29563,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 29580,
											"end": 29656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "689"
										},
										{
											"begin": 29651,
											"end": 29655,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29642,
											"end": 29648,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 29580,
											"end": 29656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 29580,
											"end": 29656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29580,
											"end": 29656,
											"name": "tag",
											"source": 14,
											"value": "689"
										},
										{
											"begin": 29580,
											"end": 29656,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29572,
											"end": 29656,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29572,
											"end": 29656,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28912,
											"end": 29663,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 28912,
											"end": 29663,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 28912,
											"end": 29663,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28912,
											"end": 29663,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28912,
											"end": 29663,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28912,
											"end": 29663,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28912,
											"end": 29663,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28912,
											"end": 29663,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28912,
											"end": 29663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29669,
											"end": 29810,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 29669,
											"end": 29810,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29725,
											"end": 29730,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29756,
											"end": 29762,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29750,
											"end": 29763,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 29741,
											"end": 29763,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29741,
											"end": 29763,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29772,
											"end": 29804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "691"
										},
										{
											"begin": 29798,
											"end": 29803,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29772,
											"end": 29804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 29772,
											"end": 29804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29772,
											"end": 29804,
											"name": "tag",
											"source": 14,
											"value": "691"
										},
										{
											"begin": 29772,
											"end": 29804,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29669,
											"end": 29810,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 29669,
											"end": 29810,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29669,
											"end": 29810,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29669,
											"end": 29810,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29669,
											"end": 29810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29816,
											"end": 30165,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 29816,
											"end": 30165,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29885,
											"end": 29891,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29934,
											"end": 29936,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29922,
											"end": 29931,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29913,
											"end": 29920,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 29909,
											"end": 29932,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 29905,
											"end": 29937,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 29902,
											"end": 30021,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 29902,
											"end": 30021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "693"
										},
										{
											"begin": 29902,
											"end": 30021,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 29940,
											"end": 30019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "694"
										},
										{
											"begin": 29940,
											"end": 30019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 29940,
											"end": 30019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29940,
											"end": 30019,
											"name": "tag",
											"source": 14,
											"value": "694"
										},
										{
											"begin": 29940,
											"end": 30019,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29902,
											"end": 30021,
											"name": "tag",
											"source": 14,
											"value": "693"
										},
										{
											"begin": 29902,
											"end": 30021,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30060,
											"end": 30061,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30085,
											"end": 30148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 30140,
											"end": 30147,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 30131,
											"end": 30137,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30120,
											"end": 30129,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 30116,
											"end": 30138,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30085,
											"end": 30148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 30085,
											"end": 30148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30085,
											"end": 30148,
											"name": "tag",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 30085,
											"end": 30148,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30075,
											"end": 30148,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30075,
											"end": 30148,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30031,
											"end": 30158,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29816,
											"end": 30165,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 29816,
											"end": 30165,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29816,
											"end": 30165,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29816,
											"end": 30165,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29816,
											"end": 30165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30171,
											"end": 31224,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 30171,
											"end": 31224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30494,
											"end": 30498,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30532,
											"end": 30535,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 30521,
											"end": 30530,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30517,
											"end": 30536,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30509,
											"end": 30536,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30509,
											"end": 30536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30546,
											"end": 30617,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 30614,
											"end": 30615,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30603,
											"end": 30612,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30599,
											"end": 30616,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30590,
											"end": 30596,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 30546,
											"end": 30617,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 30546,
											"end": 30617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30546,
											"end": 30617,
											"name": "tag",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 30546,
											"end": 30617,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30627,
											"end": 30699,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "698"
										},
										{
											"begin": 30695,
											"end": 30697,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 30684,
											"end": 30693,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30680,
											"end": 30698,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30671,
											"end": 30677,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 30627,
											"end": 30699,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 30627,
											"end": 30699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30627,
											"end": 30699,
											"name": "tag",
											"source": 14,
											"value": "698"
										},
										{
											"begin": 30627,
											"end": 30699,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30746,
											"end": 30755,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30740,
											"end": 30744,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30736,
											"end": 30756,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 30731,
											"end": 30733,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 30720,
											"end": 30729,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30716,
											"end": 30734,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30709,
											"end": 30757,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 30774,
											"end": 30882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 30877,
											"end": 30881,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30868,
											"end": 30874,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 30774,
											"end": 30882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 30774,
											"end": 30882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30774,
											"end": 30882,
											"name": "tag",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 30774,
											"end": 30882,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30766,
											"end": 30882,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30766,
											"end": 30882,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30929,
											"end": 30938,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30923,
											"end": 30927,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30919,
											"end": 30939,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 30914,
											"end": 30916,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 30903,
											"end": 30912,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30899,
											"end": 30917,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30892,
											"end": 30940,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 30957,
											"end": 31065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 31060,
											"end": 31064,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31051,
											"end": 31057,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 30957,
											"end": 31065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 30957,
											"end": 31065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30957,
											"end": 31065,
											"name": "tag",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 30957,
											"end": 31065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30949,
											"end": 31065,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30949,
											"end": 31065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31113,
											"end": 31122,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31107,
											"end": 31111,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31103,
											"end": 31123,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 31097,
											"end": 31100,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 31086,
											"end": 31095,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 31082,
											"end": 31101,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31075,
											"end": 31124,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31141,
											"end": 31217,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 31212,
											"end": 31216,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31203,
											"end": 31209,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 31141,
											"end": 31217,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 31141,
											"end": 31217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31141,
											"end": 31217,
											"name": "tag",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 31141,
											"end": 31217,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31133,
											"end": 31217,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31133,
											"end": 31217,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30171,
											"end": 31224,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 30171,
											"end": 31224,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 30171,
											"end": 31224,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30171,
											"end": 31224,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30171,
											"end": 31224,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30171,
											"end": 31224,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30171,
											"end": 31224,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30171,
											"end": 31224,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30171,
											"end": 31224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/burnTest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setURI(string)": "02fe5305",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/burnTest.sol\":\"MyToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xdfab949ba677f4b122d0c14225e6db7ca8a65524e2f00049e57b04f68eceeb87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d240211d484954a409a8870c3a971af9e2eb6b6d0ab46b50c193c4a1576006\",\"dweb:/ipfs/QmdzSJoJ6iqoWrGKNeDjV4KVfCqna7Vc7AMoQxpxTdTMpF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/burnTest.sol\":{\"keccak256\":\"0x3447826c5298a602925c27909d6561c016dad3bfcd62a8bf63b338e8b5cc3c10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07314b50b7070de6637a33b2ab1f3d8898ac1ff0d52669ebf2e34fd6385020da\",\"dweb:/ipfs/Qme74nEx4SGkNKznLvekr3NEZYbfdzbqrcFTs466pAYFzW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "contracts/burnTest.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "contracts/burnTest.sol:MyToken",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "contracts/burnTest.sol:MyToken",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/burnTest.sol:MyToken",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1801
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1802,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1801,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1801,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1801
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1791,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1779
						],
						"Context": [
							1801
						],
						"ERC1155": [
							1335
						],
						"ERC165": [
							1935
						],
						"IERC1155": [
							1458
						],
						"IERC1155Errors": [
							284
						],
						"IERC1155MetadataURI": [
							1596
						],
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1947
						]
					},
					"id": 1336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1459,
							"src": "135:40:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1458,
										"src": "143:8:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1501,
							"src": "176:56:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1500,
										"src": "184:16:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1597,
							"src": "233:73:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1596,
										"src": "241:19:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1802,
							"src": "307:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1801,
										"src": "315:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1936,
							"src": "356:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1947,
										"src": "364:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 296,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1935,
										"src": "373:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1780,
							"src": "426:46:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 298,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1779,
										"src": "434:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 285,
							"src": "473:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 284,
										"src": "481:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 303,
										"name": "Context",
										"nameLocations": [
											"756:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1801,
										"src": "756:7:2"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "756:7:2"
								},
								{
									"baseName": {
										"id": 305,
										"name": "ERC165",
										"nameLocations": [
											"765:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1935,
										"src": "765:6:2"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "765:6:2"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC1155",
										"nameLocations": [
											"773:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1458,
										"src": "773:8:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "773:8:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"783:19:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1596,
										"src": "783:19:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "783:19:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC1155Errors",
										"nameLocations": [
											"804:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 284,
										"src": "804:14:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "804:14:2"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "542:184:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1335,
							"linearizedBaseContracts": [
								1335,
								284,
								1596,
								1458,
								1935,
								1947,
								1801
							],
							"name": "ERC1155",
							"nameLocation": "745:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 316,
									"libraryName": {
										"id": 313,
										"name": "Arrays",
										"nameLocations": [
											"831:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1779,
										"src": "831:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "825:27:2",
									"typeName": {
										"baseType": {
											"id": 314,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 315,
										"nodeType": "ArrayTypeName",
										"src": "842:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 320,
									"libraryName": {
										"id": 317,
										"name": "Arrays",
										"nameLocations": [
											"863:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1779,
										"src": "863:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "857:27:2",
									"typeName": {
										"baseType": {
											"id": 318,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 319,
										"nodeType": "ArrayTypeName",
										"src": "874:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 326,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "957:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "890:76:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 325,
										"keyName": "id",
										"keyNameLocation": "906:2:2",
										"keyType": {
											"id": 321,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "890:58:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 324,
											"keyName": "account",
											"keyNameLocation": "928:7:2",
											"keyType": {
												"id": 322,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "912:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 323,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1043:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "973:88:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 331,
										"keyName": "account",
										"keyNameLocation": "989:7:2",
										"keyType": {
											"id": 327,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "973:61:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 330,
											"keyName": "operator",
											"keyNameLocation": "1016:8:2",
											"keyType": {
												"id": 328,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1000:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 329,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1028:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1197:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "1182:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 333,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1182:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1283:30:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 341,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "1301:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 340,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "1293:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "1293:13:2"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "1208:38:2",
										"text": " @dev See {_setURI}."
									},
									"id": 345,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1277:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1263:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:2"
									},
									"scope": 1335,
									"src": "1251:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1934,
										1946
									],
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "1488:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 356,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1517:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 358,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "1537:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1458_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1458_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 357,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1532:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1532:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1458",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1547:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1532:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1517:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 362,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1574:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 364,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1596,
																			"src": "1594:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1596_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1596_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 363,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1589:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1589:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1596",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1615:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1589:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1574:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1517:109:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1666:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 369,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1642:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1335_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1648:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1934,
															"src": "1642:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:161:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 355,
												"id": 374,
												"nodeType": "Return",
												"src": "1498:180:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1319:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1389:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 352,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 350,
												"name": "ERC165",
												"nameLocations": [
													"1456:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1935,
												"src": "1456:6:2"
											},
											{
												"id": 351,
												"name": "IERC165",
												"nameLocations": [
													"1464:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1947,
												"src": "1464:7:2"
											}
										],
										"src": "1447:25:2"
									},
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1414:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1407:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 347,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1407:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:20:2"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1482:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:6:2"
									},
									"scope": 1335,
									"src": "1380:305:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1595
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "2159:28:2",
										"statements": [
											{
												"expression": {
													"id": 384,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "2176:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 383,
												"id": 385,
												"nodeType": "Return",
												"src": "2169:11:2"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "1691:388:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2093:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2097:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:2"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2144:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:2"
									},
									"scope": 1335,
									"src": "2084:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1396
									],
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "2333:46:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 397,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "2350:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 399,
														"indexExpression": {
															"id": 398,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2360:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2350:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 401,
													"indexExpression": {
														"id": 400,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "2364:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2350:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 396,
												"id": 402,
												"nodeType": "Return",
												"src": "2343:29:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "2193:49:2",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2266:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2291:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2283:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:29:2"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2324:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:2"
									},
									"scope": 1335,
									"src": "2247:132:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1409
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "2678:410:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 417,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2692:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2701:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2692:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 419,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "2711:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2715:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 430,
												"nodeType": "IfStatement",
												"src": "2688:121:2",
												"trueBody": {
													"id": 429,
													"nodeType": "Block",
													"src": "2723:86:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 423,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "2770:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2774:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2770:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 425,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 408,
																			"src": "2782:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2791:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2782:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 422,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "2744:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:54:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 428,
															"nodeType": "RevertStatement",
															"src": "2737:61:2"
														}
													]
												}
											},
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2836:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "2819:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 433,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2819:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 434,
															"nodeType": "ArrayTypeName",
															"src": "2819:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 439,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "2866:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2875:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2866:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2852:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 436,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2856:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 437,
															"nodeType": "ArrayTypeName",
															"src": "2856:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2819:63:2"
											},
											{
												"body": {
													"id": 469,
													"nodeType": "Block",
													"src": "2939:112:2",
													"statements": [
														{
															"expression": {
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 454,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "2953:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 456,
																	"indexExpression": {
																		"id": 455,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "2967:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2953:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 460,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "3010:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 458,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 408,
																					"src": "2982:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2991:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1778,
																				"src": "2982:27:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2982:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 464,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "3037:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 462,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 411,
																					"src": "3014:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3018:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1765,
																				"src": "3014:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3014:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 457,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "2972:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2972:68:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:87:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 468,
															"nodeType": "ExpressionStatement",
															"src": "2953:87:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2913:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 448,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2917:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2917:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2913:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 470,
												"initializationExpression": {
													"assignments": [
														444
													],
													"declarations": [
														{
															"constant": false,
															"id": 444,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2906:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 470,
															"src": "2898:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 443,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2898:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 446,
													"initialValue": {
														"hexValue": "30",
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2910:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2898:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2934:3:2",
														"subExpression": {
															"id": 451,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2936:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 453,
													"nodeType": "ExpressionStatement",
													"src": "2934:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2893:158:2"
											},
											{
												"expression": {
													"id": 471,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 435,
													"src": "3068:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 416,
												"id": 472,
												"nodeType": "Return",
												"src": "3061:20:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "2385:146:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2545:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2586:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2569:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 406,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2569:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 407,
													"nodeType": "ArrayTypeName",
													"src": "2569:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2621:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2604:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2604:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ArrayTypeName",
													"src": "2604:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2559:71:2"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2660:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 413,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 414,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:18:2"
									},
									"scope": 1335,
									"src": "2536:552:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1417
									],
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "3231:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 483,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "3260:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3274:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3284:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 482,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "3241:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "3241:52:2"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3094:57:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3165:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3191:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3183:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3206:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3201:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3201:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:33:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:2"
									},
									"scope": 1335,
									"src": "3156:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1427
									],
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "3463:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 500,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "3480:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 502,
														"indexExpression": {
															"id": 501,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "3499:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3480:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 504,
													"indexExpression": {
														"id": 503,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "3508:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3480:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 499,
												"id": 505,
												"nodeType": "Return",
												"src": "3473:44:2"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "3306:56:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3376:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3401:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3393:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3418:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3410:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:35:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3457:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3457:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:6:2"
									},
									"scope": 1335,
									"src": "3367:157:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "3704:238:2",
										"statements": [
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3722:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "3714:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 521,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3714:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 523,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "3731:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3714:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 526,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3757:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 527,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "3765:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3757:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3775:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 530,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "3793:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 531,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "3799:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 529,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "3776:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3776:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3757:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "3753:129:2",
												"trueBody": {
													"id": 540,
													"nodeType": "Block",
													"src": "3808:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 536,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "3858:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 537,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "3866:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 535,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "3829:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3829:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 539,
															"nodeType": "RevertStatement",
															"src": "3822:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3909:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "3915:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "3919:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 546,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "3923:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 547,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "3930:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "3891:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "3891:44:2"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "3530:56:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3600:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3625:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3617:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3639:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3631:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3651:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3643:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3670:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 517,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3670:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:72:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:2"
									},
									"scope": 1335,
									"src": "3591:351:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1457
									],
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "4198:245:2",
										"statements": [
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4216:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 596,
														"src": "4208:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 567,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4208:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 571,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 569,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "4225:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4251:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 573,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "4259:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4251:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4269:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 576,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "4287:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 577,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "4293:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 575,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "4270:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4270:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4251:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "4247:129:2",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "4302:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "4352:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 583,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "4360:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 581,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "4323:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 585,
															"nodeType": "RevertStatement",
															"src": "4316:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 589,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4408:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "4414:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "4418:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 592,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4423:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 593,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "4431:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 588,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "4385:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4385:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "4385:51:2"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "3948:61:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4023:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4062:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4054:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4084:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4076:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4113:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4096:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 557,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4096:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 558,
													"nodeType": "ArrayTypeName",
													"src": "4096:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4143:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4126:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 560,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4126:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 561,
													"nodeType": "ArrayTypeName",
													"src": "4126:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4172:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4159:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4159:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:138:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:0:2"
									},
									"scope": 1335,
									"src": "4014:429:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "5251:1174:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 611,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5265:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5265:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 613,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5279:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5279:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5265:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 624,
												"nodeType": "IfStatement",
												"src": "5261:117:2",
												"trueBody": {
													"id": 623,
													"nodeType": "Block",
													"src": "5294:84:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 617,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 605,
																			"src": "5341:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5345:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5341:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 619,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 608,
																			"src": "5353:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5360:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5353:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 616,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "5315:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:52:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 622,
															"nodeType": "RevertStatement",
															"src": "5308:59:2"
														}
													]
												}
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5396:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 749,
														"src": "5388:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 625,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5388:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 627,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "5407:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5388:31:2"
											},
											{
												"body": {
													"id": 710,
													"nodeType": "Block",
													"src": "5471:650:2",
													"statements": [
														{
															"assignments": [
																642
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 642,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5493:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 710,
																	"src": "5485:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 641,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5485:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 647,
															"initialValue": {
																"arguments": [
																	{
																		"id": 645,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5521:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 643,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "5498:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5502:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1765,
																	"src": "5498:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5485:38:2"
														},
														{
															"assignments": [
																649
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 649,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5545:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 710,
																	"src": "5537:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 648,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5537:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 654,
															"initialValue": {
																"arguments": [
																	{
																		"id": 652,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5579:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 650,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "5553:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5560:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1765,
																	"src": "5553:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5553:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5537:44:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 655,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "5600:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5616:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5608:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 656,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5608:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5608:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5600:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 693,
															"nodeType": "IfStatement",
															"src": "5596:420:2",
															"trueBody": {
																"id": 692,
																"nodeType": "Block",
																"src": "5620:396:2",
																"statements": [
																	{
																		"assignments": [
																			662
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 662,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5646:11:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 692,
																				"src": "5638:19:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5638:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 668,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 663,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 326,
																					"src": "5660:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 665,
																				"indexExpression": {
																					"id": 664,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "5670:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5660:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 667,
																			"indexExpression": {
																				"id": 666,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 600,
																				"src": "5674:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5660:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5638:41:2"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 669,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "5701:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 670,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "5715:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5701:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 680,
																		"nodeType": "IfStatement",
																		"src": "5697:129:2",
																		"trueBody": {
																			"id": 679,
																			"nodeType": "Block",
																			"src": "5722:104:2",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 673,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 600,
																								"src": "5778:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 674,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 662,
																								"src": "5784:11:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 675,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 649,
																								"src": "5797:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 676,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "5804:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 672,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 249,
																							"src": "5751:26:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 677,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5751:56:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 678,
																					"nodeType": "RevertStatement",
																					"src": "5744:63:2"
																				}
																			]
																		}
																	},
																	{
																		"id": 691,
																		"nodeType": "UncheckedBlock",
																		"src": "5843:159:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 689,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 681,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 326,
																								"src": "5942:9:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 684,
																							"indexExpression": {
																								"id": 682,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "5952:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5942:13:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 685,
																						"indexExpression": {
																							"id": 683,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 600,
																							"src": "5956:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5942:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 688,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 686,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 662,
																							"src": "5964:11:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 687,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 649,
																							"src": "5978:5:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5964:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5942:41:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 690,
																				"nodeType": "ExpressionStatement",
																				"src": "5942:41:2"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 694,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "6034:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6048:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6040:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 695,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6040:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6040:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6034:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 709,
															"nodeType": "IfStatement",
															"src": "6030:81:2",
															"trueBody": {
																"id": 708,
																"nodeType": "Block",
																"src": "6052:59:2",
																"statements": [
																	{
																		"expression": {
																			"id": 706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 700,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 326,
																						"src": "6070:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 703,
																					"indexExpression": {
																						"id": 701,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 642,
																						"src": "6080:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6070:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 704,
																				"indexExpression": {
																					"id": 702,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 602,
																					"src": "6084:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6070:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 705,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "6091:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6070:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 707,
																		"nodeType": "ExpressionStatement",
																		"src": "6070:26:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 634,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "5450:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 635,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5454:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5458:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5454:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5450:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 711,
												"initializationExpression": {
													"assignments": [
														631
													],
													"declarations": [
														{
															"constant": false,
															"id": 631,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5443:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 711,
															"src": "5435:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 630,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5435:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 633,
													"initialValue": {
														"hexValue": "30",
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5447:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5435:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5466:3:2",
														"subExpression": {
															"id": 638,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "5468:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 640,
													"nodeType": "ExpressionStatement",
													"src": "5466:3:2"
												},
												"nodeType": "ForStatement",
												"src": "5430:691:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 712,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "6135:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6139:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6135:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6149:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6135:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "6343:76:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 740,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6376:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 741,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "6386:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 742,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "6392:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6396:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 744,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "6401:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 739,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "6362:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6362:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "6357:51:2"
														}
													]
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "6131:288:2",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "6152:185:2",
													"statements": [
														{
															"assignments": [
																717
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 717,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6174:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 738,
																	"src": "6166:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 716,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6166:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 722,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6202:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 718,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6179:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6183:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1765,
																	"src": "6179:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6166:38:2"
														},
														{
															"assignments": [
																724
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 724,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6226:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 738,
																	"src": "6218:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 729,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6260:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 725,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "6234:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6241:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1765,
																	"src": "6234:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6234:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6218:44:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 731,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6296:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 732,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "6306:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 733,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "6312:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 734,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "6316:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 735,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "6320:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 730,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "6281:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6281:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 737,
															"nodeType": "EmitStatement",
															"src": "6276:50:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "4449:690:2",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5153:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5169:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5161:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5183:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5175:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5204:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5187:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 603,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5187:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 604,
													"nodeType": "ArrayTypeName",
													"src": "5187:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5226:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5209:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 606,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5209:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 607,
													"nodeType": "ArrayTypeName",
													"src": "5209:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:73:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5251:0:2"
									},
									"scope": 1335,
									"src": "5144:1281:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "7195:499:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 767,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "7213:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "7219:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "7223:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 770,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "7228:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 766,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "7205:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7205:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "7205:30:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "7249:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7263:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7255:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 774,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7255:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7255:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7249:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "7245:443:2",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "7267:421:2",
													"statements": [
														{
															"assignments": [
																780
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 780,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7289:8:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 823,
																	"src": "7281:16:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 783,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 781,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1791,
																	"src": "7300:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7300:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7281:31:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 784,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "7330:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7334:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7330:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7344:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7330:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 821,
																"nodeType": "Block",
																"src": "7571:107:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 813,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "7625:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 814,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "7635:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 815,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "7641:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 816,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "7645:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 817,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "7650:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 818,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "7658:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 812,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "7589:35:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7589:74:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 820,
																		"nodeType": "ExpressionStatement",
																		"src": "7589:74:2"
																	}
																]
															},
															"id": 822,
															"nodeType": "IfStatement",
															"src": "7326:352:2",
															"trueBody": {
																"id": 811,
																"nodeType": "Block",
																"src": "7347:218:2",
																"statements": [
																	{
																		"assignments": [
																			789
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 789,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7373:2:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "7365:10:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 788,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7365:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 794,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 792,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7401:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 790,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "7378:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7382:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1765,
																				"src": "7378:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7378:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7365:38:2"
																	},
																	{
																		"assignments": [
																			796
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 796,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7429:5:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "7421:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 795,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7421:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 801,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 799,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7463:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 797,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "7437:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7444:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1765,
																				"src": "7437:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7437:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7421:44:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 803,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "7514:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 804,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "7524:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 805,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "7530:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 806,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 789,
																					"src": "7534:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 807,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 796,
																					"src": "7538:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 808,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "7545:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 802,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1248,
																				"src": "7483:30:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7483:67:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 810,
																		"nodeType": "ExpressionStatement",
																		"src": "7483:67:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "6431:568:2",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7013:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7057:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7049:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7079:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7071:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7071:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7108:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7091:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 756,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7091:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 757,
													"nodeType": "ArrayTypeName",
													"src": "7091:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7138:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7121:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 759,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 760,
													"nodeType": "ArrayTypeName",
													"src": "7121:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7167:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7154:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 762,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7154:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:138:2"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:0:2"
									},
									"scope": 1335,
									"src": "7004:690:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "8259:355:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 840,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "8273:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8287:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 841,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8273:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "8269:88:2",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "8291:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8343:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8335:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 847,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8335:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8335:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 846,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "8312:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 852,
															"nodeType": "RevertStatement",
															"src": "8305:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 855,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "8370:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8386:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 856,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8378:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8378:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8370:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"nodeType": "IfStatement",
												"src": "8366:88:2",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "8390:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8440:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8432:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 862,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8432:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8432:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 861,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "8411:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8411:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 867,
															"nodeType": "RevertStatement",
															"src": "8404:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													874,
													877
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8481:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "8464:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 872,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8464:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 873,
															"nodeType": "ArrayTypeName",
															"src": "8464:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 877,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8503:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "8486:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 875,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8486:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 876,
															"nodeType": "ArrayTypeName",
															"src": "8486:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 882,
												"initialValue": {
													"arguments": [
														{
															"id": 879,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8532:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 880,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "8536:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 878,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "8513:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8463:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 884,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "8579:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "8585:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 886,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "8589:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 887,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "8594:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 888,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "8602:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 883,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "8552:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8552:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "8552:55:2"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "7700:446:2",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8160:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8186:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8178:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8200:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8192:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8212:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8204:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8224:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8216:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8244:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8231:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 836,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8231:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:72:2"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8259:0:2"
									},
									"scope": 1335,
									"src": "8151:463:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "9194:266:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 908,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "9208:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9222:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9214:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 909,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9214:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9214:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9208:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 922,
												"nodeType": "IfStatement",
												"src": "9204:88:2",
												"trueBody": {
													"id": 921,
													"nodeType": "Block",
													"src": "9226:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9278:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9270:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 915,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9270:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9270:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 914,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "9247:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9247:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 920,
															"nodeType": "RevertStatement",
															"src": "9240:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 923,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "9305:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9321:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9313:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 924,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9313:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9313:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9305:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "9301:88:2",
												"trueBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "9325:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9375:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9367:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 930,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9367:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9367:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 929,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "9346:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 935,
															"nodeType": "RevertStatement",
															"src": "9339:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "9425:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "9431:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "9435:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 942,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "9440:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 943,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "9448:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 938,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "9398:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9398:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "9398:55:2"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "8620:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9024:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9064:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9056:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9086:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9078:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9115:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9098:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 898,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 899,
													"nodeType": "ArrayTypeName",
													"src": "9098:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9145:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9128:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 901,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9128:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 902,
													"nodeType": "ArrayTypeName",
													"src": "9128:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9174:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9161:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9161:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9046:138:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9194:0:2"
									},
									"scope": 1335,
									"src": "9015:445:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "10338:30:2",
										"statements": [
											{
												"expression": {
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 953,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "10348:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 954,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "10355:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10348:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "10348:13:2"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "9466:811:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10291:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10313:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "10299:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 949,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10299:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10298:22:2"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:2"
									},
									"scope": 1335,
									"src": "10282:86:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "10828:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 970,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "10842:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10856:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10848:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 971,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10848:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10848:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10842:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "10838:88:2",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "10860:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10912:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10904:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 977,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10904:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10904:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 976,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "10881:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10881:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 982,
															"nodeType": "RevertStatement",
															"src": "10874:41:2"
														}
													]
												}
											},
											{
												"assignments": [
													989,
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 989,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10953:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10936:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 987,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10936:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 988,
															"nodeType": "ArrayTypeName",
															"src": "10936:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10975:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10958:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 990,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10958:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 991,
															"nodeType": "ArrayTypeName",
															"src": "10958:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "11004:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 995,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "11008:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "10985:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10985:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10935:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11059:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11051:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 999,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11051:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11051:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "11063:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "11067:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1005,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "11072:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1006,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "11080:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 998,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "11024:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11024:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "11024:61:2"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "10374:367:2",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10755:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10769:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10761:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10781:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10773:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10773:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10793:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10785:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10785:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10813:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10800:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10800:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:58:2"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10828:0:2"
									},
									"scope": 1335,
									"src": "10746:346:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "11630:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "11644:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11658:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11650:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11650:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11650:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11644:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1038,
												"nodeType": "IfStatement",
												"src": "11640:88:2",
												"trueBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "11662:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11714:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11706:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1031,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11706:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11706:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1030,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "11683:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1036,
															"nodeType": "RevertStatement",
															"src": "11676:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11764:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1040,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11764:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11764:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "11776:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "11780:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1046,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "11785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1047,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "11793:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1039,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "11737:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11737:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "11737:61:2"
											}
										]
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "11098:420:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11532:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11551:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11543:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11543:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11572:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11555:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1014,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11555:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1015,
													"nodeType": "ArrayTypeName",
													"src": "11555:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11594:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11577:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1017,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11577:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1018,
													"nodeType": "ArrayTypeName",
													"src": "11577:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11615:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11602:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11602:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11542:78:2"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:2"
									},
									"scope": 1335,
									"src": "11523:282:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "12164:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1061,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "12178:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12194:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12186:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1062,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12186:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12186:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12178:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"nodeType": "IfStatement",
												"src": "12174:88:2",
												"trueBody": {
													"id": 1074,
													"nodeType": "Block",
													"src": "12198:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12248:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12240:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1068,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12240:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12240:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1067,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "12219:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12219:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1073,
															"nodeType": "RevertStatement",
															"src": "12212:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													1080,
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1080,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12289:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "12272:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1078,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12272:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1079,
															"nodeType": "ArrayTypeName",
															"src": "12272:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12311:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "12294:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1081,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1082,
															"nodeType": "ArrayTypeName",
															"src": "12294:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"arguments": [
														{
															"id": 1085,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "12340:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1086,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "12344:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "12321:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12321:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12271:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "12387:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12401:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12393:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1091,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12393:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12393:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "12405:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1096,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "12410:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12418:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1089,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "12360:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "12360:61:2"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "11811:283:2",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12108:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12122:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12114:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12136:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12128:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12128:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12148:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12140:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12113:41:2"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12164:0:2"
									},
									"scope": 1335,
									"src": "12099:329:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "12874:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1113,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "12888:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12904:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12896:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1114,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12896:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12896:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12888:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "12884:88:2",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "12908:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12950:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1120,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12950:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12950:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1119,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "12929:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12929:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "RevertStatement",
															"src": "12922:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1129,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "13008:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13022:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13014:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1130,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13014:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13014:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "13026:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1135,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "13031:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13039:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1128,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "12981:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12981:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "12981:61:2"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "12434:345:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12793:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12812:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12804:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12804:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12835:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12818:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1105,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12818:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1106,
													"nodeType": "ArrayTypeName",
													"src": "12818:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12857:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12840:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1108,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12840:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1109,
													"nodeType": "ArrayTypeName",
													"src": "12840:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12803:61:2"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12874:0:2"
									},
									"scope": 1335,
									"src": "12784:265:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "13361:222:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1150,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "13375:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13395:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13387:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1151,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13387:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13387:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13375:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1164,
												"nodeType": "IfStatement",
												"src": "13371:94:2",
												"trueBody": {
													"id": 1163,
													"nodeType": "Block",
													"src": "13399:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13451:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13443:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1157,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13443:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13443:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1156,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "13420:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1162,
															"nodeType": "RevertStatement",
															"src": "13413:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1165,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "13474:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1168,
															"indexExpression": {
																"id": 1166,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "13493:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13474:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1169,
														"indexExpression": {
															"id": 1167,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13500:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13474:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1170,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "13512:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13474:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "13474:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1174,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "13550:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1175,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13557:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "13567:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1173,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "13535:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13535:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "EmitStatement",
												"src": "13530:46:2"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "13055:208:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13277:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13304:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13296:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13296:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13319:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13311:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13334:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13329:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13329:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13295:48:2"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13361:0:2"
									},
									"scope": 1335,
									"src": "13268:315:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "13953:782:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1196,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "13967:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13970:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13967:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13975:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13967:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13984:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13967:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1246,
												"nodeType": "IfStatement",
												"src": "13963:766:2",
												"trueBody": {
													"id": 1245,
													"nodeType": "Block",
													"src": "13987:742:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1225,
																		"nodeType": "Block",
																		"src": "14103:206:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1218,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1214,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1212,
																						"src": "14125:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1215,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1500,
																								"src": "14137:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1216,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14154:17:2",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1481,
																							"src": "14137:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1217,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14172:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14137:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14125:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1224,
																				"nodeType": "IfStatement",
																				"src": "14121:174:2",
																				"trueBody": {
																					"id": 1223,
																					"nodeType": "Block",
																					"src": "14182:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1220,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1187,
																										"src": "14273:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1219,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "14250:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1221,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14250:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1222,
																							"nodeType": "RevertStatement",
																							"src": "14243:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1226,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1213,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1212,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14093:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1226,
																				"src": "14086:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1211,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14086:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14085:17:2"
																	},
																	"src": "14077:232:2"
																},
																{
																	"block": {
																		"id": 1242,
																		"nodeType": "Block",
																		"src": "14338:381:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1233,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1230,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1228,
																							"src": "14360:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14367:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14360:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1232,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14377:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14360:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1240,
																					"nodeType": "Block",
																					"src": "14515:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "14601:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "14638:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14642:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "14634:3:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14634:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14657:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "14651:5:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14651:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "14627:6:2"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "14627:38:2"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "14627:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1228,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14642:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1228,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14657:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1239,
																							"nodeType": "InlineAssembly",
																							"src": "14592:95:2"
																						}
																					]
																				},
																				"id": 1241,
																				"nodeType": "IfStatement",
																				"src": "14356:349:2",
																				"trueBody": {
																					"id": 1238,
																					"nodeType": "Block",
																					"src": "14380:129:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1235,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1187,
																										"src": "14487:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1234,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "14464:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1236,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14464:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1237,
																							"nodeType": "RevertStatement",
																							"src": "14457:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1243,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1229,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1228,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14330:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1243,
																				"src": "14317:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1227,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14317:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14316:21:2"
																	},
																	"src": "14310:409:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1205,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "14044:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1206,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "14054:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1207,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "14060:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1208,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "14064:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1209,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "14071:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1202,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "14022:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1201,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "14005:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14005:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1500",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14026:17:2",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1481,
																	"src": "14005:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14005:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1244,
															"nodeType": "TryStatement",
															"src": "14001:718:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "13589:167:2",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13770:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13818:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13810:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13844:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13836:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13866:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13858:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13886:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13878:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13906:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13898:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13934:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13921:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13921:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:144:2"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13953:0:2"
									},
									"scope": 1335,
									"src": "13761:974:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "15140:824:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1266,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "15154:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15157:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15154:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15162:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15154:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15171:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15154:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "15150:808:2",
												"trueBody": {
													"id": 1315,
													"nodeType": "Block",
													"src": "15174:784:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1295,
																		"nodeType": "Block",
																		"src": "15327:211:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1284,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1282,
																						"src": "15349:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1285,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1500,
																								"src": "15361:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1286,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15378:22:2",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1499,
																							"src": "15361:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1287,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15401:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15361:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15349:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1294,
																				"nodeType": "IfStatement",
																				"src": "15345:179:2",
																				"trueBody": {
																					"id": 1293,
																					"nodeType": "Block",
																					"src": "15411:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1290,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "15502:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1289,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "15479:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1291,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15479:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1292,
																							"nodeType": "RevertStatement",
																							"src": "15472:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1296,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1283,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1282,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15304:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1296,
																				"src": "15297:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1281,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15297:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15279:47:2"
																	},
																	"src": "15271:267:2"
																},
																{
																	"block": {
																		"id": 1312,
																		"nodeType": "Block",
																		"src": "15567:381:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1300,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1298,
																							"src": "15589:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1301,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15596:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15589:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15606:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15589:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1310,
																					"nodeType": "Block",
																					"src": "15744:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "15830:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "15867:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "15871:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "15863:3:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "15863:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "15886:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "15880:5:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "15880:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "15856:6:2"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "15856:38:2"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "15856:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1298,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15871:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1298,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15886:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1309,
																							"nodeType": "InlineAssembly",
																							"src": "15821:95:2"
																						}
																					]
																				},
																				"id": 1311,
																				"nodeType": "IfStatement",
																				"src": "15585:349:2",
																				"trueBody": {
																					"id": 1308,
																					"nodeType": "Block",
																					"src": "15609:129:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1305,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "15716:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1304,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "15693:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1306,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15693:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1307,
																							"nodeType": "RevertStatement",
																							"src": "15686:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1313,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1299,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1298,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15559:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1313,
																				"src": "15546:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1297,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15546:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15545:21:2"
																	},
																	"src": "15539:409:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1275,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "15236:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1276,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "15246:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1277,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "15252:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1278,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "15257:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1279,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "15265:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1272,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "15209:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1271,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "15192:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15192:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1500",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15213:22:2",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1499,
																	"src": "15192:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15192:78:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1314,
															"nodeType": "TryStatement",
															"src": "15188:760:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "14741:177:2",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14932:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14985:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "14977:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14977:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15011:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15003:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15003:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15033:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15062:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15045:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1256,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15045:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1257,
													"nodeType": "ArrayTypeName",
													"src": "15045:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15092:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15075:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1259,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15075:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1260,
													"nodeType": "ArrayTypeName",
													"src": "15075:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15121:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15108:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15108:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14967:164:2"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15140:0:2"
									},
									"scope": 1335,
									"src": "14923:1041:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "16238:691:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "16300:623:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16358:21:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16374:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16368:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16368:11:2"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nodeType": "YulIdentifier",
																	"src": "16358:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nodeType": "YulIdentifier",
																		"src": "16436:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16444:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16429:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16429:17:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16429:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nodeType": "YulIdentifier",
																				"src": "16567:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16575:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16563:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16563:17:2"
																	},
																	{
																		"name": "element1",
																		"nodeType": "YulIdentifier",
																		"src": "16582:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16556:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16556:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16556:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16682:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nodeType": "YulIdentifier",
																		"src": "16696:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16704:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16692:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16692:17:2"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nodeType": "YulIdentifier",
																	"src": "16682:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nodeType": "YulIdentifier",
																		"src": "16729:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16737:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16722:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16722:17:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16722:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nodeType": "YulIdentifier",
																				"src": "16763:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16771:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16759:17:2"
																	},
																	{
																		"name": "element2",
																		"nodeType": "YulIdentifier",
																		"src": "16778:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16752:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16752:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16752:35:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16889:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nodeType": "YulIdentifier",
																				"src": "16899:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16907:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16895:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16895:17:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16882:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16882:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16882:31:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16358:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16436:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16567:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16696:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16682:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16729:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16763:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16899:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1321,
														"isOffset": false,
														"isSlot": false,
														"src": "16582:8:2",
														"valueSize": 1
													},
													{
														"declaration": 1323,
														"isOffset": false,
														"isSlot": false,
														"src": "16778:8:2",
														"valueSize": 1
													}
												],
												"id": 1332,
												"nodeType": "InlineAssembly",
												"src": "16291:632:2"
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "15970:105:2",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "16089:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "16125:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16117:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16117:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "16151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16107:58:2"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "16205:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16188:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1325,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16188:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1326,
													"nodeType": "ArrayTypeName",
													"src": "16188:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "16230:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16213:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1328,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16213:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1329,
													"nodeType": "ArrayTypeName",
													"src": "16213:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16187:50:2"
									},
									"scope": 1335,
									"src": "16080:849:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1336,
							"src": "727:16204:2",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "109:16823:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1458
						],
						"IERC165": [
							1947
						]
					},
					"id": 1459,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1459,
							"sourceUnit": 1948,
							"src": "136:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1338,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1947,
										"src": "144:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1341,
										"name": "IERC165",
										"nameLocations": [
											"358:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1947,
										"src": "358:7:3"
									},
									"id": 1342,
									"nodeType": "InheritanceSpecifier",
									"src": "358:7:3"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1340,
								"nodeType": "StructuredDocumentation",
								"src": "200:135:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 1458,
							"linearizedBaseContracts": [
								1458,
								1947
							],
							"name": "IERC1155",
							"nameLocation": "346:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "372:125:3",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1355,
									"name": "TransferSingle",
									"nameLocation": "508:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "539:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "523:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "565:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "549:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "587:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "571:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "599:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "591:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "611:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "603:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:95:3"
									},
									"src": "502:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "624:144:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1370,
									"name": "TransferBatch",
									"nameLocation": "779:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "818:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "802:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "852:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "836:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "866:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "904:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "894:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1363,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "894:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"nodeType": "ArrayTypeName",
													"src": "894:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "927:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "917:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1366,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "917:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1367,
													"nodeType": "ArrayTypeName",
													"src": "917:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:147:3"
									},
									"src": "773:167:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "946:147:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1379,
									"name": "ApprovalForAll",
									"nameLocation": "1104:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1135:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1119:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1160:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1144:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1175:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1170:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:66:3"
									},
									"src": "1098:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "1191:343:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1386,
									"name": "URI",
									"nameLocation": "1545:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1556:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1549:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1549:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1579:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1563:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:34:3"
									},
									"src": "1539:44:3"
								},
								{
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "1589:172:3",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1775:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1793:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1785:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1810:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1802:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:29:3"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1837:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:9:3"
									},
									"scope": 1458,
									"src": "1766:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "1852:188:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2054:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2097:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2078:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1398,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2078:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1399,
													"nodeType": "ArrayTypeName",
													"src": "2078:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2134:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2115:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1401,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2115:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1402,
													"nodeType": "ArrayTypeName",
													"src": "2115:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:75:3"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2167:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1405,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2167:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1406,
													"nodeType": "ArrayTypeName",
													"src": "2167:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:18:3"
									},
									"scope": 1458,
									"src": "2045:140:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "2191:248:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2453:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2479:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2471:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2494:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2489:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2489:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:33:3"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:3"
									},
									"scope": 1458,
									"src": "2444:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "2519:135:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2668:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2693:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2685:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2710:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2702:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:35:3"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2743:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2743:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:6:3"
									},
									"scope": 1458,
									"src": "2659:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "2755:910:3",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3679:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3704:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3696:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3718:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3710:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3730:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3722:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3742:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3734:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3764:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3749:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3749:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:74:3"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3778:0:3"
									},
									"scope": 1458,
									"src": "3670:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "3785:744:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4543:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4582:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4574:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4574:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4604:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4596:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4635:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4616:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1447,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4616:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1448,
													"nodeType": "ArrayTypeName",
													"src": "4616:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4667:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4648:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1450,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4648:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1451,
													"nodeType": "ArrayTypeName",
													"src": "4648:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4698:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4683:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4683:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:144:3"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4717:0:3"
									},
									"scope": 1458,
									"src": "4534:184:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1459,
							"src": "336:4384:3",
							"usedErrors": [],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "110:4611:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1947
						]
					},
					"id": 1501,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1460,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1501,
							"sourceUnit": 1948,
							"src": "144:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1461,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1947,
										"src": "152:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1464,
										"name": "IERC165",
										"nameLocations": [
											"357:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1947,
										"src": "357:7:4"
									},
									"id": 1465,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:4"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1463,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:4",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1500,
							"linearizedBaseContracts": [
								1500,
								1947
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "371:826:4",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1211:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1246:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1238:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1272:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1264:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1294:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1286:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1314:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1306:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1344:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1329:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1329:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:126:4"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1373:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1478,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:8:4"
									},
									"scope": 1500,
									"src": "1202:179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "1387:994:4",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2395:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2435:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2427:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2461:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2453:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2494:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2475:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1487,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2475:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1488,
													"nodeType": "ArrayTypeName",
													"src": "2475:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2526:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2507:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1490,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2507:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1491,
													"nodeType": "ArrayTypeName",
													"src": "2507:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2557:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2542:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2542:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:150:4"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2586:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2586:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:8:4"
									},
									"scope": 1500,
									"src": "2386:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1501,
							"src": "327:2269:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2479:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
					"exportedSymbols": {
						"ERC1155": [
							1335
						],
						"ERC1155Burnable": [
							1580
						]
					},
					"id": 1581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1502,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1504,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1581,
							"sourceUnit": 1336,
							"src": "154:39:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1503,
										"name": "ERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1335,
										"src": "162:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1506,
										"name": "ERC1155",
										"nameLocations": [
											"380:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "380:7:5"
									},
									"id": 1507,
									"nodeType": "InheritanceSpecifier",
									"src": "380:7:5"
								}
							],
							"canonicalName": "ERC1155Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1505,
								"nodeType": "StructuredDocumentation",
								"src": "195:147:5",
								"text": " @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use."
							},
							"fullyImplemented": true,
							"id": 1580,
							"linearizedBaseContracts": [
								1580,
								1335,
								284,
								1596,
								1458,
								1935,
								1947,
								1801
							],
							"name": "ERC1155Burnable",
							"nameLocation": "361:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "467:208:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1516,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "481:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1517,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "492:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "492:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "481:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "508:40:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 1521,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1509,
																	"src": "526:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1522,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1791,
																		"src": "535:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "535:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1520,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "509:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "509:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "481:67:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1534,
												"nodeType": "IfStatement",
												"src": "477:156:5",
												"trueBody": {
													"id": 1533,
													"nodeType": "Block",
													"src": "550:83:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1528,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1791,
																			"src": "600:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "600:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1530,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1509,
																		"src": "614:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1527,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "571:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "571:51:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1532,
															"nodeType": "RevertStatement",
															"src": "564:58:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1536,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "649:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1537,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "658:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1538,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "662:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1535,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "643:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "643:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "643:25:5"
											}
										]
									},
									"functionSelector": "f5298aca",
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "403:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "416:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "408:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "433:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "425:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "445:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "437:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:44:5"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "467:0:5"
									},
									"scope": 1580,
									"src": "394:281:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "779:215:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1553,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "793:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1554,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "804:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "804:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "793:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "820:40:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 1558,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1544,
																	"src": "838:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1559,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1791,
																		"src": "847:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "847:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1557,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "821:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "821:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "793:67:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1571,
												"nodeType": "IfStatement",
												"src": "789:156:5",
												"trueBody": {
													"id": 1570,
													"nodeType": "Block",
													"src": "862:83:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1565,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1791,
																			"src": "912:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "912:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1567,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1544,
																		"src": "926:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1564,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "883:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "883:51:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1569,
															"nodeType": "RevertStatement",
															"src": "876:58:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1573,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "966:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1574,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "975:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1575,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "980:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1572,
														"name": "_burnBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "955:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "955:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "955:32:5"
											}
										]
									},
									"functionSelector": "6b20c454",
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnBatch",
									"nameLocation": "690:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "708:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "700:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "734:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "717:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1545,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "717:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1546,
													"nodeType": "ArrayTypeName",
													"src": "717:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "756:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "739:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1548,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "739:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1549,
													"nodeType": "ArrayTypeName",
													"src": "739:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "699:64:5"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:0:5"
									},
									"scope": 1580,
									"src": "681:313:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1581,
							"src": "343:653:5",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "128:869:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1458
						],
						"IERC1155MetadataURI": [
							1596
						]
					},
					"id": 1597,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1582,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1597,
							"sourceUnit": 1459,
							"src": "158:41:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1583,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1458,
										"src": "166:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1586,
										"name": "IERC1155",
										"nameLocations": [
											"399:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1458,
										"src": "399:8:6"
									},
									"id": 1587,
									"nodeType": "InheritanceSpecifier",
									"src": "399:8:6"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1585,
								"nodeType": "StructuredDocumentation",
								"src": "201:164:6",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 1596,
							"linearizedBaseContracts": [
								1596,
								1458,
								1947
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "376:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "414:192:6",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1595,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "620:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "624:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:12:6"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "659:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1592,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "659:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:15:6"
									},
									"scope": 1596,
									"src": "611:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1597,
							"src": "366:310:6",
							"usedErrors": [],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "132:545:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							1779
						],
						"Math": [
							3001
						],
						"StorageSlot": [
							1911
						]
					},
					"id": 1780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1598,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1600,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1780,
							"sourceUnit": 1912,
							"src": "126:46:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1599,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1911,
										"src": "134:11:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1602,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1780,
							"sourceUnit": 3002,
							"src": "173:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1601,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3001,
										"src": "181:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1603,
								"nodeType": "StructuredDocumentation",
								"src": "212:63:7",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1779,
							"linearizedBaseContracts": [
								1779
							],
							"name": "Arrays",
							"nameLocation": "284:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1606,
									"libraryName": {
										"id": 1604,
										"name": "StorageSlot",
										"nameLocations": [
											"303:11:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1911,
										"src": "303:11:7"
									},
									"nodeType": "UsingForDirective",
									"src": "297:30:7",
									"typeName": {
										"id": 1605,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "843:834:7",
										"statements": [
											{
												"assignments": [
													1618
												],
												"declarations": [
													{
														"constant": false,
														"id": 1618,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "861:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1688,
														"src": "853:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1617,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1620,
												"initialValue": {
													"hexValue": "30",
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "867:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "853:15:7"
											},
											{
												"assignments": [
													1622
												],
												"declarations": [
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "886:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1688,
														"src": "878:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1621,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "878:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1625,
												"initialValue": {
													"expression": {
														"id": 1623,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "893:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "899:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "893:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:27:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1626,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1622,
														"src": "920:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "928:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "920:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1632,
												"nodeType": "IfStatement",
												"src": "916:48:7",
												"trueBody": {
													"id": 1631,
													"nodeType": "Block",
													"src": "931:33:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "952:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1616,
															"id": 1630,
															"nodeType": "Return",
															"src": "945:8:7"
														}
													]
												}
											},
											{
												"body": {
													"id": 1664,
													"nodeType": "Block",
													"src": "993:423:7",
													"statements": [
														{
															"assignments": [
																1637
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1637,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "1015:3:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1664,
																	"src": "1007:11:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1636,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1007:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1643,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1640,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1618,
																		"src": "1034:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1641,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "1039:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1638,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3001,
																		"src": "1021:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3001_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1026:7:7",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2175,
																	"src": "1021:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1007:37:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1645,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1610,
																				"src": "1282:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1646,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1637,
																				"src": "1289:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1644,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1710,
																				1731,
																				1752
																			],
																			"referencedDeclaration": 1752,
																			"src": "1269:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1816_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:24:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1816_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1648,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1294:5:7",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1815,
																	"src": "1269:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1649,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "1302:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1269:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1662,
																"nodeType": "Block",
																"src": "1360:46:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1656,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1618,
																				"src": "1378:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1659,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1657,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1637,
																					"src": "1384:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1658,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1390:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1384:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1378:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1661,
																		"nodeType": "ExpressionStatement",
																		"src": "1378:13:7"
																	}
																]
															},
															"id": 1663,
															"nodeType": "IfStatement",
															"src": "1265:141:7",
															"trueBody": {
																"id": 1655,
																"nodeType": "Block",
																"src": "1311:43:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1651,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1622,
																				"src": "1329:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1652,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1637,
																				"src": "1336:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1329:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1654,
																		"nodeType": "ExpressionStatement",
																		"src": "1329:10:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1633,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1618,
														"src": "981:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1634,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1622,
														"src": "987:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "981:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1665,
												"nodeType": "WhileStatement",
												"src": "974:442:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1666,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "1533:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1533:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1670,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1610,
																		"src": "1557:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1671,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1618,
																			"src": "1564:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1570:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1564:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1669,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1710,
																		1731,
																		1752
																	],
																	"referencedDeclaration": 1752,
																	"src": "1544:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1816_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1544:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1816_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1815,
															"src": "1544:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1676,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "1582:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1544:45:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1533:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1686,
													"nodeType": "Block",
													"src": "1636:35:7",
													"statements": [
														{
															"expression": {
																"id": 1684,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1618,
																"src": "1657:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1616,
															"id": 1685,
															"nodeType": "Return",
															"src": "1650:10:7"
														}
													]
												},
												"id": 1687,
												"nodeType": "IfStatement",
												"src": "1529:142:7",
												"trueBody": {
													"id": 1683,
													"nodeType": "Block",
													"src": "1591:39:7",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1679,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1618,
																	"src": "1612:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1612:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1616,
															"id": 1682,
															"nodeType": "Return",
															"src": "1605:14:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1607,
										"nodeType": "StructuredDocumentation",
										"src": "333:407:7",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "754:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "787:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "769:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1608,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1609,
													"nodeType": "ArrayTypeName",
													"src": "769:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "802:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "794:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:42:7"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "834:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:9:7"
									},
									"scope": 1779,
									"src": "745:932:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "1993:459:7",
										"statements": [
											{
												"assignments": [
													1702
												],
												"declarations": [
													{
														"constant": false,
														"id": 1702,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2011:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1709,
														"src": "2003:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1701,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1703,
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:12:7"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2316:92:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2337:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "2340:8:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2330:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2330:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2362:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2384:1:7",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2387:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "2374:9:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2374:18:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2394:3:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:28:7"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1693,
														"isOffset": false,
														"isSlot": true,
														"src": "2340:8:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "2394:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1702,
														"isOffset": false,
														"isSlot": false,
														"src": "2362:4:7",
														"valueSize": 1
													}
												],
												"id": 1704,
												"nodeType": "InlineAssembly",
												"src": "2307:101:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1705,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "2424:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2429:14:7",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1833,
														"src": "2424:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1807_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1807_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1700,
												"id": 1708,
												"nodeType": "Return",
												"src": "2417:28:7"
											}
										]
									},
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "1683:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1888:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1919:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1901:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1691,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1901:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1692,
													"nodeType": "ArrayTypeName",
													"src": "1901:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1932:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1924:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:36:7"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1960:31:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1807_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1698,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1697,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1960:11:7",
															"1972:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1807,
														"src": "1960:23:7"
													},
													"referencedDeclaration": 1807,
													"src": "1960:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1807_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:33:7"
									},
									"scope": 1779,
									"src": "1879:573:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1730,
										"nodeType": "Block",
										"src": "2768:459:7",
										"statements": [
											{
												"assignments": [
													1723
												],
												"declarations": [
													{
														"constant": false,
														"id": 1723,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2786:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1730,
														"src": "2778:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1722,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2778:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1724,
												"nodeType": "VariableDeclarationStatement",
												"src": "2778:12:7"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3091:92:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3112:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "3115:8:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3105:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3105:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3137:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3159:1:7",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3162:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3149:9:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3169:3:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:28:7"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "3137:4:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1714,
														"isOffset": false,
														"isSlot": true,
														"src": "3115:8:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1716,
														"isOffset": false,
														"isSlot": false,
														"src": "3169:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1723,
														"isOffset": false,
														"isSlot": false,
														"src": "3137:4:7",
														"valueSize": 1
													}
												],
												"id": 1725,
												"nodeType": "InlineAssembly",
												"src": "3082:101:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1726,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "3199:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3204:14:7",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1855,
														"src": "3199:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1813_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1813_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1721,
												"id": 1729,
												"nodeType": "Return",
												"src": "3192:28:7"
											}
										]
									},
									"documentation": {
										"id": 1711,
										"nodeType": "StructuredDocumentation",
										"src": "2458:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2663:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2694:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "2676:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1712,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2676:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1713,
													"nodeType": "ArrayTypeName",
													"src": "2676:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2707:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "2699:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:36:7"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "2735:31:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1813_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1719,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1718,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2735:11:7",
															"2747:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1813,
														"src": "2735:23:7"
													},
													"referencedDeclaration": 1813,
													"src": "2735:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1813_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:33:7"
									},
									"scope": 1779,
									"src": "2654:573:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "3543:459:7",
										"statements": [
											{
												"assignments": [
													1744
												],
												"declarations": [
													{
														"constant": false,
														"id": 1744,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3561:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1751,
														"src": "3553:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1743,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1745,
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:12:7"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3866:92:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3887:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "3890:8:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3880:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3912:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:7",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3937:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3924:9:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3920:28:7"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1735,
														"isOffset": false,
														"isSlot": true,
														"src": "3890:8:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1737,
														"isOffset": false,
														"isSlot": false,
														"src": "3944:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1744,
														"isOffset": false,
														"isSlot": false,
														"src": "3912:4:7",
														"valueSize": 1
													}
												],
												"id": 1746,
												"nodeType": "InlineAssembly",
												"src": "3857:101:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1747,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "3974:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:14:7",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1866,
														"src": "3974:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1816_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1816_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1742,
												"id": 1750,
												"nodeType": "Return",
												"src": "3967:28:7"
											}
										]
									},
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "3233:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3438:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3469:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "3451:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1733,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3451:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1734,
													"nodeType": "ArrayTypeName",
													"src": "3451:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3482:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "3474:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:36:7"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "3510:31:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1816_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1739,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3510:11:7",
															"3522:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1816,
														"src": "3510:23:7"
													},
													"referencedDeclaration": 1816,
													"src": "3510:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1816_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:33:7"
									},
									"scope": 1779,
									"src": "3429:573:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1764,
										"nodeType": "Block",
										"src": "4303:98:7",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4322:73:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4336:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nodeType": "YulIdentifier",
																						"src": "4357:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4362:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4353:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4353:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4373:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4378:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4369:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4369:14:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4349:35:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4343:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:42:7"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:7"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1756,
														"isOffset": false,
														"isSlot": false,
														"src": "4357:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1758,
														"isOffset": false,
														"isSlot": false,
														"src": "4373:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1761,
														"isOffset": false,
														"isSlot": false,
														"src": "4336:3:7",
														"valueSize": 1
													}
												],
												"id": 1763,
												"nodeType": "InlineAssembly",
												"src": "4313:82:7"
											}
										]
									},
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "4008:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4213:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4249:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "4232:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1754,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4232:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1755,
													"nodeType": "ArrayTypeName",
													"src": "4232:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4262:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "4254:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:35:7"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4298:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "4290:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:13:7"
									},
									"scope": 1779,
									"src": "4204:197:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "4702:98:7",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4721:73:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4735:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4761:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4752:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4752:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4772:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4777:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4768:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4768:14:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4748:35:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4742:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4742:42:7"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:7"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1769,
														"isOffset": false,
														"isSlot": false,
														"src": "4756:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1771,
														"isOffset": false,
														"isSlot": false,
														"src": "4772:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1774,
														"isOffset": false,
														"isSlot": false,
														"src": "4735:3:7",
														"valueSize": 1
													}
												],
												"id": 1776,
												"nodeType": "InlineAssembly",
												"src": "4712:82:7"
											}
										]
									},
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "4407:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4612:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4648:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "4631:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1767,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4631:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1768,
													"nodeType": "ArrayTypeName",
													"src": "4631:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4661:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "4653:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:35:7"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4697:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "4689:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:13:7"
									},
									"scope": 1779,
									"src": "4603:197:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1780,
							"src": "276:4526:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:4703:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1801
						]
					},
					"id": 1802,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1782,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1801,
							"linearizedBaseContracts": [
								1801
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1790,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1787,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1786,
												"id": 1789,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1801,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1799,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1796,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1795,
												"id": 1798,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1801,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1802,
							"src": "624:235:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1911
						]
					},
					"id": 1912,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1803,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1804,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:9",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1911,
							"linearizedBaseContracts": [
								1911
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1807,
									"members": [
										{
											"constant": false,
											"id": 1806,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1807,
											"src": "1300:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1805,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:9",
									"nodeType": "StructDefinition",
									"scope": 1911,
									"src": "1271:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1810,
									"members": [
										{
											"constant": false,
											"id": 1809,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1810,
											"src": "1355:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1808,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:9",
									"nodeType": "StructDefinition",
									"scope": 1911,
									"src": "1326:46:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1813,
									"members": [
										{
											"constant": false,
											"id": 1812,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1813,
											"src": "1407:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1811,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:9",
									"nodeType": "StructDefinition",
									"scope": 1911,
									"src": "1378:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1816,
									"members": [
										{
											"constant": false,
											"id": 1815,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1816,
											"src": "1462:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1814,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:9",
									"nodeType": "StructDefinition",
									"scope": 1911,
									"src": "1433:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1819,
									"members": [
										{
											"constant": false,
											"id": 1818,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1819,
											"src": "1516:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1817,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:9",
									"nodeType": "StructDefinition",
									"scope": 1911,
									"src": "1488:47:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1822,
									"members": [
										{
											"constant": false,
											"id": 1821,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1822,
											"src": "1568:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1820,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:9",
									"nodeType": "StructDefinition",
									"scope": 1911,
									"src": "1541:45:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "1768:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1830:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1844:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1854:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1829,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1825,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:9",
														"valueSize": 1
													}
												],
												"id": 1831,
												"nodeType": "InlineAssembly",
												"src": "1821:47:9"
											}
										]
									},
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:9",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "1708:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1824,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:9"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "1745:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1807_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1828,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1827,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1807,
														"src": "1745:11:9"
													},
													"referencedDeclaration": 1807,
													"src": "1745:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1807_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:9"
									},
									"scope": 1911,
									"src": "1684:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "2056:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2118:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2132:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2142:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1840,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1836,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:9",
														"valueSize": 1
													}
												],
												"id": 1842,
												"nodeType": "InlineAssembly",
												"src": "2109:47:9"
											}
										]
									},
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:9",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1996:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1835,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:9"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "2033:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1810_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1839,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1838,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1810,
														"src": "2033:11:9"
													},
													"referencedDeclaration": 1810,
													"src": "2033:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1810_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:9"
									},
									"scope": 1911,
									"src": "1972:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "2344:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2406:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2420:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2430:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1851,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1847,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:9",
														"valueSize": 1
													}
												],
												"id": 1853,
												"nodeType": "InlineAssembly",
												"src": "2397:47:9"
											}
										]
									},
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:9",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "2284:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1846,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:9"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "2321:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1813_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1850,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1849,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1813,
														"src": "2321:11:9"
													},
													"referencedDeclaration": 1813,
													"src": "2321:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1813_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:9"
									},
									"scope": 1911,
									"src": "2260:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1865,
										"nodeType": "Block",
										"src": "2632:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2694:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2708:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2718:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1862,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1858,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:9",
														"valueSize": 1
													}
												],
												"id": 1864,
												"nodeType": "InlineAssembly",
												"src": "2685:47:9"
											}
										]
									},
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:9",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "2572:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1857,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:9"
									},
									"returnParameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "2609:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1816_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1861,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1860,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1816,
														"src": "2609:11:9"
													},
													"referencedDeclaration": 1816,
													"src": "2609:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1816_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:9"
									},
									"scope": 1911,
									"src": "2548:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1876,
										"nodeType": "Block",
										"src": "2917:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2979:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2993:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3003:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1873,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1869,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:9",
														"valueSize": 1
													}
												],
												"id": 1875,
												"nodeType": "InlineAssembly",
												"src": "2970:47:9"
											}
										]
									},
									"documentation": {
										"id": 1867,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:9",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "2858:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1868,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:9"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "2895:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1819_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1872,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1871,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1819,
														"src": "2895:10:9"
													},
													"referencedDeclaration": 1819,
													"src": "2895:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1819_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:9"
									},
									"scope": 1911,
									"src": "2835:188:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1887,
										"nodeType": "Block",
										"src": "3225:112:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3287:44:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3301:20:9",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3311:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1884,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1880,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1886,
												"nodeType": "InlineAssembly",
												"src": "3278:53:9"
											}
										]
									},
									"documentation": {
										"id": 1878,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:9",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "3158:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1879,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:9"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "3203:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1819_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1883,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1882,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1819,
														"src": "3203:10:9"
													},
													"referencedDeclaration": 1819,
													"src": "3203:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1819_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:9"
									},
									"scope": 1911,
									"src": "3135:202:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "3513:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3575:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3589:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3599:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1895,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1891,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:9",
														"valueSize": 1
													}
												],
												"id": 1897,
												"nodeType": "InlineAssembly",
												"src": "3566:47:9"
											}
										]
									},
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:9",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "3455:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1890,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:9"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "3492:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1822_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1894,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1893,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1822,
														"src": "3492:9:9"
													},
													"referencedDeclaration": 1822,
													"src": "3492:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1822_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:9"
									},
									"scope": 1911,
									"src": "3433:186:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1909,
										"nodeType": "Block",
										"src": "3816:112:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3878:44:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3892:20:9",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3902:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1906,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1902,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1908,
												"nodeType": "InlineAssembly",
												"src": "3869:53:9"
											}
										]
									},
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:9",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "3751:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1901,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:9"
									},
									"returnParameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "3795:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1822_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1905,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1904,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1822,
														"src": "3795:9:9"
													},
													"referencedDeclaration": 1822,
													"src": "3795:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1822_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:9"
									},
									"scope": 1911,
									"src": "3729:199:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1912,
							"src": "1245:2685:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1935
						],
						"IERC165": [
							1947
						]
					},
					"id": 1936,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1913,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1936,
							"sourceUnit": 1948,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1914,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1947,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1917,
										"name": "IERC165",
										"nameLocations": [
											"687:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1947,
										"src": "687:7:10"
									},
									"id": 1918,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1916,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1935,
							"linearizedBaseContracts": [
								1935,
								1947
							],
							"name": "ERC165",
							"nameLocation": "677:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1946
									],
									"body": {
										"id": 1933,
										"nodeType": "Block",
										"src": "844:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1926,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "861:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1928,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1947,
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1947_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1947_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1927,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1947",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1925,
												"id": 1932,
												"nodeType": "Return",
												"src": "854:47:10"
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "789:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1920,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:10"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "838:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1923,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:10"
									},
									"scope": 1935,
									"src": "762:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1936,
							"src": "659:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1947
						]
					},
					"id": 1948,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1937,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1938,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1947,
							"linearizedBaseContracts": [
								1947
							],
							"name": "IERC165",
							"nameLocation": "431:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1946,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "817:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1940,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:11"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "860:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1943,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:11"
									},
									"scope": 1947,
									"src": "790:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1948,
							"src": "421:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3001
						]
					},
					"id": 3002,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1949,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1950,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3001,
							"linearizedBaseContracts": [
								3001
							],
							"name": "Math",
							"nameLocation": "211:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1951,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:12",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1953,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:12"
									},
									"src": "277:29:12"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1958,
									"members": [
										{
											"id": 1954,
											"name": "Floor",
											"nameLocation": "336:5:12",
											"nodeType": "EnumValue",
											"src": "336:5:12"
										},
										{
											"id": 1955,
											"name": "Ceil",
											"nameLocation": "379:4:12",
											"nodeType": "EnumValue",
											"src": "379:4:12"
										},
										{
											"id": 1956,
											"name": "Trunc",
											"nameLocation": "421:5:12",
											"nodeType": "EnumValue",
											"src": "421:5:12"
										},
										{
											"id": 1957,
											"name": "Expand",
											"nameLocation": "451:6:12",
											"nodeType": "EnumValue",
											"src": "451:6:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:12",
									"nodeType": "EnumDefinition",
									"src": "312:169:12"
								},
								{
									"body": {
										"id": 1989,
										"nodeType": "Block",
										"src": "661:140:12",
										"statements": [
											{
												"id": 1988,
												"nodeType": "UncheckedBlock",
												"src": "671:124:12",
												"statements": [
													{
														"assignments": [
															1971
														],
														"declarations": [
															{
																"constant": false,
																"id": 1971,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 1988,
																"src": "695:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1970,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1975,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1972,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1961,
																"src": "707:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1973,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1963,
																"src": "711:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1976,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1971,
																"src": "730:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1977,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1961,
																"src": "734:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1983,
														"nodeType": "IfStatement",
														"src": "726:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1981,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1969,
															"id": 1982,
															"nodeType": "Return",
															"src": "737:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1985,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1971,
																	"src": "782:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1986,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1969,
														"id": 1987,
														"nodeType": "Return",
														"src": "768:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:12"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "646:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1965,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:12"
									},
									"scope": 3001,
									"src": "585:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2017,
										"nodeType": "Block",
										"src": "984:113:12",
										"statements": [
											{
												"id": 2016,
												"nodeType": "UncheckedBlock",
												"src": "994:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2002,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1995,
																"src": "1022:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2003,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1993,
																"src": "1026:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2009,
														"nodeType": "IfStatement",
														"src": "1018:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2007,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2001,
															"id": 2008,
															"nodeType": "Return",
															"src": "1029:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2011,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1993,
																		"src": "1074:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2012,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1995,
																		"src": "1078:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2014,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2001,
														"id": 2015,
														"nodeType": "Return",
														"src": "1060:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:12",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "924:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "935:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:12"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "969:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1997,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "975:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:12"
									},
									"scope": 3001,
									"src": "908:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2059,
										"nodeType": "Block",
										"src": "1283:417:12",
										"statements": [
											{
												"id": 2058,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2030,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2021,
																"src": "1551:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2037,
														"nodeType": "IfStatement",
														"src": "1547:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2035,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2029,
															"id": 2036,
															"nodeType": "Return",
															"src": "1559:16:12"
														}
													},
													{
														"assignments": [
															2039
														],
														"declarations": [
															{
																"constant": false,
																"id": 2039,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2058,
																"src": "1589:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2038,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2043,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2040,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2021,
																"src": "1601:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2041,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "1605:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2044,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2039,
																	"src": "1624:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2045,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2021,
																	"src": "1628:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2047,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "1633:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2053,
														"nodeType": "IfStatement",
														"src": "1620:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2051,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2029,
															"id": 2052,
															"nodeType": "Return",
															"src": "1636:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2055,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2039,
																	"src": "1681:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2056,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2029,
														"id": 2057,
														"nodeType": "Return",
														"src": "1667:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2019,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "1223:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "1234:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:12"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "1268:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2025,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "1274:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:12"
									},
									"scope": 3001,
									"src": "1207:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2087,
										"nodeType": "Block",
										"src": "1887:114:12",
										"statements": [
											{
												"id": 2086,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2072,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2065,
																"src": "1925:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2079,
														"nodeType": "IfStatement",
														"src": "1921:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2077,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2071,
															"id": 2078,
															"nodeType": "Return",
															"src": "1933:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2081,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2063,
																		"src": "1978:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2082,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2065,
																		"src": "1982:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2084,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2071,
														"id": 2085,
														"nodeType": "Return",
														"src": "1964:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "1827:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "1838:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:12"
									},
									"returnParameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "1872:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2067,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "1878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:12"
									},
									"scope": 3001,
									"src": "1811:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2115,
										"nodeType": "Block",
										"src": "2198:114:12",
										"statements": [
											{
												"id": 2114,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2100,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2093,
																"src": "2236:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2107,
														"nodeType": "IfStatement",
														"src": "2232:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2105,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2099,
															"id": 2106,
															"nodeType": "Return",
															"src": "2244:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2109,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "2289:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2110,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2093,
																		"src": "2293:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2112,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2099,
														"id": 2113,
														"nodeType": "Return",
														"src": "2275:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2089,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "2138:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "2149:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:12"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "2183:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2095,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "2189:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:12"
									},
									"scope": 3001,
									"src": "2122:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2133,
										"nodeType": "Block",
										"src": "2449:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2126,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2119,
															"src": "2466:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2127,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2121,
															"src": "2470:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2130,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2121,
														"src": "2478:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:12",
													"trueExpression": {
														"id": 2129,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2119,
														"src": "2474:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2125,
												"id": 2132,
												"nodeType": "Return",
												"src": "2459:20:12"
											}
										]
									},
									"documentation": {
										"id": 2117,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "2395:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "2406:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:12"
									},
									"returnParameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "2440:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:12"
									},
									"scope": 3001,
									"src": "2382:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2151,
										"nodeType": "Block",
										"src": "2624:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2144,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2137,
															"src": "2641:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2145,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2139,
															"src": "2645:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2148,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2139,
														"src": "2653:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:12",
													"trueExpression": {
														"id": 2147,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "2649:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2143,
												"id": 2150,
												"nodeType": "Return",
												"src": "2634:20:12"
											}
										]
									},
									"documentation": {
										"id": 2135,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "2570:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "2581:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:12"
									},
									"returnParameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "2615:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:12"
									},
									"scope": 3001,
									"src": "2557:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2174,
										"nodeType": "Block",
										"src": "2845:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2162,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2155,
																	"src": "2900:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2163,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2157,
																	"src": "2904:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2165,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2166,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2155,
																		"src": "2910:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2167,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2157,
																		"src": "2914:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2169,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2161,
												"id": 2173,
												"nodeType": "Return",
												"src": "2892:28:12"
											}
										]
									},
									"documentation": {
										"id": 2153,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "2791:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "2802:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:12"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "2836:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:12"
									},
									"scope": 3001,
									"src": "2774:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2208,
										"nodeType": "Block",
										"src": "3219:260:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2185,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2180,
														"src": "3233:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2193,
												"nodeType": "IfStatement",
												"src": "3229:127:12",
												"trueBody": {
													"id": 2192,
													"nodeType": "Block",
													"src": "3241:115:12",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2188,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2178,
																	"src": "3340:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2189,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2180,
																	"src": "3344:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2184,
															"id": 2191,
															"nodeType": "Return",
															"src": "3333:12:12"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2194,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2178,
															"src": "3444:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2198,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2178,
																			"src": "3458:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2201,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2202,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2180,
																"src": "3467:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 2197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2184,
												"id": 2207,
												"nodeType": "Return",
												"src": "3437:35:12"
											}
										]
									},
									"documentation": {
										"id": 2176,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "3165:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "3176:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:12"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "3210:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:12"
									},
									"scope": 3001,
									"src": "3148:331:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2334,
										"nodeType": "Block",
										"src": "3901:4018:12",
										"statements": [
											{
												"id": 2333,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:12",
												"statements": [
													{
														"assignments": [
															2222
														],
														"declarations": [
															{
																"constant": false,
																"id": 2222,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2333,
																"src": "4232:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2221,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2226,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2223,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2212,
																"src": "4248:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2224,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2214,
																"src": "4252:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:12"
													},
													{
														"assignments": [
															2228
														],
														"declarations": [
															{
																"constant": false,
																"id": 2228,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2333,
																"src": "4312:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2227,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2229,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4392:122:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:12"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4457:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2222,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2222,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2228,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2212,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2214,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:12",
																"valueSize": 1
															}
														],
														"id": 2230,
														"nodeType": "InlineAssembly",
														"src": "4383:131:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2231,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2228,
																"src": "4595:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2239,
														"nodeType": "IfStatement",
														"src": "4591:368:12",
														"trueBody": {
															"id": 2238,
															"nodeType": "Block",
															"src": "4607:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2234,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2222,
																			"src": "4925:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2235,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "4933:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2220,
																	"id": 2237,
																	"nodeType": "Return",
																	"src": "4918:26:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2240,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2216,
																"src": "5065:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2241,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2228,
																"src": "5080:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2247,
														"nodeType": "IfStatement",
														"src": "5061:88:12",
														"trueBody": {
															"id": 2246,
															"nodeType": "Block",
															"src": "5087:62:12",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2243,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "5112:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2245,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:12"
																}
															]
														}
													},
													{
														"assignments": [
															2249
														],
														"declarations": [
															{
																"constant": false,
																"id": 2249,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2333,
																"src": "5404:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2248,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2250,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5444:291:12",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5513:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:12"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:12"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5633:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5691:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:12"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2216,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2222,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2222,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2222,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2228,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2228,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2249,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2249,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2249,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2212,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2214,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:12",
																"valueSize": 1
															}
														],
														"id": 2251,
														"nodeType": "InlineAssembly",
														"src": "5435:300:12"
													},
													{
														"assignments": [
															2253
														],
														"declarations": [
															{
																"constant": false,
																"id": 2253,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 2333,
																"src": "5939:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2252,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2260,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2254,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2216,
																"src": "5954:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2256,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "5973:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2258,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6008:362:12",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6073:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:12"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6177:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:12"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6317:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:12"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2216,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2216,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2222,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2222,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2253,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2253,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2253,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2253,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2253,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:12",
																"valueSize": 1
															}
														],
														"id": 2261,
														"nodeType": "InlineAssembly",
														"src": "5999:371:12"
													},
													{
														"expression": {
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2262,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2222,
																"src": "6436:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2263,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2228,
																	"src": "6445:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2264,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2253,
																	"src": "6453:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2267,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:12"
													},
													{
														"assignments": [
															2269
														],
														"declarations": [
															{
																"constant": false,
																"id": 2269,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2333,
																"src": "6775:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2268,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2276,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2271,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "6798:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2273,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:12"
													},
													{
														"expression": {
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2277,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "7031:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2279,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2216,
																		"src": "7046:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2280,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2269,
																		"src": "7060:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2284,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:12"
													},
													{
														"expression": {
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2285,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "7100:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2287,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2216,
																		"src": "7115:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2288,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2269,
																		"src": "7129:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2292,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:12"
													},
													{
														"expression": {
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2293,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "7170:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2295,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2216,
																		"src": "7185:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2296,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2269,
																		"src": "7199:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2300,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:12"
													},
													{
														"expression": {
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2301,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "7240:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2303,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2216,
																		"src": "7255:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2304,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2269,
																		"src": "7269:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2308,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:12"
													},
													{
														"expression": {
															"id": 2315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2309,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "7310:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2311,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2216,
																		"src": "7325:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2312,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2269,
																		"src": "7339:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2316,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:12"
													},
													{
														"expression": {
															"id": 2323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2317,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "7381:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2319,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2216,
																		"src": "7396:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2320,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2269,
																		"src": "7410:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2324,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:12"
													},
													{
														"expression": {
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2325,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2219,
																"src": "7851:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2326,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2222,
																	"src": "7860:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2327,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2269,
																	"src": "7868:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2330,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:12"
													},
													{
														"expression": {
															"id": 2331,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2219,
															"src": "7896:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2220,
														"id": 2332,
														"nodeType": "Return",
														"src": "7889:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2210,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "3819:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "3830:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "3841:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:12"
									},
									"returnParameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "3885:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:12"
									},
									"scope": 3001,
									"src": "3803:4116:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2377,
										"nodeType": "Block",
										"src": "8161:192:12",
										"statements": [
											{
												"assignments": [
													2351
												],
												"declarations": [
													{
														"constant": false,
														"id": 2351,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2377,
														"src": "8171:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2350,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2357,
												"initialValue": {
													"arguments": [
														{
															"id": 2353,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "8195:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2354,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2340,
															"src": "8198:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2355,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "8201:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2352,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2335,
															2378
														],
														"referencedDeclaration": 2335,
														"src": "8188:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2359,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2345,
																"src": "8244:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1958",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1958",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2358,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3000,
															"src": "8227:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1958_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2362,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "8264:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2363,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2340,
																	"src": "8267:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2364,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2342,
																	"src": "8270:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2361,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2374,
												"nodeType": "IfStatement",
												"src": "8223:101:12",
												"trueBody": {
													"id": 2373,
													"nodeType": "Block",
													"src": "8288:36:12",
													"statements": [
														{
															"expression": {
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2369,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2351,
																	"src": "8302:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2372,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2375,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2351,
													"src": "8340:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2349,
												"id": 2376,
												"nodeType": "Return",
												"src": "8333:13:12"
											}
										]
									},
									"documentation": {
										"id": 2336,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "8067:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "8078:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "8089:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "8110:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1958",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2343,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1958,
														"src": "8110:8:12"
													},
													"referencedDeclaration": 1958,
													"src": "8110:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1958",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:12"
									},
									"returnParameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "8152:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:12"
									},
									"scope": 3001,
									"src": "8051:302:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2489,
										"nodeType": "Block",
										"src": "8644:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2386,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "8658:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2392,
												"nodeType": "IfStatement",
												"src": "8654:45:12",
												"trueBody": {
													"id": 2391,
													"nodeType": "Block",
													"src": "8666:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2385,
															"id": 2390,
															"nodeType": "Return",
															"src": "8680:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2394
												],
												"declarations": [
													{
														"constant": false,
														"id": 2394,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2489,
														"src": "9378:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2403,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2397,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2381,
																			"src": "9406:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2396,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2657,
																			2692
																		],
																		"referencedDeclaration": 2657,
																		"src": "9401:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2401,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:12"
											},
											{
												"id": 2488,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:12",
												"statements": [
													{
														"expression": {
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2404,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "9839:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2405,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2394,
																				"src": "9849:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2406,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2381,
																					"src": "9858:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2407,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2394,
																					"src": "9862:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2410,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2414,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:12"
													},
													{
														"expression": {
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2415,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "9888:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2416,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2394,
																				"src": "9898:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2417,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2381,
																					"src": "9907:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2418,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2394,
																					"src": "9911:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2421,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2425,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:12"
													},
													{
														"expression": {
															"id": 2435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2426,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "9937:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2427,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2394,
																				"src": "9947:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2428,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2381,
																					"src": "9956:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2429,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2394,
																					"src": "9960:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2432,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2436,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:12"
													},
													{
														"expression": {
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2437,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "9986:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2438,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2394,
																				"src": "9996:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2441,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2439,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2381,
																					"src": "10005:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2440,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2394,
																					"src": "10009:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2443,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2447,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:12"
													},
													{
														"expression": {
															"id": 2457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2448,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "10035:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2449,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2394,
																				"src": "10045:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2452,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2450,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2381,
																					"src": "10054:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2451,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2394,
																					"src": "10058:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2454,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2458,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:12"
													},
													{
														"expression": {
															"id": 2468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2459,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "10084:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2460,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2394,
																				"src": "10094:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2461,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2381,
																					"src": "10103:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2462,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2394,
																					"src": "10107:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2465,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2469,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:12"
													},
													{
														"expression": {
															"id": 2479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2470,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "10133:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2471,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2394,
																				"src": "10143:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2474,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2472,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2381,
																					"src": "10152:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2473,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2394,
																					"src": "10156:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2476,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2480,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2482,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2394,
																	"src": "10193:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2483,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2381,
																		"src": "10201:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2484,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2394,
																		"src": "10205:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2481,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2152,
																"src": "10189:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2385,
														"id": 2487,
														"nodeType": "Return",
														"src": "10182:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2379,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "8601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:12"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "8635:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:12"
									},
									"scope": 3001,
									"src": "8587:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2524,
										"nodeType": "Block",
										"src": "10405:164:12",
										"statements": [
											{
												"id": 2523,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:12",
												"statements": [
													{
														"assignments": [
															2502
														],
														"declarations": [
															{
																"constant": false,
																"id": 2502,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2523,
																"src": "10439:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2501,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2506,
														"initialValue": {
															"arguments": [
																{
																	"id": 2504,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2493,
																	"src": "10461:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2503,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2490,
																	2525
																],
																"referencedDeclaration": 2490,
																"src": "10456:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2507,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2502,
																"src": "10484:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2509,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2496,
																						"src": "10511:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1958",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1958",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2508,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3000,
																					"src": "10494:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1958_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2510,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2513,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2511,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2502,
																						"src": "10524:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2512,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2502,
																						"src": "10533:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2514,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2493,
																					"src": "10542:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2520,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2500,
														"id": 2522,
														"nodeType": "Return",
														"src": "10477:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2491,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "10343:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "10354:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1958",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2495,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2494,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1958,
														"src": "10354:8:12"
													},
													"referencedDeclaration": 1958,
													"src": "10354:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1958",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:12"
									},
									"returnParameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "10396:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:12"
									},
									"scope": 3001,
									"src": "10329:240:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2656,
										"nodeType": "Block",
										"src": "10760:922:12",
										"statements": [
											{
												"assignments": [
													2534
												],
												"declarations": [
													{
														"constant": false,
														"id": 2534,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2656,
														"src": "10770:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2533,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2536,
												"initialValue": {
													"hexValue": "30",
													"id": 2535,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:12"
											},
											{
												"id": 2653,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2537,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "10826:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2551,
														"nodeType": "IfStatement",
														"src": "10822:99:12",
														"trueBody": {
															"id": 2550,
															"nodeType": "Block",
															"src": "10844:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2542,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2528,
																			"src": "10862:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2545,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:12"
																},
																{
																	"expression": {
																		"id": 2548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2546,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2534,
																			"src": "10893:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2549,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2552,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "10938:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2566,
														"nodeType": "IfStatement",
														"src": "10934:96:12",
														"trueBody": {
															"id": 2565,
															"nodeType": "Block",
															"src": "10955:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2528,
																			"src": "10973:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2560,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:12"
																},
																{
																	"expression": {
																		"id": 2563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2561,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2534,
																			"src": "11003:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2564,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2567,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "11047:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2581,
														"nodeType": "IfStatement",
														"src": "11043:96:12",
														"trueBody": {
															"id": 2580,
															"nodeType": "Block",
															"src": "11064:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2572,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2528,
																			"src": "11082:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2575,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:12"
																},
																{
																	"expression": {
																		"id": 2578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2576,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2534,
																			"src": "11112:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2579,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2582,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "11156:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2596,
														"nodeType": "IfStatement",
														"src": "11152:96:12",
														"trueBody": {
															"id": 2595,
															"nodeType": "Block",
															"src": "11173:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2587,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2528,
																			"src": "11191:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2590,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:12"
																},
																{
																	"expression": {
																		"id": 2593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2591,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2534,
																			"src": "11221:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2594,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2597,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "11265:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2611,
														"nodeType": "IfStatement",
														"src": "11261:93:12",
														"trueBody": {
															"id": 2610,
															"nodeType": "Block",
															"src": "11281:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2602,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2528,
																			"src": "11299:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2605,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:12"
																},
																{
																	"expression": {
																		"id": 2608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2606,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2534,
																			"src": "11328:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2609,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2612,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "11371:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2626,
														"nodeType": "IfStatement",
														"src": "11367:93:12",
														"trueBody": {
															"id": 2625,
															"nodeType": "Block",
															"src": "11387:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2617,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2528,
																			"src": "11405:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2620,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:12"
																},
																{
																	"expression": {
																		"id": 2623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2621,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2534,
																			"src": "11434:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2624,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "11477:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2641,
														"nodeType": "IfStatement",
														"src": "11473:93:12",
														"trueBody": {
															"id": 2640,
															"nodeType": "Block",
															"src": "11493:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2632,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2528,
																			"src": "11511:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2635,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:12"
																},
																{
																	"expression": {
																		"id": 2638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2636,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2534,
																			"src": "11540:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2639,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2642,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "11583:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2652,
														"nodeType": "IfStatement",
														"src": "11579:64:12",
														"trueBody": {
															"id": 2651,
															"nodeType": "Block",
															"src": "11599:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2647,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2534,
																			"src": "11617:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2650,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2654,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2534,
													"src": "11669:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2532,
												"id": 2655,
												"nodeType": "Return",
												"src": "11662:13:12"
											}
										]
									},
									"documentation": {
										"id": 2526,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:12",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "10713:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:12"
									},
									"returnParameters": {
										"id": 2532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "10751:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:12"
									},
									"scope": 3001,
									"src": "10699:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2691,
										"nodeType": "Block",
										"src": "11915:168:12",
										"statements": [
											{
												"id": 2690,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:12",
												"statements": [
													{
														"assignments": [
															2669
														],
														"declarations": [
															{
																"constant": false,
																"id": 2669,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2690,
																"src": "11949:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2668,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2673,
														"initialValue": {
															"arguments": [
																{
																	"id": 2671,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2660,
																	"src": "11971:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2670,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2657,
																	2692
																],
																"referencedDeclaration": 2657,
																"src": "11966:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2674,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2669,
																"src": "11998:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2676,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2663,
																						"src": "12025:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1958",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1958",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2675,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3000,
																					"src": "12008:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1958_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2677,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2680,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2678,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2679,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2669,
																						"src": "12043:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2681,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2660,
																					"src": "12052:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2687,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2667,
														"id": 2689,
														"nodeType": "Return",
														"src": "11991:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2658,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "11849:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2663,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "11864:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1958",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2662,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2661,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1958,
														"src": "11864:8:12"
													},
													"referencedDeclaration": 1958,
													"src": "11864:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1958",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:12"
									},
									"returnParameters": {
										"id": 2667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "11906:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:12"
									},
									"scope": 3001,
									"src": "11835:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2820,
										"nodeType": "Block",
										"src": "12276:854:12",
										"statements": [
											{
												"assignments": [
													2701
												],
												"declarations": [
													{
														"constant": false,
														"id": 2701,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2820,
														"src": "12286:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2703,
												"initialValue": {
													"hexValue": "30",
													"id": 2702,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:12"
											},
											{
												"id": 2817,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2704,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2695,
																"src": "12342:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2720,
														"nodeType": "IfStatement",
														"src": "12338:103:12",
														"trueBody": {
															"id": 2719,
															"nodeType": "Block",
															"src": "12361:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2709,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "12379:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2714,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:12"
																},
																{
																	"expression": {
																		"id": 2717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2715,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2701,
																			"src": "12414:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2718,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2721,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2695,
																"src": "12458:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2737,
														"nodeType": "IfStatement",
														"src": "12454:103:12",
														"trueBody": {
															"id": 2736,
															"nodeType": "Block",
															"src": "12477:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2726,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "12495:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2727,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2728,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2731,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:12"
																},
																{
																	"expression": {
																		"id": 2734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2732,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2701,
																			"src": "12530:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2735,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2738,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2695,
																"src": "12574:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2754,
														"nodeType": "IfStatement",
														"src": "12570:103:12",
														"trueBody": {
															"id": 2753,
															"nodeType": "Block",
															"src": "12593:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2743,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "12611:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2745,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2748,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:12"
																},
																{
																	"expression": {
																		"id": 2751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2749,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2701,
																			"src": "12646:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2752,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2755,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2695,
																"src": "12690:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2771,
														"nodeType": "IfStatement",
														"src": "12686:100:12",
														"trueBody": {
															"id": 2770,
															"nodeType": "Block",
															"src": "12708:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2760,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "12726:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2761,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2765,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:12"
																},
																{
																	"expression": {
																		"id": 2768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2766,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2701,
																			"src": "12760:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2769,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2772,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2695,
																"src": "12803:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2788,
														"nodeType": "IfStatement",
														"src": "12799:100:12",
														"trueBody": {
															"id": 2787,
															"nodeType": "Block",
															"src": "12821:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2777,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "12839:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2778,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2779,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2782,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:12"
																},
																{
																	"expression": {
																		"id": 2785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2783,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2701,
																			"src": "12873:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2786,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2789,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2695,
																"src": "12916:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2805,
														"nodeType": "IfStatement",
														"src": "12912:100:12",
														"trueBody": {
															"id": 2804,
															"nodeType": "Block",
															"src": "12934:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2794,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2695,
																			"src": "12952:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2795,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2799,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:12"
																},
																{
																	"expression": {
																		"id": 2802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2800,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2701,
																			"src": "12986:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2803,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2806,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2695,
																"src": "13029:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2816,
														"nodeType": "IfStatement",
														"src": "13025:66:12",
														"trueBody": {
															"id": 2815,
															"nodeType": "Block",
															"src": "13047:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2811,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2701,
																			"src": "13065:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2814,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2818,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2701,
													"src": "13117:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2699,
												"id": 2819,
												"nodeType": "Return",
												"src": "13110:13:12"
											}
										]
									},
									"documentation": {
										"id": 2693,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:12",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "12229:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:12"
									},
									"returnParameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "12267:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:12"
									},
									"scope": 3001,
									"src": "12214:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2855,
										"nodeType": "Block",
										"src": "13365:170:12",
										"statements": [
											{
												"id": 2854,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:12",
												"statements": [
													{
														"assignments": [
															2833
														],
														"declarations": [
															{
																"constant": false,
																"id": 2833,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2854,
																"src": "13399:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2832,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2837,
														"initialValue": {
															"arguments": [
																{
																	"id": 2835,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2824,
																	"src": "13422:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2834,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2821,
																	2856
																],
																"referencedDeclaration": 2821,
																"src": "13416:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2838,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2833,
																"src": "13449:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2840,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2827,
																						"src": "13476:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1958",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1958",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2839,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3000,
																					"src": "13459:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1958_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2846,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2844,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2842,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2843,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2833,
																						"src": "13495:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2845,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2824,
																					"src": "13504:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2851,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2831,
														"id": 2853,
														"nodeType": "Return",
														"src": "13442:76:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2822,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "13299:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "13314:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1958",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2826,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2825,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1958,
														"src": "13314:8:12"
													},
													"referencedDeclaration": 1958,
													"src": "13314:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1958",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:12"
									},
									"returnParameters": {
										"id": 2831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "13356:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:12"
									},
									"scope": 3001,
									"src": "13284:251:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2942,
										"nodeType": "Block",
										"src": "13855:600:12",
										"statements": [
											{
												"assignments": [
													2865
												],
												"declarations": [
													{
														"constant": false,
														"id": 2865,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2942,
														"src": "13865:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2864,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2867,
												"initialValue": {
													"hexValue": "30",
													"id": 2866,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:12"
											},
											{
												"id": 2939,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2868,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2859,
																	"src": "13921:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2882,
														"nodeType": "IfStatement",
														"src": "13917:98:12",
														"trueBody": {
															"id": 2881,
															"nodeType": "Block",
															"src": "13939:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2873,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2859,
																			"src": "13957:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2876,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:12"
																},
																{
																	"expression": {
																		"id": 2879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2877,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2865,
																			"src": "13988:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2880,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2883,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2859,
																	"src": "14032:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2897,
														"nodeType": "IfStatement",
														"src": "14028:95:12",
														"trueBody": {
															"id": 2896,
															"nodeType": "Block",
															"src": "14049:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2888,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2859,
																			"src": "14067:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2891,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:12"
																},
																{
																	"expression": {
																		"id": 2894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2892,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2865,
																			"src": "14097:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2895,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2898,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2859,
																	"src": "14140:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2912,
														"nodeType": "IfStatement",
														"src": "14136:95:12",
														"trueBody": {
															"id": 2911,
															"nodeType": "Block",
															"src": "14157:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2903,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2859,
																			"src": "14175:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2906,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:12"
																},
																{
																	"expression": {
																		"id": 2909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2907,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2865,
																			"src": "14205:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2910,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2913,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2859,
																	"src": "14248:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2927,
														"nodeType": "IfStatement",
														"src": "14244:95:12",
														"trueBody": {
															"id": 2926,
															"nodeType": "Block",
															"src": "14265:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2918,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2859,
																			"src": "14283:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2921,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:12"
																},
																{
																	"expression": {
																		"id": 2924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2922,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2865,
																			"src": "14313:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2925,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2928,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2859,
																	"src": "14356:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2938,
														"nodeType": "IfStatement",
														"src": "14352:64:12",
														"trueBody": {
															"id": 2937,
															"nodeType": "Block",
															"src": "14372:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2933,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2865,
																			"src": "14390:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2936,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2940,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2865,
													"src": "14442:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2863,
												"id": 2941,
												"nodeType": "Return",
												"src": "14435:13:12"
											}
										]
									},
									"documentation": {
										"id": 2857,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:12",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2943,
												"src": "13808:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:12"
									},
									"returnParameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2943,
												"src": "13846:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:12"
									},
									"scope": 3001,
									"src": "13792:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2980,
										"nodeType": "Block",
										"src": "14692:177:12",
										"statements": [
											{
												"id": 2979,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:12",
												"statements": [
													{
														"assignments": [
															2955
														],
														"declarations": [
															{
																"constant": false,
																"id": 2955,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2979,
																"src": "14726:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2954,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2959,
														"initialValue": {
															"arguments": [
																{
																	"id": 2957,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2946,
																	"src": "14750:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2956,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2943,
																	2981
																],
																"referencedDeclaration": 2943,
																"src": "14743:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2960,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2955,
																"src": "14777:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2962,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2949,
																						"src": "14804:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1958",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1958",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2961,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3000,
																					"src": "14787:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1958_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2971,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2969,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2964,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2967,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2965,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2955,
																									"src": "14823:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2966,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2968,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2970,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2946,
																					"src": "14838:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2976,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2953,
														"id": 2978,
														"nodeType": "Return",
														"src": "14770:82:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2944,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2981,
												"src": "14626:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2949,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2981,
												"src": "14641:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1958",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2948,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2947,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1958,
														"src": "14641:8:12"
													},
													"referencedDeclaration": 1958,
													"src": "14641:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1958",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:12"
									},
									"returnParameters": {
										"id": 2953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2981,
												"src": "14683:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:12"
									},
									"scope": 3001,
									"src": "14610:259:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2999,
										"nodeType": "Block",
										"src": "15067:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2992,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2985,
																	"src": "15090:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1958",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1958",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2990,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2989,
												"id": 2998,
												"nodeType": "Return",
												"src": "15077:31:12"
											}
										]
									},
									"documentation": {
										"id": 2982,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:12",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2985,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3000,
												"src": "15019:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1958",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2984,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2983,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1958,
														"src": "15019:8:12"
													},
													"referencedDeclaration": 1958,
													"src": "15019:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1958",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:12"
									},
									"returnParameters": {
										"id": 2989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3000,
												"src": "15061:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2987,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:12"
									},
									"scope": 3001,
									"src": "14993:122:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3002,
							"src": "203:14914:12",
							"usedErrors": [
								1953
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:12"
				},
				"id": 12
			},
			"contracts/burnTest.sol": {
				"ast": {
					"absolutePath": "contracts/burnTest.sol",
					"exportedSymbols": {
						"Arrays": [
							1779
						],
						"Context": [
							1801
						],
						"ERC1155": [
							1335
						],
						"ERC1155Burnable": [
							1580
						],
						"ERC165": [
							1935
						],
						"IERC1155": [
							1458
						],
						"IERC1155Errors": [
							284
						],
						"IERC1155MetadataURI": [
							1596
						],
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1947
						],
						"MyToken": [
							3037
						],
						"Ownable": [
							147
						]
					},
					"id": 3038,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3003,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 3004,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3038,
							"sourceUnit": 1336,
							"src": "58:59:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3005,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3038,
							"sourceUnit": 148,
							"src": "118:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
							"id": 3006,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3038,
							"sourceUnit": 1581,
							"src": "171:78:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3007,
										"name": "ERC1155",
										"nameLocations": [
											"271:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "271:7:13"
									},
									"id": 3008,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:13"
								},
								{
									"baseName": {
										"id": 3009,
										"name": "Ownable",
										"nameLocations": [
											"280:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "280:7:13"
									},
									"id": 3010,
									"nodeType": "InheritanceSpecifier",
									"src": "280:7:13"
								},
								{
									"baseName": {
										"id": 3011,
										"name": "ERC1155Burnable",
										"nameLocations": [
											"289:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1580,
										"src": "289:15:13"
									},
									"id": 3012,
									"nodeType": "InheritanceSpecifier",
									"src": "289:15:13"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3037,
							"linearizedBaseContracts": [
								3037,
								1580,
								147,
								1335,
								284,
								1596,
								1458,
								1935,
								1947,
								1801
							],
							"name": "MyToken",
							"nameLocation": "260:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3023,
										"nodeType": "Block",
										"src": "379:2:13",
										"statements": []
									},
									"id": 3024,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "",
													"id": 3017,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "353:2:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												}
											],
											"id": 3018,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3016,
												"name": "ERC1155",
												"nameLocations": [
													"345:7:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1335,
												"src": "345:7:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "345:11:13"
										},
										{
											"arguments": [
												{
													"id": 3020,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3014,
													"src": "365:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3021,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3019,
												"name": "Ownable",
												"nameLocations": [
													"357:7:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "357:7:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "357:21:13"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3014,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "331:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 3024,
												"src": "323:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:22:13"
									},
									"returnParameters": {
										"id": 3022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "379:0:13"
									},
									"scope": 3037,
									"src": "311:70:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3035,
										"nodeType": "Block",
										"src": "442:32:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3032,
															"name": "newuri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3026,
															"src": "460:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3031,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "452:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 3033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "452:15:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3034,
												"nodeType": "ExpressionStatement",
												"src": "452:15:13"
											}
										]
									},
									"functionSelector": "02fe5305",
									"id": 3036,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3029,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3028,
												"name": "onlyOwner",
												"nameLocations": [
													"432:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "432:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "432:9:13"
										}
									],
									"name": "setURI",
									"nameLocation": "396:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3026,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "417:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "403:20:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3025,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "403:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:22:13"
									},
									"returnParameters": {
										"id": 3030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "442:0:13"
									},
									"scope": 3037,
									"src": "387:87:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3038,
							"src": "251:225:13",
							"usedErrors": [
								13,
								18,
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": [
								24,
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "32:444:13"
				},
				"id": 13
			}
		}
	}
}