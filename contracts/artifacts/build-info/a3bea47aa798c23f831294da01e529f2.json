{
	"id": "a3bea47aa798c23f831294da01e529f2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DTicket2_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/IERC1155.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/ERC1155.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n\n\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual override returns (uint256[] memory) {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory amounts) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }\n}\n\n// File: contracts/DTicket2.sol\n\n\npragma solidity ^0.8.20;\n\n\n\n\ncontract DTicket is ERC1155, ERC1155Burnable, Ownable {\n    constructor() ERC1155(\"DTicket\") Ownable() {}\n\n    function mint(address account, uint256 id, uint256 amount, bytes memory data)\n        public\n        onlyOwner\n    {\n        _mint(account, id, amount, data);\n    }\n\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\n        public\n        onlyOwner\n    {\n        _mintBatch(to, ids, amounts, data);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/DTicket2_flattened.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DTicket2_flattened.sol\":3690:12859  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DTicket2_flattened.sol\":3690:12859  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122052cdecd57c7b2d94de3e356b5595718593c61c7ab46a03367b5aebc1fd187a2764736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122052cdecd57c7b2d94de3e356b5595718593c61c7ab46a03367b5aebc1fd187a2764736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xCD 0xEC 0xD5 PUSH29 0x7B2D94DE3E356B5595718593C61C7AB46A03367B5AEBC1FD187A276473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "3690:9169:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;3690:9169:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122052cdecd57c7b2d94de3e356b5595718593c61c7ab46a03367b5aebc1fd187a2764736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xCD 0xEC 0xD5 PUSH29 0x7B2D94DE3E356B5595718593C61C7AB46A03367B5AEBC1FD187A276473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "3690:9169:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3690,
									"end": 12859,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3690,
									"end": 12859,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122052cdecd57c7b2d94de3e356b5595718593c61c7ab46a03367b5aebc1fd187a2764736f6c63430008140033",
									".code": [
										{
											"begin": 3690,
											"end": 12859,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3690,
											"end": 12859,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3690,
											"end": 12859,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3690,
											"end": 12859,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3690,
											"end": 12859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 12859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3690,
											"end": 12859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 12859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3690,
											"end": 12859,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/DTicket2_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTicket2_flattened.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTicket2_flattened.sol\":{\"keccak256\":\"0x0e5171726fbcef88c4fd8ad350fc221a51d0b45111501457fe01feae960104ac\",\"urls\":[\"bzz-raw://3972866374f9c10c710210df0c6eb470f5a7c097af6c15e9d7bd08bdbd309eb8\",\"dweb:/ipfs/QmWmbTsVDaPrP4t7yGkVFydubtRc4dnZxvtUDscQJ1hDo7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTicket2_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTicket2_flattened.sol\":{\"keccak256\":\"0x0e5171726fbcef88c4fd8ad350fc221a51d0b45111501457fe01feae960104ac\",\"urls\":[\"bzz-raw://3972866374f9c10c710210df0c6eb470f5a7c097af6c15e9d7bd08bdbd309eb8\",\"dweb:/ipfs/QmWmbTsVDaPrP4t7yGkVFydubtRc4dnZxvtUDscQJ1hDo7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"DTicket": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DTicket2_flattened.sol\":39983:40452  contract DTicket is ERC1155, ERC1155Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DTicket2_flattened.sol\":40043:40088  constructor() ERC1155(\"DTicket\") Ownable() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/DTicket2_flattened.sol\":22873:22935  constructor(string memory uri_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x07\n  dup2\n  mstore\n  shl(0xca, 0x11151a58dad95d)\n  0x20\n  dup3\n  add\n  mstore\n    /* \"contracts/DTicket2_flattened.sol\":22915:22928  _setURI(uri_) */\n  tag_6\n    /* \"contracts/DTicket2_flattened.sol\":22873:22935  constructor(string memory uri_) {... */\n  dup2\n    /* \"contracts/DTicket2_flattened.sol\":22915:22922  _setURI */\n  tag_7\n    /* \"contracts/DTicket2_flattened.sol\":22915:22928  _setURI(uri_) */\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/DTicket2_flattened.sol\":1794:1826  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n  caller\n    /* \"contracts/DTicket2_flattened.sol\":1794:1812  _transferOwnership */\n  tag_12\n    /* \"contracts/DTicket2_flattened.sol\":1794:1826  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_9:\n    /* \"contracts/DTicket2_flattened.sol\":39983:40452  contract DTicket is ERC1155, ERC1155Burnable, Ownable {... */\n  jump(tag_25)\n    /* \"contracts/DTicket2_flattened.sol\":29915:30001  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"contracts/DTicket2_flattened.sol\":29981:29985  _uri */\n  0x02\n    /* \"contracts/DTicket2_flattened.sol\":29981:29994  _uri = newuri */\n  tag_16\n    /* \"contracts/DTicket2_flattened.sol\":29988:29994  newuri */\n  dup3\n    /* \"contracts/DTicket2_flattened.sol\":29981:29985  _uri */\n  dup3\n    /* \"contracts/DTicket2_flattened.sol\":29981:29994  _uri = newuri */\n  tag_17\n  jump\t// in\ntag_16:\n  pop\n    /* \"contracts/DTicket2_flattened.sol\":29915:30001  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/DTicket2_flattened.sol\":3284:3471  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"contracts/DTicket2_flattened.sol\":3376:3382  _owner */\n  0x03\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/DTicket2_flattened.sol\":3392:3409  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/DTicket2_flattened.sol\":3424:3464  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/DTicket2_flattened.sol\":3376:3382  _owner */\n  swap2\n  and\n  swap2\n    /* \"contracts/DTicket2_flattened.sol\":3392:3409  _owner = newOwner */\n  swap1\n    /* \"contracts/DTicket2_flattened.sol\":3376:3382  _owner */\n  dup3\n  swap1\n    /* \"contracts/DTicket2_flattened.sol\":3424:3464  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/DTicket2_flattened.sol\":3357:3373  address oldOwner */\n  0x00\n  swap1\n    /* \"contracts/DTicket2_flattened.sol\":3424:3464  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/DTicket2_flattened.sol\":3347:3471  {... */\n  pop\n    /* \"contracts/DTicket2_flattened.sol\":3284:3471  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_20:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_21:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_28:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_29:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_23:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_33\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_33:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_34:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_34)\ntag_36:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_32:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_17:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_40\n  tag_20\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1582:1679   */\n  tag_41\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_42\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_21\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_23\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_45\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_45:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_36)\n    /* \"#utility.yul\":1810:2473   */\ntag_44:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_48:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_48)\ntag_50:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_51:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\ntag_25:\n    /* \"contracts/DTicket2_flattened.sol\":39983:40452  contract DTicket is ERC1155, ERC1155Burnable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DTicket2_flattened.sol\":39983:40452  contract DTicket is ERC1155, ERC1155Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf5298aca\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x731133e9\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x1f7fdffa\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x1f7fdffa\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6b20c454\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DTicket2_flattened.sol\":23951:24178  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"contracts/DTicket2_flattened.sol\":23951:24178  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DTicket2_flattened.sol\":23002:23307  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"contracts/DTicket2_flattened.sol\":23002:23307  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_25\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":23706:23809  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":40264:40450  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n    tag_6:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/DTicket2_flattened.sol\":25808:26234  function safeBatchTransferFrom(... */\n    tag_7:\n      tag_39\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":24335:24821  function balanceOfBatch(... */\n    tag_8:\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":39599:39916  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n    tag_9:\n      tag_39\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":2682:2783  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_39\n      tag_58\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":40094:40258  function mint(address account, uint256 id, uint256 amount, bytes memory data)... */\n    tag_11:\n      tag_39\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":2059:2144  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"contracts/DTicket2_flattened.sol\":2131:2137  _owner */\n      sload(0x03)\n        /* \"contracts/DTicket2_flattened.sol\":2059:2144  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":2131:2137  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":9008:9059   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8996:8998   */\n      0x20\n        /* \"#utility.yul\":8981:8999   */\n      add\n        /* \"contracts/DTicket2_flattened.sol\":2059:2144  function owner() public view virtual returns (address) {... */\n      tag_25\n        /* \"#utility.yul\":8862:9065   */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":24889:25042  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_13:\n      tag_39\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":25109:25275  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_14:\n      tag_27\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":25231:25258  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"contracts/DTicket2_flattened.sol\":25208:25212  bool */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":25231:25258  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":25231:25249  _operatorApprovals */\n      0x01\n        /* \"contracts/DTicket2_flattened.sol\":25231:25258  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":25231:25268  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":25109:25275  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":25342:25736  function safeTransferFrom(... */\n    tag_15:\n      tag_39\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":2932:3130  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_39\n      tag_81\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":39308:39593  function burn(address account, uint256 id, uint256 value) public virtual {... */\n    tag_17:\n      tag_39\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":23951:24178  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_24:\n        /* \"contracts/DTicket2_flattened.sol\":24037:24044  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":24064:24085  account != address(0) */\n      dup4\n      and\n        /* \"contracts/DTicket2_flattened.sol\":24056:24132  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11018:11020   */\n      0x20\n        /* \"contracts/DTicket2_flattened.sol\":24056:24132  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11000:11021   */\n      mstore\n        /* \"#utility.yul\":11057:11059   */\n      0x2a\n        /* \"#utility.yul\":11037:11055   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11030:11060   */\n      mstore\n        /* \"#utility.yul\":11096:11130   */\n      0x455243313135353a2061646472657373207a65726f206973206e6f7420612076\n        /* \"#utility.yul\":11076:11094   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11069:11131   */\n      mstore\n      shl(0xb1, 0x30b634b21037bbb732b9)\n        /* \"#utility.yul\":11147:11165   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11140:11180   */\n      mstore\n        /* \"#utility.yul\":11197:11216   */\n      0x84\n      add\n        /* \"contracts/DTicket2_flattened.sol\":24056:24132  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":24149:24158  _balances */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":24149:24162  _balances[id] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":24149:24171  _balances[id][account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DTicket2_flattened.sol\":23951:24178  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_88:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":23002:23307  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_30:\n        /* \"contracts/DTicket2_flattened.sol\":23104:23108  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTicket2_flattened.sol\":23139:23180  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"contracts/DTicket2_flattened.sol\":23139:23248  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_93\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTicket2_flattened.sol\":23196:23248  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"contracts/DTicket2_flattened.sol\":23139:23248  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_93:\n        /* \"contracts/DTicket2_flattened.sol\":23139:23300  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_88\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTicket2_flattened.sol\":14697:14737  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"contracts/DTicket2_flattened.sol\":23264:23300  super.supportsInterface(interfaceId) */\n      tag_88\n        /* \"contracts/DTicket2_flattened.sol\":14589:14744  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":23706:23809  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_36:\n        /* \"contracts/DTicket2_flattened.sol\":23766:23779  string memory */\n      0x60\n        /* \"contracts/DTicket2_flattened.sol\":23798:23802  _uri */\n      0x02\n        /* \"contracts/DTicket2_flattened.sol\":23791:23802  return _uri */\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_100\n      swap1\n      tag_99\n      jump\t// in\n    tag_100:\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_102\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_101)\n    tag_102:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_103:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_103\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":23706:23809  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":40264:40450  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n    tag_42:\n        /* \"contracts/DTicket2_flattened.sol\":1952:1965  _checkOwner() */\n      tag_105\n        /* \"contracts/DTicket2_flattened.sol\":1952:1963  _checkOwner */\n      tag_106\n        /* \"contracts/DTicket2_flattened.sol\":1952:1965  _checkOwner() */\n      jump\t// in\n    tag_105:\n        /* \"contracts/DTicket2_flattened.sol\":40409:40443  _mintBatch(to, ids, amounts, data) */\n      tag_108\n        /* \"contracts/DTicket2_flattened.sol\":40420:40422  to */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":40424:40427  ids */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":40429:40436  amounts */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":40438:40442  data */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":40409:40419  _mintBatch */\n      tag_109\n        /* \"contracts/DTicket2_flattened.sol\":40409:40443  _mintBatch(to, ids, amounts, data) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/DTicket2_flattened.sol\":40264:40450  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":25808:26234  function safeBatchTransferFrom(... */\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":26033:26053  from == _msgSender() */\n      dup6\n      and\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":26033:26053  from == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/DTicket2_flattened.sol\":26033:26093  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_114\n      jumpi\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":26057:26093  isApprovedForAll(from, _msgSender()) */\n      tag_114\n        /* \"contracts/DTicket2_flattened.sol\":26074:26078  from */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":25109:25275  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_72\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":26057:26093  isApprovedForAll(from, _msgSender()) */\n    tag_114:\n        /* \"contracts/DTicket2_flattened.sol\":26012:26165  require(... */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_118\n      jump\t// in\n    tag_116:\n        /* \"contracts/DTicket2_flattened.sol\":26175:26227  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_119\n        /* \"contracts/DTicket2_flattened.sol\":26198:26202  from */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":26204:26206  to */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":26208:26211  ids */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":26213:26220  amounts */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":26222:26226  data */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":26175:26197  _safeBatchTransferFrom */\n      tag_120\n        /* \"contracts/DTicket2_flattened.sol\":26175:26227  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_119:\n        /* \"contracts/DTicket2_flattened.sol\":25808:26234  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":24335:24821  function balanceOfBatch(... */\n    tag_50:\n        /* \"contracts/DTicket2_flattened.sol\":24468:24484  uint256[] memory */\n      0x60\n        /* \"contracts/DTicket2_flattened.sol\":24523:24526  ids */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":24523:24533  ids.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":24504:24512  accounts */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":24504:24519  accounts.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":24504:24533  accounts.length == ids.length */\n      eq\n        /* \"contracts/DTicket2_flattened.sol\":24496:24579  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12229:12231   */\n      0x20\n        /* \"contracts/DTicket2_flattened.sol\":24496:24579  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12211:12232   */\n      mstore\n        /* \"#utility.yul\":12268:12270   */\n      0x29\n        /* \"#utility.yul\":12248:12266   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12241:12271   */\n      mstore\n        /* \"#utility.yul\":12307:12341   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":12287:12305   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12280:12342   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":12358:12376   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12351:12390   */\n      mstore\n        /* \"#utility.yul\":12407:12426   */\n      0x84\n      add\n        /* \"contracts/DTicket2_flattened.sol\":24496:24579  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_90\n        /* \"#utility.yul\":12027:12432   */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":24496:24579  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_122:\n        /* \"contracts/DTicket2_flattened.sol\":24590:24620  uint256[] memory batchBalances */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":24637:24645  accounts */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":24637:24652  accounts.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":24623:24653  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_126\n      jumpi\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_128\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_128:\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":24590:24653  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":24669:24678  uint256 i */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":24664:24784  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_129:\n        /* \"contracts/DTicket2_flattened.sol\":24688:24696  accounts */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":24688:24703  accounts.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":24684:24685  i */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":24684:24703  i < accounts.length */\n      lt\n        /* \"contracts/DTicket2_flattened.sol\":24664:24784  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"contracts/DTicket2_flattened.sol\":24743:24773  balanceOf(accounts[i], ids[i]) */\n      tag_132\n        /* \"contracts/DTicket2_flattened.sol\":24753:24761  accounts */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":24762:24763  i */\n      dup3\n        /* \"contracts/DTicket2_flattened.sol\":24753:24764  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":24766:24769  ids */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":24770:24771  i */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":24766:24772  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_137\n      jumpi\n      tag_137\n      tag_135\n      jump\t// in\n    tag_137:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":24743:24752  balanceOf */\n      tag_24\n        /* \"contracts/DTicket2_flattened.sol\":24743:24773  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/DTicket2_flattened.sol\":24724:24737  batchBalances */\n      dup3\n        /* \"contracts/DTicket2_flattened.sol\":24738:24739  i */\n      dup3\n        /* \"contracts/DTicket2_flattened.sol\":24724:24740  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_139\n      jumpi\n      tag_139\n      tag_135\n      jump\t// in\n    tag_139:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/DTicket2_flattened.sol\":24724:24773  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":24705:24708  ++i */\n      tag_140\n      dup2\n      tag_141\n      jump\t// in\n    tag_140:\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":24664:24784  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_129)\n    tag_130:\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":24801:24814  batchBalances */\n      swap4\n        /* \"contracts/DTicket2_flattened.sol\":24335:24821  function balanceOfBatch(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":39599:39916  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":39728:39751  account == _msgSender() */\n      dup4\n      and\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":39728:39751  account == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/DTicket2_flattened.sol\":39728:39794  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      tag_145\n      jumpi\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":39755:39794  isApprovedForAll(account, _msgSender()) */\n      tag_145\n        /* \"contracts/DTicket2_flattened.sol\":39772:39779  account */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":25109:25275  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_72\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":39755:39794  isApprovedForAll(account, _msgSender()) */\n    tag_145:\n        /* \"contracts/DTicket2_flattened.sol\":39707:39866  require(... */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_118\n      jump\t// in\n    tag_147:\n        /* \"contracts/DTicket2_flattened.sol\":39877:39909  _burnBatch(account, ids, values) */\n      tag_149\n        /* \"contracts/DTicket2_flattened.sol\":39888:39895  account */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":39897:39900  ids */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":39902:39908  values */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":39877:39887  _burnBatch */\n      tag_150\n        /* \"contracts/DTicket2_flattened.sol\":39877:39909  _burnBatch(account, ids, values) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/DTicket2_flattened.sol\":39599:39916  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":2682:2783  function renounceOwnership() public virtual onlyOwner {... */\n    tag_58:\n        /* \"contracts/DTicket2_flattened.sol\":1952:1965  _checkOwner() */\n      tag_152\n        /* \"contracts/DTicket2_flattened.sol\":1952:1963  _checkOwner */\n      tag_106\n        /* \"contracts/DTicket2_flattened.sol\":1952:1965  _checkOwner() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/DTicket2_flattened.sol\":2746:2776  _transferOwnership(address(0)) */\n      tag_154\n        /* \"contracts/DTicket2_flattened.sol\":2773:2774  0 */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":2746:2764  _transferOwnership */\n      tag_155\n        /* \"contracts/DTicket2_flattened.sol\":2746:2776  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/DTicket2_flattened.sol\":2682:2783  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":40094:40258  function mint(address account, uint256 id, uint256 amount, bytes memory data)... */\n    tag_62:\n        /* \"contracts/DTicket2_flattened.sol\":1952:1965  _checkOwner() */\n      tag_157\n        /* \"contracts/DTicket2_flattened.sol\":1952:1963  _checkOwner */\n      tag_106\n        /* \"contracts/DTicket2_flattened.sol\":1952:1965  _checkOwner() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/DTicket2_flattened.sol\":40219:40251  _mint(account, id, amount, data) */\n      tag_108\n        /* \"contracts/DTicket2_flattened.sol\":40225:40232  account */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":40234:40236  id */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":40238:40244  amount */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":40246:40250  data */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":40219:40224  _mint */\n      tag_160\n        /* \"contracts/DTicket2_flattened.sol\":40219:40251  _mint(account, id, amount, data) */\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":24889:25042  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_70:\n        /* \"contracts/DTicket2_flattened.sol\":24983:25035  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_163\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":25016:25024  operator */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":25026:25034  approved */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":24983:25001  _setApprovalForAll */\n      tag_165\n        /* \"contracts/DTicket2_flattened.sol\":24983:25035  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/DTicket2_flattened.sol\":24889:25042  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":25342:25736  function safeTransferFrom(... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":25542:25562  from == _msgSender() */\n      dup6\n      and\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":25542:25562  from == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/DTicket2_flattened.sol\":25542:25602  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_170\n      jumpi\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":25566:25602  isApprovedForAll(from, _msgSender()) */\n      tag_170\n        /* \"contracts/DTicket2_flattened.sol\":25583:25587  from */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":25109:25275  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_72\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":25566:25602  isApprovedForAll(from, _msgSender()) */\n    tag_170:\n        /* \"contracts/DTicket2_flattened.sol\":25521:25674  require(... */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_118\n      jump\t// in\n    tag_172:\n        /* \"contracts/DTicket2_flattened.sol\":25684:25729  _safeTransferFrom(from, to, id, amount, data) */\n      tag_119\n        /* \"contracts/DTicket2_flattened.sol\":25702:25706  from */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":25708:25710  to */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":25712:25714  id */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":25716:25722  amount */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":25724:25728  data */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":25684:25701  _safeTransferFrom */\n      tag_175\n        /* \"contracts/DTicket2_flattened.sol\":25684:25729  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":2932:3130  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_83:\n        /* \"contracts/DTicket2_flattened.sol\":1952:1965  _checkOwner() */\n      tag_177\n        /* \"contracts/DTicket2_flattened.sol\":1952:1963  _checkOwner */\n      tag_106\n        /* \"contracts/DTicket2_flattened.sol\":1952:1965  _checkOwner() */\n      jump\t// in\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":3020:3042  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/DTicket2_flattened.sol\":3012:3085  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13043:13045   */\n      0x20\n        /* \"contracts/DTicket2_flattened.sol\":3012:3085  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13025:13046   */\n      mstore\n        /* \"#utility.yul\":13082:13084   */\n      0x26\n        /* \"#utility.yul\":13062:13080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13055:13085   */\n      mstore\n        /* \"#utility.yul\":13121:13155   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13101:13119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13094:13156   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":13172:13190   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13165:13201   */\n      mstore\n        /* \"#utility.yul\":13218:13237   */\n      0x84\n      add\n        /* \"contracts/DTicket2_flattened.sol\":3012:3085  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_90\n        /* \"#utility.yul\":12841:13243   */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":3012:3085  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_179:\n        /* \"contracts/DTicket2_flattened.sol\":3095:3123  _transferOwnership(newOwner) */\n      tag_182\n        /* \"contracts/DTicket2_flattened.sol\":3114:3122  newOwner */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":3095:3113  _transferOwnership */\n      tag_155\n        /* \"contracts/DTicket2_flattened.sol\":3095:3123  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/DTicket2_flattened.sol\":2932:3130  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":39308:39593  function burn(address account, uint256 id, uint256 value) public virtual {... */\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":39412:39435  account == _msgSender() */\n      dup4\n      and\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":39412:39435  account == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/DTicket2_flattened.sol\":39412:39478  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      tag_186\n      jumpi\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":39439:39478  isApprovedForAll(account, _msgSender()) */\n      tag_186\n        /* \"contracts/DTicket2_flattened.sol\":39456:39463  account */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":25109:25275  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_72\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":39439:39478  isApprovedForAll(account, _msgSender()) */\n    tag_186:\n        /* \"contracts/DTicket2_flattened.sol\":39391:39550  require(... */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_118\n      jump\t// in\n    tag_188:\n        /* \"contracts/DTicket2_flattened.sol\":39561:39586  _burn(account, id, value) */\n      tag_149\n        /* \"contracts/DTicket2_flattened.sol\":39567:39574  account */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":39576:39578  id */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":39580:39585  value */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":39561:39566  _burn */\n      tag_191\n        /* \"contracts/DTicket2_flattened.sol\":39561:39586  _burn(account, id, value) */\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":2217:2347  function _checkOwner() internal view virtual {... */\n    tag_106:\n        /* \"contracts/DTicket2_flattened.sol\":2131:2137  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":2280:2303  owner() == _msgSender() */\n      eq\n        /* \"contracts/DTicket2_flattened.sol\":2272:2340  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13450:13452   */\n      0x20\n        /* \"contracts/DTicket2_flattened.sol\":2272:2340  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13432:13453   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13469:13487   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13462:13492   */\n      mstore\n        /* \"#utility.yul\":13528:13562   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13508:13526   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13501:13563   */\n      mstore\n        /* \"#utility.yul\":13580:13598   */\n      0x64\n      add\n        /* \"contracts/DTicket2_flattened.sol\":2272:2340  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_90\n        /* \"#utility.yul\":13248:13604   */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":31435:32226  function _mintBatch(... */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":31607:31623  to != address(0) */\n      dup5\n      and\n        /* \"contracts/DTicket2_flattened.sol\":31599:31661  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_202\n      jump\t// in\n    tag_200:\n        /* \"contracts/DTicket2_flattened.sol\":31693:31700  amounts */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":31693:31707  amounts.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":31679:31682  ids */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":31679:31689  ids.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":31679:31707  ids.length == amounts.length */\n      eq\n        /* \"contracts/DTicket2_flattened.sol\":31671:31752  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_205\n      jump\t// in\n    tag_203:\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":31763:31779  address operator */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":31882:31983  for (uint256 i = 0; i < ids.length; i++) {... */\n    tag_209:\n        /* \"contracts/DTicket2_flattened.sol\":31906:31909  ids */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":31906:31916  ids.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":31902:31903  i */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":31902:31916  i < ids.length */\n      lt\n        /* \"contracts/DTicket2_flattened.sol\":31882:31983  for (uint256 i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_210\n      jumpi\n        /* \"contracts/DTicket2_flattened.sol\":31962:31969  amounts */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":31970:31971  i */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":31962:31972  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_213\n      jumpi\n      tag_213\n      tag_135\n      jump\t// in\n    tag_213:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":31937:31946  _balances */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":31937:31954  _balances[ids[i]] */\n      dup1\n        /* \"contracts/DTicket2_flattened.sol\":31947:31950  ids */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":31951:31952  i */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":31947:31953  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_215\n      jumpi\n      tag_215\n      tag_135\n      jump\t// in\n    tag_215:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":31937:31954  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":31937:31958  _balances[ids[i]][to] */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":31955:31957  to */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":31937:31958  _balances[ids[i]][to] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":31937:31972  _balances[ids[i]][to] += amounts[i] */\n      dup3\n      dup3\n      sload\n      tag_216\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":31918:31921  i++ */\n      dup2\n      swap1\n      pop\n      tag_218\n      dup2\n      tag_141\n      jump\t// in\n    tag_218:\n      swap2\n      pop\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":31882:31983  for (uint256 i = 0; i < ids.length; i++) {... */\n      jump(tag_209)\n    tag_210:\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":32034:32036  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":31998:32051  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"contracts/DTicket2_flattened.sol\":32030:32031  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":31998:32051  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"contracts/DTicket2_flattened.sol\":32012:32020  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":31998:32051  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/DTicket2_flattened.sol\":32038:32041  ids */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":32043:32050  amounts */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":31998:32051  TransferBatch(operator, address(0), to, ids, amounts) */\n      mload(0x40)\n      tag_219\n      swap3\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DTicket2_flattened.sol\":32138:32219  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      tag_119\n        /* \"contracts/DTicket2_flattened.sol\":32174:32182  operator */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":32192:32193  0 */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":32196:32198  to */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":32200:32203  ids */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":32205:32212  amounts */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":32214:32218  data */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":32138:32173  _doSafeBatchTransferAcceptanceCheck */\n      tag_224\n        /* \"contracts/DTicket2_flattened.sol\":32138:32219  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":27977:29092  function _safeBatchTransferFrom(... */\n    tag_120:\n        /* \"contracts/DTicket2_flattened.sol\":28197:28204  amounts */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":28197:28211  amounts.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":28183:28186  ids */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":28183:28193  ids.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":28183:28211  ids.length == amounts.length */\n      eq\n        /* \"contracts/DTicket2_flattened.sol\":28175:28256  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_205\n      jump\t// in\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":28274:28290  to != address(0) */\n      dup5\n      and\n        /* \"contracts/DTicket2_flattened.sol\":28266:28332  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_231\n      jump\t// in\n    tag_229:\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":28343:28359  address operator */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":28456:28867  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_234:\n        /* \"contracts/DTicket2_flattened.sol\":28480:28483  ids */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":28480:28490  ids.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":28476:28477  i */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":28476:28490  i < ids.length */\n      lt\n        /* \"contracts/DTicket2_flattened.sol\":28456:28867  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"contracts/DTicket2_flattened.sol\":28511:28521  uint256 id */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":28524:28527  ids */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":28528:28529  i */\n      dup3\n        /* \"contracts/DTicket2_flattened.sol\":28524:28530  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_238\n      jumpi\n      tag_238\n      tag_135\n      jump\t// in\n    tag_238:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":28511:28530  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":28544:28558  uint256 amount */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":28561:28568  amounts */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":28569:28570  i */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":28561:28571  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_240\n      jumpi\n      tag_240\n      tag_135\n      jump\t// in\n    tag_240:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":28586:28605  uint256 fromBalance */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":28608:28621  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":28608:28627  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/DTicket2_flattened.sol\":28561:28571  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":28649:28670  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/DTicket2_flattened.sol\":28641:28717  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_243\n      jump\t// in\n    tag_241:\n        /* \"contracts/DTicket2_flattened.sol\":28759:28768  _balances */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":28759:28772  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":28759:28778  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":28781:28801  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"contracts/DTicket2_flattened.sol\":28759:28801  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/DTicket2_flattened.sol\":28829:28846  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":28829:28856  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/DTicket2_flattened.sol\":28781:28801  fromBalance - amount */\n      dup5\n      swap3\n        /* \"contracts/DTicket2_flattened.sol\":28759:28768  _balances */\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":28829:28856  _balances[id][to] += amount */\n      tag_244\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":28781:28801  fromBalance - amount */\n      dup5\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":28829:28856  _balances[id][to] += amount */\n      tag_217\n      jump\t// in\n    tag_244:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":28497:28867  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":28492:28495  ++i */\n      dup1\n      tag_245\n      swap1\n      tag_141\n      jump\t// in\n    tag_245:\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":28456:28867  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_234)\n    tag_235:\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":28912:28914  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":28882:28929  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/DTicket2_flattened.sol\":28906:28910  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":28882:28929  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/DTicket2_flattened.sol\":28896:28904  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":28882:28929  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/DTicket2_flattened.sol\":28916:28919  ids */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":28921:28928  amounts */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":28882:28929  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_246\n      swap3\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DTicket2_flattened.sol\":29010:29085  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_248\n        /* \"contracts/DTicket2_flattened.sol\":29046:29054  operator */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":29056:29060  from */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":29062:29064  to */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":29066:29069  ids */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":29071:29078  amounts */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":29080:29084  data */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":29010:29045  _doSafeBatchTransferAcceptanceCheck */\n      tag_224\n        /* \"contracts/DTicket2_flattened.sol\":29010:29085  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/DTicket2_flattened.sol\":28165:29092  {... */\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":27977:29092  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":33507:34420  function _burnBatch(address from, uint256[] memory ids, uint256[] memory amounts) internal virtual {... */\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":33624:33642  from != address(0) */\n      dup4\n      and\n        /* \"contracts/DTicket2_flattened.sol\":33616:33682  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_252\n      jump\t// in\n    tag_250:\n        /* \"contracts/DTicket2_flattened.sol\":33714:33721  amounts */\n      dup1\n        /* \"contracts/DTicket2_flattened.sol\":33714:33728  amounts.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":33700:33703  ids */\n      dup3\n        /* \"contracts/DTicket2_flattened.sol\":33700:33710  ids.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":33700:33728  ids.length == amounts.length */\n      eq\n        /* \"contracts/DTicket2_flattened.sol\":33692:33773  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_205\n      jump\t// in\n    tag_253:\n        /* \"contracts/DTicket2_flattened.sol\":33826:33892  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":33784:33800  address operator */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":33826:33892  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      swap1\n      dup2\n      swap1\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":33903:34267  for (uint256 i = 0; i < ids.length; i++) {... */\n    tag_257:\n        /* \"contracts/DTicket2_flattened.sol\":33927:33930  ids */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":33927:33937  ids.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":33923:33924  i */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":33923:33937  i < ids.length */\n      lt\n        /* \"contracts/DTicket2_flattened.sol\":33903:34267  for (uint256 i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"contracts/DTicket2_flattened.sol\":33958:33968  uint256 id */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":33971:33974  ids */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":33975:33976  i */\n      dup3\n        /* \"contracts/DTicket2_flattened.sol\":33971:33977  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_261\n      jumpi\n      tag_261\n      tag_135\n      jump\t// in\n    tag_261:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":33958:33977  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":33991:34005  uint256 amount */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":34008:34015  amounts */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":34016:34017  i */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":34008:34018  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_263\n      jumpi\n      tag_263\n      tag_135\n      jump\t// in\n    tag_263:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":34033:34052  uint256 fromBalance */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":34055:34068  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":34055:34074  _balances[id][from] */\n      dup13\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/DTicket2_flattened.sol\":34008:34018  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":34096:34117  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/DTicket2_flattened.sol\":34088:34158  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_266\n      jump\t// in\n    tag_264:\n        /* \"contracts/DTicket2_flattened.sol\":34200:34209  _balances */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":34200:34213  _balances[id] */\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      dup2\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":34200:34219  _balances[id][from] */\n      dup12\n      and\n      dup7\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap3\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":34222:34242  fromBalance - amount */\n      swap2\n      sub\n        /* \"contracts/DTicket2_flattened.sol\":34200:34242  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/DTicket2_flattened.sol\":33939:33942  i++ */\n      dup1\n      tag_267\n      dup2\n      tag_141\n      jump\t// in\n    tag_267:\n      swap2\n      pop\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":33903:34267  for (uint256 i = 0; i < ids.length; i++) {... */\n      jump(tag_257)\n    tag_258:\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":34320:34321  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":34282:34337  TransferBatch(operator, from, address(0), ids, amounts) */\n      and\n        /* \"contracts/DTicket2_flattened.sol\":34306:34310  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":34282:34337  TransferBatch(operator, from, address(0), ids, amounts) */\n      and\n        /* \"contracts/DTicket2_flattened.sol\":34296:34304  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":34282:34337  TransferBatch(operator, from, address(0), ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/DTicket2_flattened.sol\":34324:34327  ids */\n      dup7\n        /* \"contracts/DTicket2_flattened.sol\":34329:34336  amounts */\n      dup7\n        /* \"contracts/DTicket2_flattened.sol\":34282:34337  TransferBatch(operator, from, address(0), ids, amounts) */\n      mload(0x40)\n      tag_268\n      swap3\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DTicket2_flattened.sol\":34348:34413  _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":34392:34393  0 */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":34348:34413  _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      swap1\n      mstore\n      tag_108\n        /* \"contracts/DTicket2_flattened.sol\":27977:29092  function _safeBatchTransferFrom(... */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":3284:3471  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_155:\n        /* \"contracts/DTicket2_flattened.sol\":3376:3382  _owner */\n      0x03\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":3392:3409  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/DTicket2_flattened.sol\":3424:3464  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/DTicket2_flattened.sol\":3376:3382  _owner */\n      swap2\n      and\n      swap2\n        /* \"contracts/DTicket2_flattened.sol\":3392:3409  _owner = newOwner */\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":3376:3382  _owner */\n      dup3\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":3424:3464  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":3357:3373  address oldOwner */\n      0x00\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":3424:3464  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/DTicket2_flattened.sol\":3347:3471  {... */\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":3284:3471  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":30374:31045  function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {... */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":30483:30499  to != address(0) */\n      dup5\n      and\n        /* \"contracts/DTicket2_flattened.sol\":30475:30537  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_202\n      jump\t// in\n    tag_272:\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":30548:30564  address operator */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":30612:30633  _asSingletonArray(id) */\n      tag_275\n        /* \"contracts/DTicket2_flattened.sol\":30630:30632  id */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":30612:30629  _asSingletonArray */\n      tag_276\n        /* \"contracts/DTicket2_flattened.sol\":30612:30633  _asSingletonArray(id) */\n      jump\t// in\n    tag_275:\n        /* \"contracts/DTicket2_flattened.sol\":30589:30633  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":30643:30667  uint256[] memory amounts */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":30670:30695  _asSingletonArray(amount) */\n      tag_277\n        /* \"contracts/DTicket2_flattened.sol\":30688:30694  amount */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":30670:30687  _asSingletonArray */\n      tag_276\n        /* \"contracts/DTicket2_flattened.sol\":30670:30695  _asSingletonArray(amount) */\n      jump\t// in\n    tag_277:\n        /* \"contracts/DTicket2_flattened.sol\":30643:30695  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":30783:30792  _balances */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":30783:30796  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":30783:30800  _balances[id][to] */\n      dup12\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":30783:30810  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/DTicket2_flattened.sol\":30804:30810  amount */\n      dup8\n      swap3\n        /* \"contracts/DTicket2_flattened.sol\":30783:30792  _balances */\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":30783:30810  _balances[id][to] += amount */\n      tag_279\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":30804:30810  amount */\n      dup5\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":30783:30810  _balances[id][to] += amount */\n      tag_217\n      jump\t// in\n    tag_279:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":30825:30877  TransferSingle(operator, address(0), to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":16820:16845   */\n      dup8\n      dup2\n      mstore\n        /* \"#utility.yul\":16876:16878   */\n      0x20\n        /* \"#utility.yul\":16861:16879   */\n      dup2\n      add\n        /* \"#utility.yul\":16854:16888   */\n      dup8\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":30825:30877  TransferSingle(operator, address(0), to, id, amount) */\n      dup1\n      dup11\n      and\n      swap3\n        /* \"contracts/DTicket2_flattened.sol\":30858:30859  0 */\n      0x00\n      swap3\n        /* \"contracts/DTicket2_flattened.sol\":30825:30877  TransferSingle(operator, address(0), to, id, amount) */\n      swap2\n      dup8\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":16793:16811   */\n      add\n        /* \"contracts/DTicket2_flattened.sol\":30825:30877  TransferSingle(operator, address(0), to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DTicket2_flattened.sol\":30964:31038  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      tag_283\n        /* \"contracts/DTicket2_flattened.sol\":30995:31003  operator */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":31013:31014  0 */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":31017:31019  to */\n      dup10\n        /* \"contracts/DTicket2_flattened.sol\":31021:31023  id */\n      dup10\n        /* \"contracts/DTicket2_flattened.sol\":31025:31031  amount */\n      dup10\n        /* \"contracts/DTicket2_flattened.sol\":31033:31037  data */\n      dup10\n        /* \"contracts/DTicket2_flattened.sol\":30964:30994  _doSafeTransferAcceptanceCheck */\n      tag_284\n        /* \"contracts/DTicket2_flattened.sol\":30964:31038  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      jump\t// in\n    tag_283:\n        /* \"contracts/DTicket2_flattened.sol\":30465:31045  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":30374:31045  function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":34556:34849  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_165:\n        /* \"contracts/DTicket2_flattened.sol\":34676:34684  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":34667:34684  owner != operator */\n      and\n        /* \"contracts/DTicket2_flattened.sol\":34667:34672  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":34667:34684  owner != operator */\n      and\n      sub\n        /* \"contracts/DTicket2_flattened.sol\":34659:34730  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17101:17103   */\n      0x20\n        /* \"contracts/DTicket2_flattened.sol\":34659:34730  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17083:17104   */\n      mstore\n        /* \"#utility.yul\":17140:17142   */\n      0x29\n        /* \"#utility.yul\":17120:17138   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17113:17143   */\n      mstore\n        /* \"#utility.yul\":17179:17213   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":17159:17177   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17152:17214   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":17230:17248   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17223:17262   */\n      mstore\n        /* \"#utility.yul\":17279:17298   */\n      0x84\n      add\n        /* \"contracts/DTicket2_flattened.sol\":34659:34730  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_90\n        /* \"#utility.yul\":16899:17304   */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":34659:34730  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_286:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":34740:34765  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":34740:34758  _operatorApprovals */\n      0x01\n        /* \"contracts/DTicket2_flattened.sol\":34740:34765  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":34740:34775  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":34740:34786  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/DTicket2_flattened.sol\":34801:34842  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":34801:34842  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"contracts/DTicket2_flattened.sol\":34801:34842  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DTicket2_flattened.sol\":34556:34849  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":26684:27631  function _safeTransferFrom(... */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":26865:26881  to != address(0) */\n      dup5\n      and\n        /* \"contracts/DTicket2_flattened.sol\":26857:26923  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_231\n      jump\t// in\n    tag_291:\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":26934:26950  address operator */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":26998:27019  _asSingletonArray(id) */\n      tag_294\n        /* \"contracts/DTicket2_flattened.sol\":27016:27018  id */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":26998:27015  _asSingletonArray */\n      tag_276\n        /* \"contracts/DTicket2_flattened.sol\":26998:27019  _asSingletonArray(id) */\n      jump\t// in\n    tag_294:\n        /* \"contracts/DTicket2_flattened.sol\":26975:27019  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":27029:27053  uint256[] memory amounts */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":27056:27081  _asSingletonArray(amount) */\n      tag_295\n        /* \"contracts/DTicket2_flattened.sol\":27074:27080  amount */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":27056:27073  _asSingletonArray */\n      tag_276\n        /* \"contracts/DTicket2_flattened.sol\":27056:27081  _asSingletonArray(amount) */\n      jump\t// in\n    tag_295:\n        /* \"contracts/DTicket2_flattened.sol\":27029:27081  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":27163:27182  uint256 fromBalance */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":27185:27198  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":27185:27204  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DTicket2_flattened.sol\":27222:27243  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"contracts/DTicket2_flattened.sol\":27214:27290  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_243\n      jump\t// in\n    tag_297:\n        /* \"contracts/DTicket2_flattened.sol\":27324:27333  _balances */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":27324:27337  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":27324:27343  _balances[id][from] */\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":27346:27366  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"contracts/DTicket2_flattened.sol\":27324:27366  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/DTicket2_flattened.sol\":27386:27403  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":27386:27413  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/DTicket2_flattened.sol\":27346:27366  fromBalance - amount */\n      dup9\n      swap3\n        /* \"contracts/DTicket2_flattened.sol\":27324:27333  _balances */\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":27386:27413  _balances[id][to] += amount */\n      tag_299\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":27346:27366  fromBalance - amount */\n      dup5\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":27386:27413  _balances[id][to] += amount */\n      tag_217\n      jump\t// in\n    tag_299:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":27429:27475  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":16820:16845   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":16876:16878   */\n      0x20\n        /* \"#utility.yul\":16861:16879   */\n      dup2\n      add\n        /* \"#utility.yul\":16854:16888   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":27429:27475  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":16793:16811   */\n      add\n        /* \"contracts/DTicket2_flattened.sol\":27429:27475  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DTicket2_flattened.sol\":27556:27624  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_302\n        /* \"contracts/DTicket2_flattened.sol\":27587:27595  operator */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":27597:27601  from */\n      dup11\n        /* \"contracts/DTicket2_flattened.sol\":27603:27605  to */\n      dup11\n        /* \"contracts/DTicket2_flattened.sol\":27607:27609  id */\n      dup11\n        /* \"contracts/DTicket2_flattened.sol\":27611:27617  amount */\n      dup11\n        /* \"contracts/DTicket2_flattened.sol\":27619:27623  data */\n      dup11\n        /* \"contracts/DTicket2_flattened.sol\":27556:27586  _doSafeTransferAcceptanceCheck */\n      tag_284\n        /* \"contracts/DTicket2_flattened.sol\":27556:27624  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_302:\n        /* \"contracts/DTicket2_flattened.sol\":26847:27631  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":26684:27631  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":32512:33268  function _burn(address from, uint256 id, uint256 amount) internal virtual {... */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":32604:32622  from != address(0) */\n      dup4\n      and\n        /* \"contracts/DTicket2_flattened.sol\":32596:32662  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_252\n      jump\t// in\n    tag_304:\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":32673:32689  address operator */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":32737:32758  _asSingletonArray(id) */\n      tag_307\n        /* \"contracts/DTicket2_flattened.sol\":32755:32757  id */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":32737:32754  _asSingletonArray */\n      tag_276\n        /* \"contracts/DTicket2_flattened.sol\":32737:32758  _asSingletonArray(id) */\n      jump\t// in\n    tag_307:\n        /* \"contracts/DTicket2_flattened.sol\":32714:32758  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":32768:32792  uint256[] memory amounts */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":32795:32820  _asSingletonArray(amount) */\n      tag_308\n        /* \"contracts/DTicket2_flattened.sol\":32813:32819  amount */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":32795:32812  _asSingletonArray */\n      tag_276\n        /* \"contracts/DTicket2_flattened.sol\":32795:32820  _asSingletonArray(amount) */\n      jump\t// in\n    tag_308:\n        /* \"contracts/DTicket2_flattened.sol\":32831:32897  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      add\n      dup4\n      mstore\n      0x00\n      swap2\n      dup3\n      swap1\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":32930:32943  _balances[id] */\n      dup9\n      dup3\n      mstore\n      dup2\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":32930:32949  _balances[id][from] */\n      dup12\n      and\n      dup4\n      mstore\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"contracts/DTicket2_flattened.sol\":32768:32820  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":32967:32988  fromBalance >= amount */\n      dup5\n      dup2\n      lt\n      iszero\n        /* \"contracts/DTicket2_flattened.sol\":32959:33029  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_266\n      jump\t// in\n    tag_310:\n        /* \"contracts/DTicket2_flattened.sol\":33063:33072  _balances */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":33063:33076  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":33063:33082  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":33085:33105  fromBalance - amount */\n      dup11\n      dup8\n      sub\n        /* \"contracts/DTicket2_flattened.sol\":33063:33105  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/DTicket2_flattened.sol\":33131:33185  TransferSingle(operator, from, address(0), id, amount) */\n      dup3\n      mload\n        /* \"#utility.yul\":16820:16845   */\n      dup12\n      dup2\n      mstore\n        /* \"#utility.yul\":16861:16879   */\n      swap4\n      dup5\n      add\n        /* \"#utility.yul\":16854:16888   */\n      dup11\n      swap1\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":33063:33082  _balances[id][from] */\n      swap1\n      swap3\n        /* \"contracts/DTicket2_flattened.sol\":33131:33185  TransferSingle(operator, from, address(0), id, amount) */\n      swap1\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":16793:16811   */\n      add\n        /* \"contracts/DTicket2_flattened.sol\":33131:33185  TransferSingle(operator, from, address(0), id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DTicket2_flattened.sol\":33196:33261  _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":33240:33241  0 */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":33196:33261  _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      swap1\n      mstore\n      tag_283\n        /* \"contracts/DTicket2_flattened.sol\":27977:29092  function _safeBatchTransferFrom(... */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":37882:38674  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_224:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":38114:38127  to.isContract */\n      dup5\n      and\n        /* \"contracts/DTicket2_flattened.sol\":5198:5217  account.code.length */\n      extcodesize\n        /* \"contracts/DTicket2_flattened.sol\":5198:5221  account.code.length > 0 */\n      iszero\n        /* \"contracts/DTicket2_flattened.sol\":38110:38668  if (to.isContract()) {... */\n      tag_248\n      jumpi\n        /* \"contracts/DTicket2_flattened.sol\":38149:38228  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":38149:38192  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":38149:38228  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_320\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":38193:38201  operator */\n      dup10\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":38203:38207  from */\n      dup10\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":38209:38212  ids */\n      dup9\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":38214:38221  amounts */\n      dup9\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":38223:38227  data */\n      dup9\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":38149:38228  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_321\n      jump\t// in\n    tag_320:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_322\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_323\n      swap2\n      dup2\n      add\n      swap1\n      tag_324\n      jump\t// in\n    tag_323:\n      0x01\n    tag_322:\n        /* \"contracts/DTicket2_flattened.sol\":38145:38658  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_325\n      jumpi\n      tag_329\n      tag_330\n      jump\t// in\n    tag_329:\n      dup1\n      0x08c379a0\n      sub\n      tag_328\n      jumpi\n      pop\n      tag_331\n      tag_332\n      jump\t// in\n    tag_331:\n      dup1\n      tag_333\n      jumpi\n      pop\n      jump(tag_327)\n    tag_333:\n        /* \"contracts/DTicket2_flattened.sol\":38534:38540  reason */\n      dup1\n        /* \"contracts/DTicket2_flattened.sol\":38527:38541  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":38145:38658  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_328:\n      pop\n    tag_327:\n        /* \"contracts/DTicket2_flattened.sol\":38581:38643  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19457:19459   */\n      0x20\n        /* \"contracts/DTicket2_flattened.sol\":38581:38643  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19439:19460   */\n      mstore\n        /* \"#utility.yul\":19496:19498   */\n      0x34\n        /* \"#utility.yul\":19476:19494   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19469:19499   */\n      mstore\n        /* \"#utility.yul\":19535:19569   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2d45524331313535\n        /* \"#utility.yul\":19515:19533   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19508:19570   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":19586:19604   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":19579:19629   */\n      mstore\n        /* \"#utility.yul\":19646:19665   */\n      0x84\n      add\n        /* \"contracts/DTicket2_flattened.sol\":38581:38643  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      tag_90\n        /* \"#utility.yul\":19255:19671   */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":38145:38658  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_325:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTicket2_flattened.sol\":38307:38367  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"contracts/DTicket2_flattened.sol\":38303:38460  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_283\n      jumpi\n        /* \"contracts/DTicket2_flattened.sol\":38391:38441  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_340\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":38680:38873  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_276:\n        /* \"contracts/DTicket2_flattened.sol\":38799:38815  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":38813:38814  1 */\n      0x01\n        /* \"contracts/DTicket2_flattened.sol\":38799:38815  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":38746:38762  uint256[] memory */\n      0x60\n      swap2\n        /* \"contracts/DTicket2_flattened.sol\":38774:38796  uint256[] memory array */\n      0x00\n      swap2\n        /* \"contracts/DTicket2_flattened.sol\":38799:38815  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":38774:38815  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":38836:38843  element */\n      dup3\n        /* \"contracts/DTicket2_flattened.sol\":38825:38830  array */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":38831:38832  0 */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":38825:38833  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_346\n      jumpi\n      tag_346\n      tag_135\n      jump\t// in\n    tag_346:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/DTicket2_flattened.sol\":38825:38843  array[0] = element */\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":38861:38866  array */\n      swap3\n        /* \"contracts/DTicket2_flattened.sol\":38680:38873  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":37151:37876  function _doSafeTransferAcceptanceCheck(... */\n    tag_284:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":37358:37371  to.isContract */\n      dup5\n      and\n        /* \"contracts/DTicket2_flattened.sol\":5198:5217  account.code.length */\n      extcodesize\n        /* \"contracts/DTicket2_flattened.sol\":5198:5221  account.code.length > 0 */\n      iszero\n        /* \"contracts/DTicket2_flattened.sol\":37354:37870  if (to.isContract()) {... */\n      tag_248\n      jumpi\n        /* \"contracts/DTicket2_flattened.sol\":37393:37465  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":37393:37431  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":37393:37465  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_350\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":37432:37440  operator */\n      dup10\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":37442:37446  from */\n      dup10\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":37448:37450  id */\n      dup9\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":37452:37458  amount */\n      dup9\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":37460:37464  data */\n      dup9\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":37393:37465  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_351\n      jump\t// in\n    tag_350:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_352\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_353\n      swap2\n      dup2\n      add\n      swap1\n      tag_324\n      jump\t// in\n    tag_353:\n      0x01\n    tag_352:\n        /* \"contracts/DTicket2_flattened.sol\":37389:37860  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_354\n      jumpi\n      tag_329\n      tag_330\n      jump\t// in\n    tag_354:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTicket2_flattened.sol\":37514:37569  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"contracts/DTicket2_flattened.sol\":37510:37662  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_283\n      jumpi\n        /* \"contracts/DTicket2_flattened.sol\":37593:37643  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_340\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_367:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_378:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_23:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_380:\n        /* \"#utility.yul\":360:389   */\n      tag_381\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_367\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_368:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":769:1014   */\n    tag_29:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_386:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_387\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_368\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1391   */\n    tag_35:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_390:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1819   */\n    tag_369:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_392:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_392)\n    tag_394:\n        /* \"#utility.yul\":1542:1545   */\n      pop\n        /* \"#utility.yul\":1745:1746   */\n      0x00\n        /* \"#utility.yul\":1738:1742   */\n      0x20\n        /* \"#utility.yul\":1729:1735   */\n      dup3\n        /* \"#utility.yul\":1724:1727   */\n      dup7\n        /* \"#utility.yul\":1720:1736   */\n      add\n        /* \"#utility.yul\":1716:1743   */\n      add\n        /* \"#utility.yul\":1709:1747   */\n      mstore\n        /* \"#utility.yul\":1808:1812   */\n      0x20\n        /* \"#utility.yul\":1801:1803   */\n      0x1f\n        /* \"#utility.yul\":1797:1804   */\n      not\n        /* \"#utility.yul\":1792:1794   */\n      0x1f\n        /* \"#utility.yul\":1784:1790   */\n      dup4\n        /* \"#utility.yul\":1780:1795   */\n      add\n        /* \"#utility.yul\":1776:1805   */\n      and\n        /* \"#utility.yul\":1771:1774   */\n      dup6\n        /* \"#utility.yul\":1767:1806   */\n      add\n        /* \"#utility.yul\":1763:1813   */\n      add\n        /* \"#utility.yul\":1756:1813   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1396:1819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1824:2044   */\n    tag_38:\n        /* \"#utility.yul\":1973:1975   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup2\n        /* \"#utility.yul\":1955:1976   */\n      mstore\n        /* \"#utility.yul\":1936:1940   */\n      0x00\n        /* \"#utility.yul\":1993:2038   */\n      tag_387\n        /* \"#utility.yul\":2034:2036   */\n      0x20\n        /* \"#utility.yul\":2023:2032   */\n      dup4\n        /* \"#utility.yul\":2019:2037   */\n      add\n        /* \"#utility.yul\":2011:2017   */\n      dup5\n        /* \"#utility.yul\":1993:2038   */\n      tag_369\n      jump\t// in\n        /* \"#utility.yul\":2049:2176   */\n    tag_127:\n        /* \"#utility.yul\":2110:2120   */\n      0x4e487b71\n        /* \"#utility.yul\":2105:2108   */\n      0xe0\n        /* \"#utility.yul\":2101:2121   */\n      shl\n        /* \"#utility.yul\":2098:2099   */\n      0x00\n        /* \"#utility.yul\":2091:2122   */\n      mstore\n        /* \"#utility.yul\":2141:2145   */\n      0x41\n        /* \"#utility.yul\":2138:2139   */\n      0x04\n        /* \"#utility.yul\":2131:2146   */\n      mstore\n        /* \"#utility.yul\":2165:2169   */\n      0x24\n        /* \"#utility.yul\":2162:2163   */\n      0x00\n        /* \"#utility.yul\":2155:2170   */\n      revert\n        /* \"#utility.yul\":2181:2430   */\n    tag_370:\n        /* \"#utility.yul\":2291:2293   */\n      0x1f\n        /* \"#utility.yul\":2272:2285   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2268:2295   */\n      and\n        /* \"#utility.yul\":2256:2296   */\n      dup2\n      add\n        /* \"#utility.yul\":2326:2344   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2311:2345   */\n      dup2\n      gt\n        /* \"#utility.yul\":2347:2369   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2308:2370   */\n      or\n        /* \"#utility.yul\":2305:2393   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":2373:2391   */\n      tag_400\n      tag_127\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":2409:2411   */\n      0x40\n        /* \"#utility.yul\":2402:2424   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2181:2430   */\n      jump\t// out\n        /* \"#utility.yul\":2435:2618   */\n    tag_371:\n        /* \"#utility.yul\":2495:2499   */\n      0x00\n        /* \"#utility.yul\":2528:2546   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2520:2526   */\n      dup3\n        /* \"#utility.yul\":2517:2547   */\n      gt\n        /* \"#utility.yul\":2514:2570   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":2550:2568   */\n      tag_403\n      tag_127\n      jump\t// in\n    tag_403:\n      pop\n        /* \"#utility.yul\":2595:2596   */\n      0x05\n        /* \"#utility.yul\":2591:2605   */\n      shl\n        /* \"#utility.yul\":2607:2611   */\n      0x20\n        /* \"#utility.yul\":2587:2612   */\n      add\n      swap1\n        /* \"#utility.yul\":2435:2618   */\n      jump\t// out\n        /* \"#utility.yul\":2623:3347   */\n    tag_372:\n        /* \"#utility.yul\":2677:2682   */\n      0x00\n        /* \"#utility.yul\":2730:2733   */\n      dup3\n        /* \"#utility.yul\":2723:2727   */\n      0x1f\n        /* \"#utility.yul\":2715:2721   */\n      dup4\n        /* \"#utility.yul\":2711:2728   */\n      add\n        /* \"#utility.yul\":2707:2734   */\n      slt\n        /* \"#utility.yul\":2697:2752   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":2748:2749   */\n      0x00\n        /* \"#utility.yul\":2745:2746   */\n      dup1\n        /* \"#utility.yul\":2738:2750   */\n      revert\n        /* \"#utility.yul\":2697:2752   */\n    tag_405:\n        /* \"#utility.yul\":2784:2790   */\n      dup2\n        /* \"#utility.yul\":2771:2791   */\n      calldataload\n        /* \"#utility.yul\":2810:2814   */\n      0x20\n        /* \"#utility.yul\":2833:2876   */\n      tag_406\n        /* \"#utility.yul\":2873:2875   */\n      dup3\n        /* \"#utility.yul\":2833:2876   */\n      tag_371\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":2905:2907   */\n      0x40\n        /* \"#utility.yul\":2899:2908   */\n      mload\n        /* \"#utility.yul\":2917:2948   */\n      tag_407\n        /* \"#utility.yul\":2945:2947   */\n      dup3\n        /* \"#utility.yul\":2937:2943   */\n      dup3\n        /* \"#utility.yul\":2917:2948   */\n      tag_370\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":2983:3001   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3075:3076   */\n      0x05\n        /* \"#utility.yul\":3071:3081   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3059:3082   */\n      dup6\n      add\n        /* \"#utility.yul\":3055:3087   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3017:3032   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3099:3114   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3096:3131   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":3127:3128   */\n      0x00\n        /* \"#utility.yul\":3124:3125   */\n      dup1\n        /* \"#utility.yul\":3117:3129   */\n      revert\n        /* \"#utility.yul\":3096:3131   */\n    tag_408:\n        /* \"#utility.yul\":3163:3165   */\n      dup3\n        /* \"#utility.yul\":3155:3161   */\n      dup7\n        /* \"#utility.yul\":3151:3166   */\n      add\n        /* \"#utility.yul\":3175:3317   */\n    tag_409:\n        /* \"#utility.yul\":3191:3197   */\n      dup5\n        /* \"#utility.yul\":3186:3189   */\n      dup2\n        /* \"#utility.yul\":3183:3198   */\n      lt\n        /* \"#utility.yul\":3175:3317   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":3257:3274   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3245:3275   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3295:3307   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3208:3220   */\n      dup4\n      add\n        /* \"#utility.yul\":3175:3317   */\n      jump(tag_409)\n    tag_411:\n      pop\n        /* \"#utility.yul\":3335:3341   */\n      swap7\n        /* \"#utility.yul\":2623:3347   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3352:3907   */\n    tag_373:\n        /* \"#utility.yul\":3394:3399   */\n      0x00\n        /* \"#utility.yul\":3447:3450   */\n      dup3\n        /* \"#utility.yul\":3440:3444   */\n      0x1f\n        /* \"#utility.yul\":3432:3438   */\n      dup4\n        /* \"#utility.yul\":3428:3445   */\n      add\n        /* \"#utility.yul\":3424:3451   */\n      slt\n        /* \"#utility.yul\":3414:3469   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":3465:3466   */\n      0x00\n        /* \"#utility.yul\":3462:3463   */\n      dup1\n        /* \"#utility.yul\":3455:3467   */\n      revert\n        /* \"#utility.yul\":3414:3469   */\n    tag_413:\n        /* \"#utility.yul\":3501:3507   */\n      dup2\n        /* \"#utility.yul\":3488:3508   */\n      calldataload\n        /* \"#utility.yul\":3527:3545   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3523:3525   */\n      dup2\n        /* \"#utility.yul\":3520:3546   */\n      gt\n        /* \"#utility.yul\":3517:3569   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":3549:3567   */\n      tag_415\n      tag_127\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":3598:3600   */\n      0x40\n        /* \"#utility.yul\":3592:3601   */\n      mload\n        /* \"#utility.yul\":3610:3677   */\n      tag_416\n        /* \"#utility.yul\":3665:3667   */\n      0x1f\n        /* \"#utility.yul\":3646:3659   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3642:3669   */\n      and\n        /* \"#utility.yul\":3671:3675   */\n      0x20\n        /* \"#utility.yul\":3638:3676   */\n      add\n        /* \"#utility.yul\":3592:3601   */\n      dup3\n        /* \"#utility.yul\":3610:3677   */\n      tag_370\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":3701:3703   */\n      dup2\n        /* \"#utility.yul\":3693:3699   */\n      dup2\n        /* \"#utility.yul\":3686:3704   */\n      mstore\n        /* \"#utility.yul\":3747:3750   */\n      dup5\n        /* \"#utility.yul\":3740:3744   */\n      0x20\n        /* \"#utility.yul\":3735:3737   */\n      dup4\n        /* \"#utility.yul\":3727:3733   */\n      dup7\n        /* \"#utility.yul\":3723:3738   */\n      add\n        /* \"#utility.yul\":3719:3745   */\n      add\n        /* \"#utility.yul\":3716:3751   */\n      gt\n        /* \"#utility.yul\":3713:3768   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":3764:3765   */\n      0x00\n        /* \"#utility.yul\":3761:3762   */\n      dup1\n        /* \"#utility.yul\":3754:3766   */\n      revert\n        /* \"#utility.yul\":3713:3768   */\n    tag_417:\n        /* \"#utility.yul\":3828:3830   */\n      dup2\n        /* \"#utility.yul\":3821:3825   */\n      0x20\n        /* \"#utility.yul\":3813:3819   */\n      dup6\n        /* \"#utility.yul\":3809:3826   */\n      add\n        /* \"#utility.yul\":3802:3806   */\n      0x20\n        /* \"#utility.yul\":3794:3800   */\n      dup4\n        /* \"#utility.yul\":3790:3807   */\n      add\n        /* \"#utility.yul\":3777:3831   */\n      calldatacopy\n        /* \"#utility.yul\":3875:3876   */\n      0x00\n        /* \"#utility.yul\":3851:3866   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3868:3872   */\n      0x20\n        /* \"#utility.yul\":3847:3873   */\n      add\n        /* \"#utility.yul\":3840:3877   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3855:3861   */\n      swap4\n        /* \"#utility.yul\":3352:3907   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3912:4780   */\n    tag_41:\n        /* \"#utility.yul\":4057:4063   */\n      0x00\n        /* \"#utility.yul\":4065:4071   */\n      dup1\n        /* \"#utility.yul\":4073:4079   */\n      0x00\n        /* \"#utility.yul\":4081:4087   */\n      dup1\n        /* \"#utility.yul\":4134:4137   */\n      0x80\n        /* \"#utility.yul\":4122:4131   */\n      dup6\n        /* \"#utility.yul\":4113:4120   */\n      dup8\n        /* \"#utility.yul\":4109:4132   */\n      sub\n        /* \"#utility.yul\":4105:4138   */\n      slt\n        /* \"#utility.yul\":4102:4155   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":4151:4152   */\n      0x00\n        /* \"#utility.yul\":4148:4149   */\n      dup1\n        /* \"#utility.yul\":4141:4153   */\n      revert\n        /* \"#utility.yul\":4102:4155   */\n    tag_419:\n        /* \"#utility.yul\":4174:4203   */\n      tag_420\n        /* \"#utility.yul\":4193:4202   */\n      dup6\n        /* \"#utility.yul\":4174:4203   */\n      tag_367\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":4164:4203   */\n      swap4\n      pop\n        /* \"#utility.yul\":4254:4256   */\n      0x20\n        /* \"#utility.yul\":4243:4252   */\n      dup6\n        /* \"#utility.yul\":4239:4257   */\n      add\n        /* \"#utility.yul\":4226:4258   */\n      calldataload\n        /* \"#utility.yul\":4277:4295   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4318:4320   */\n      dup1\n        /* \"#utility.yul\":4310:4316   */\n      dup3\n        /* \"#utility.yul\":4307:4321   */\n      gt\n        /* \"#utility.yul\":4304:4338   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":4334:4335   */\n      0x00\n        /* \"#utility.yul\":4331:4332   */\n      dup1\n        /* \"#utility.yul\":4324:4336   */\n      revert\n        /* \"#utility.yul\":4304:4338   */\n    tag_421:\n        /* \"#utility.yul\":4357:4418   */\n      tag_422\n        /* \"#utility.yul\":4410:4417   */\n      dup9\n        /* \"#utility.yul\":4401:4407   */\n      dup4\n        /* \"#utility.yul\":4390:4399   */\n      dup10\n        /* \"#utility.yul\":4386:4408   */\n      add\n        /* \"#utility.yul\":4357:4418   */\n      tag_372\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":4347:4418   */\n      swap5\n      pop\n        /* \"#utility.yul\":4471:4473   */\n      0x40\n        /* \"#utility.yul\":4460:4469   */\n      dup8\n        /* \"#utility.yul\":4456:4474   */\n      add\n        /* \"#utility.yul\":4443:4475   */\n      calldataload\n        /* \"#utility.yul\":4427:4475   */\n      swap2\n      pop\n        /* \"#utility.yul\":4500:4502   */\n      dup1\n        /* \"#utility.yul\":4490:4498   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      gt\n        /* \"#utility.yul\":4484:4520   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":4516:4517   */\n      0x00\n        /* \"#utility.yul\":4513:4514   */\n      dup1\n        /* \"#utility.yul\":4506:4518   */\n      revert\n        /* \"#utility.yul\":4484:4520   */\n    tag_423:\n        /* \"#utility.yul\":4539:4602   */\n      tag_424\n        /* \"#utility.yul\":4594:4601   */\n      dup9\n        /* \"#utility.yul\":4583:4591   */\n      dup4\n        /* \"#utility.yul\":4572:4581   */\n      dup10\n        /* \"#utility.yul\":4568:4592   */\n      add\n        /* \"#utility.yul\":4539:4602   */\n      tag_372\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":4529:4602   */\n      swap4\n      pop\n        /* \"#utility.yul\":4655:4657   */\n      0x60\n        /* \"#utility.yul\":4644:4653   */\n      dup8\n        /* \"#utility.yul\":4640:4658   */\n      add\n        /* \"#utility.yul\":4627:4659   */\n      calldataload\n        /* \"#utility.yul\":4611:4659   */\n      swap2\n      pop\n        /* \"#utility.yul\":4684:4686   */\n      dup1\n        /* \"#utility.yul\":4674:4682   */\n      dup3\n        /* \"#utility.yul\":4671:4687   */\n      gt\n        /* \"#utility.yul\":4668:4704   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":4700:4701   */\n      0x00\n        /* \"#utility.yul\":4697:4698   */\n      dup1\n        /* \"#utility.yul\":4690:4702   */\n      revert\n        /* \"#utility.yul\":4668:4704   */\n    tag_425:\n      pop\n        /* \"#utility.yul\":4723:4774   */\n      tag_426\n        /* \"#utility.yul\":4766:4773   */\n      dup8\n        /* \"#utility.yul\":4755:4763   */\n      dup3\n        /* \"#utility.yul\":4744:4753   */\n      dup9\n        /* \"#utility.yul\":4740:4764   */\n      add\n        /* \"#utility.yul\":4723:4774   */\n      tag_373\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":4713:4774   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3912:4780   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4785:5728   */\n    tag_45:\n        /* \"#utility.yul\":4939:4945   */\n      0x00\n        /* \"#utility.yul\":4947:4953   */\n      dup1\n        /* \"#utility.yul\":4955:4961   */\n      0x00\n        /* \"#utility.yul\":4963:4969   */\n      dup1\n        /* \"#utility.yul\":4971:4977   */\n      0x00\n        /* \"#utility.yul\":5024:5027   */\n      0xa0\n        /* \"#utility.yul\":5012:5021   */\n      dup7\n        /* \"#utility.yul\":5003:5010   */\n      dup9\n        /* \"#utility.yul\":4999:5022   */\n      sub\n        /* \"#utility.yul\":4995:5028   */\n      slt\n        /* \"#utility.yul\":4992:5045   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":5041:5042   */\n      0x00\n        /* \"#utility.yul\":5038:5039   */\n      dup1\n        /* \"#utility.yul\":5031:5043   */\n      revert\n        /* \"#utility.yul\":4992:5045   */\n    tag_428:\n        /* \"#utility.yul\":5064:5093   */\n      tag_429\n        /* \"#utility.yul\":5083:5092   */\n      dup7\n        /* \"#utility.yul\":5064:5093   */\n      tag_367\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":5054:5093   */\n      swap5\n      pop\n        /* \"#utility.yul\":5112:5150   */\n      tag_430\n        /* \"#utility.yul\":5146:5148   */\n      0x20\n        /* \"#utility.yul\":5135:5144   */\n      dup8\n        /* \"#utility.yul\":5131:5149   */\n      add\n        /* \"#utility.yul\":5112:5150   */\n      tag_367\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":5102:5150   */\n      swap4\n      pop\n        /* \"#utility.yul\":5201:5203   */\n      0x40\n        /* \"#utility.yul\":5190:5199   */\n      dup7\n        /* \"#utility.yul\":5186:5204   */\n      add\n        /* \"#utility.yul\":5173:5205   */\n      calldataload\n        /* \"#utility.yul\":5224:5242   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5265:5267   */\n      dup1\n        /* \"#utility.yul\":5257:5263   */\n      dup3\n        /* \"#utility.yul\":5254:5268   */\n      gt\n        /* \"#utility.yul\":5251:5285   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":5281:5282   */\n      0x00\n        /* \"#utility.yul\":5278:5279   */\n      dup1\n        /* \"#utility.yul\":5271:5283   */\n      revert\n        /* \"#utility.yul\":5251:5285   */\n    tag_431:\n        /* \"#utility.yul\":5304:5365   */\n      tag_432\n        /* \"#utility.yul\":5357:5364   */\n      dup10\n        /* \"#utility.yul\":5348:5354   */\n      dup4\n        /* \"#utility.yul\":5337:5346   */\n      dup11\n        /* \"#utility.yul\":5333:5355   */\n      add\n        /* \"#utility.yul\":5304:5365   */\n      tag_372\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":5294:5365   */\n      swap5\n      pop\n        /* \"#utility.yul\":5418:5420   */\n      0x60\n        /* \"#utility.yul\":5407:5416   */\n      dup9\n        /* \"#utility.yul\":5403:5421   */\n      add\n        /* \"#utility.yul\":5390:5422   */\n      calldataload\n        /* \"#utility.yul\":5374:5422   */\n      swap2\n      pop\n        /* \"#utility.yul\":5447:5449   */\n      dup1\n        /* \"#utility.yul\":5437:5445   */\n      dup3\n        /* \"#utility.yul\":5434:5450   */\n      gt\n        /* \"#utility.yul\":5431:5467   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":5463:5464   */\n      0x00\n        /* \"#utility.yul\":5460:5461   */\n      dup1\n        /* \"#utility.yul\":5453:5465   */\n      revert\n        /* \"#utility.yul\":5431:5467   */\n    tag_433:\n        /* \"#utility.yul\":5486:5549   */\n      tag_434\n        /* \"#utility.yul\":5541:5548   */\n      dup10\n        /* \"#utility.yul\":5530:5538   */\n      dup4\n        /* \"#utility.yul\":5519:5528   */\n      dup11\n        /* \"#utility.yul\":5515:5539   */\n      add\n        /* \"#utility.yul\":5486:5549   */\n      tag_372\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":5476:5549   */\n      swap4\n      pop\n        /* \"#utility.yul\":5602:5605   */\n      0x80\n        /* \"#utility.yul\":5591:5600   */\n      dup9\n        /* \"#utility.yul\":5587:5606   */\n      add\n        /* \"#utility.yul\":5574:5607   */\n      calldataload\n        /* \"#utility.yul\":5558:5607   */\n      swap2\n      pop\n        /* \"#utility.yul\":5632:5634   */\n      dup1\n        /* \"#utility.yul\":5622:5630   */\n      dup3\n        /* \"#utility.yul\":5619:5635   */\n      gt\n        /* \"#utility.yul\":5616:5652   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":5648:5649   */\n      0x00\n        /* \"#utility.yul\":5645:5646   */\n      dup1\n        /* \"#utility.yul\":5638:5650   */\n      revert\n        /* \"#utility.yul\":5616:5652   */\n    tag_435:\n      pop\n        /* \"#utility.yul\":5671:5722   */\n      tag_436\n        /* \"#utility.yul\":5714:5721   */\n      dup9\n        /* \"#utility.yul\":5703:5711   */\n      dup3\n        /* \"#utility.yul\":5692:5701   */\n      dup10\n        /* \"#utility.yul\":5688:5712   */\n      add\n        /* \"#utility.yul\":5671:5722   */\n      tag_373\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":5661:5722   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4785:5728   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5733:6941   */\n    tag_49:\n        /* \"#utility.yul\":5851:5857   */\n      0x00\n        /* \"#utility.yul\":5859:5865   */\n      dup1\n        /* \"#utility.yul\":5912:5914   */\n      0x40\n        /* \"#utility.yul\":5900:5909   */\n      dup4\n        /* \"#utility.yul\":5891:5898   */\n      dup6\n        /* \"#utility.yul\":5887:5910   */\n      sub\n        /* \"#utility.yul\":5883:5915   */\n      slt\n        /* \"#utility.yul\":5880:5932   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":5928:5929   */\n      0x00\n        /* \"#utility.yul\":5925:5926   */\n      dup1\n        /* \"#utility.yul\":5918:5930   */\n      revert\n        /* \"#utility.yul\":5880:5932   */\n    tag_438:\n        /* \"#utility.yul\":5968:5977   */\n      dup3\n        /* \"#utility.yul\":5955:5978   */\n      calldataload\n        /* \"#utility.yul\":5997:6015   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6038:6040   */\n      dup1\n        /* \"#utility.yul\":6030:6036   */\n      dup3\n        /* \"#utility.yul\":6027:6041   */\n      gt\n        /* \"#utility.yul\":6024:6058   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":6054:6055   */\n      0x00\n        /* \"#utility.yul\":6051:6052   */\n      dup1\n        /* \"#utility.yul\":6044:6056   */\n      revert\n        /* \"#utility.yul\":6024:6058   */\n    tag_439:\n        /* \"#utility.yul\":6092:6098   */\n      dup2\n        /* \"#utility.yul\":6081:6090   */\n      dup6\n        /* \"#utility.yul\":6077:6099   */\n      add\n        /* \"#utility.yul\":6067:6099   */\n      swap2\n      pop\n        /* \"#utility.yul\":6137:6144   */\n      dup6\n        /* \"#utility.yul\":6130:6134   */\n      0x1f\n        /* \"#utility.yul\":6126:6128   */\n      dup4\n        /* \"#utility.yul\":6122:6135   */\n      add\n        /* \"#utility.yul\":6118:6145   */\n      slt\n        /* \"#utility.yul\":6108:6163   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":6159:6160   */\n      0x00\n        /* \"#utility.yul\":6156:6157   */\n      dup1\n        /* \"#utility.yul\":6149:6161   */\n      revert\n        /* \"#utility.yul\":6108:6163   */\n    tag_440:\n        /* \"#utility.yul\":6195:6197   */\n      dup2\n        /* \"#utility.yul\":6182:6198   */\n      calldataload\n        /* \"#utility.yul\":6217:6221   */\n      0x20\n        /* \"#utility.yul\":6240:6283   */\n      tag_441\n        /* \"#utility.yul\":6280:6282   */\n      dup3\n        /* \"#utility.yul\":6240:6283   */\n      tag_371\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":6312:6314   */\n      0x40\n        /* \"#utility.yul\":6306:6315   */\n      mload\n        /* \"#utility.yul\":6324:6355   */\n      tag_442\n        /* \"#utility.yul\":6352:6354   */\n      dup3\n        /* \"#utility.yul\":6344:6350   */\n      dup3\n        /* \"#utility.yul\":6324:6355   */\n      tag_370\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":6390:6408   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":6478:6479   */\n      0x05\n        /* \"#utility.yul\":6474:6484   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":6466:6485   */\n      dup6\n      add\n        /* \"#utility.yul\":6462:6490   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":6424:6439   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":6502:6521   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":6499:6538   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":6534:6535   */\n      0x00\n        /* \"#utility.yul\":6531:6532   */\n      dup1\n        /* \"#utility.yul\":6524:6536   */\n      revert\n        /* \"#utility.yul\":6499:6538   */\n    tag_443:\n        /* \"#utility.yul\":6558:6569   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6578:6726   */\n    tag_444:\n        /* \"#utility.yul\":6594:6600   */\n      dup4\n        /* \"#utility.yul\":6589:6592   */\n      dup7\n        /* \"#utility.yul\":6586:6601   */\n      lt\n        /* \"#utility.yul\":6578:6726   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":6660:6683   */\n      tag_447\n        /* \"#utility.yul\":6679:6682   */\n      dup7\n        /* \"#utility.yul\":6660:6683   */\n      tag_367\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":6648:6684   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6611:6623   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6704:6716   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6578:6726   */\n      jump(tag_444)\n    tag_446:\n        /* \"#utility.yul\":6745:6751   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":6789:6807   */\n      dup7\n      add\n        /* \"#utility.yul\":6776:6808   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":6820:6836   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6817:6853   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":6849:6850   */\n      0x00\n        /* \"#utility.yul\":6846:6847   */\n      dup1\n        /* \"#utility.yul\":6839:6851   */\n      revert\n        /* \"#utility.yul\":6817:6853   */\n    tag_448:\n      pop\n        /* \"#utility.yul\":6872:6935   */\n      tag_449\n        /* \"#utility.yul\":6927:6934   */\n      dup6\n        /* \"#utility.yul\":6916:6924   */\n      dup3\n        /* \"#utility.yul\":6905:6914   */\n      dup7\n        /* \"#utility.yul\":6901:6925   */\n      add\n        /* \"#utility.yul\":6872:6935   */\n      tag_372\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":6862:6935   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5733:6941   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6946:7381   */\n    tag_374:\n        /* \"#utility.yul\":6999:7002   */\n      0x00\n        /* \"#utility.yul\":7037:7042   */\n      dup2\n        /* \"#utility.yul\":7031:7043   */\n      mload\n        /* \"#utility.yul\":7064:7070   */\n      dup1\n        /* \"#utility.yul\":7059:7062   */\n      dup5\n        /* \"#utility.yul\":7052:7071   */\n      mstore\n        /* \"#utility.yul\":7090:7094   */\n      0x20\n        /* \"#utility.yul\":7119:7121   */\n      dup1\n        /* \"#utility.yul\":7114:7117   */\n      dup6\n        /* \"#utility.yul\":7110:7122   */\n      add\n        /* \"#utility.yul\":7103:7122   */\n      swap5\n      pop\n        /* \"#utility.yul\":7156:7158   */\n      dup1\n        /* \"#utility.yul\":7149:7154   */\n      dup5\n        /* \"#utility.yul\":7145:7159   */\n      add\n        /* \"#utility.yul\":7177:7178   */\n      0x00\n        /* \"#utility.yul\":7187:7356   */\n    tag_451:\n        /* \"#utility.yul\":7201:7207   */\n      dup4\n        /* \"#utility.yul\":7198:7199   */\n      dup2\n        /* \"#utility.yul\":7195:7208   */\n      lt\n        /* \"#utility.yul\":7187:7356   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":7262:7275   */\n      dup2\n      mload\n        /* \"#utility.yul\":7250:7276   */\n      dup8\n      mstore\n        /* \"#utility.yul\":7296:7308   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":7331:7346   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":7223:7224   */\n      0x01\n        /* \"#utility.yul\":7216:7225   */\n      add\n        /* \"#utility.yul\":7187:7356   */\n      jump(tag_451)\n    tag_453:\n      pop\n        /* \"#utility.yul\":7372:7375   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6946:7381   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7386:7647   */\n    tag_52:\n        /* \"#utility.yul\":7565:7567   */\n      0x20\n        /* \"#utility.yul\":7554:7563   */\n      dup2\n        /* \"#utility.yul\":7547:7568   */\n      mstore\n        /* \"#utility.yul\":7528:7532   */\n      0x00\n        /* \"#utility.yul\":7585:7641   */\n      tag_387\n        /* \"#utility.yul\":7637:7639   */\n      0x20\n        /* \"#utility.yul\":7626:7635   */\n      dup4\n        /* \"#utility.yul\":7622:7640   */\n      add\n        /* \"#utility.yul\":7614:7620   */\n      dup5\n        /* \"#utility.yul\":7585:7641   */\n      tag_374\n      jump\t// in\n        /* \"#utility.yul\":7652:8321   */\n    tag_55:\n        /* \"#utility.yul\":7779:7785   */\n      0x00\n        /* \"#utility.yul\":7787:7793   */\n      dup1\n        /* \"#utility.yul\":7795:7801   */\n      0x00\n        /* \"#utility.yul\":7848:7850   */\n      0x60\n        /* \"#utility.yul\":7836:7845   */\n      dup5\n        /* \"#utility.yul\":7827:7834   */\n      dup7\n        /* \"#utility.yul\":7823:7846   */\n      sub\n        /* \"#utility.yul\":7819:7851   */\n      slt\n        /* \"#utility.yul\":7816:7868   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":7864:7865   */\n      0x00\n        /* \"#utility.yul\":7861:7862   */\n      dup1\n        /* \"#utility.yul\":7854:7866   */\n      revert\n        /* \"#utility.yul\":7816:7868   */\n    tag_457:\n        /* \"#utility.yul\":7887:7916   */\n      tag_458\n        /* \"#utility.yul\":7906:7915   */\n      dup5\n        /* \"#utility.yul\":7887:7916   */\n      tag_367\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":7877:7916   */\n      swap3\n      pop\n        /* \"#utility.yul\":7967:7969   */\n      0x20\n        /* \"#utility.yul\":7956:7965   */\n      dup5\n        /* \"#utility.yul\":7952:7970   */\n      add\n        /* \"#utility.yul\":7939:7971   */\n      calldataload\n        /* \"#utility.yul\":7990:8008   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8031:8033   */\n      dup1\n        /* \"#utility.yul\":8023:8029   */\n      dup3\n        /* \"#utility.yul\":8020:8034   */\n      gt\n        /* \"#utility.yul\":8017:8051   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":8047:8048   */\n      0x00\n        /* \"#utility.yul\":8044:8045   */\n      dup1\n        /* \"#utility.yul\":8037:8049   */\n      revert\n        /* \"#utility.yul\":8017:8051   */\n    tag_459:\n        /* \"#utility.yul\":8070:8131   */\n      tag_460\n        /* \"#utility.yul\":8123:8130   */\n      dup8\n        /* \"#utility.yul\":8114:8120   */\n      dup4\n        /* \"#utility.yul\":8103:8112   */\n      dup9\n        /* \"#utility.yul\":8099:8121   */\n      add\n        /* \"#utility.yul\":8070:8131   */\n      tag_372\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":8060:8131   */\n      swap4\n      pop\n        /* \"#utility.yul\":8184:8186   */\n      0x40\n        /* \"#utility.yul\":8173:8182   */\n      dup7\n        /* \"#utility.yul\":8169:8187   */\n      add\n        /* \"#utility.yul\":8156:8188   */\n      calldataload\n        /* \"#utility.yul\":8140:8188   */\n      swap2\n      pop\n        /* \"#utility.yul\":8213:8215   */\n      dup1\n        /* \"#utility.yul\":8203:8211   */\n      dup3\n        /* \"#utility.yul\":8200:8216   */\n      gt\n        /* \"#utility.yul\":8197:8233   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":8229:8230   */\n      0x00\n        /* \"#utility.yul\":8226:8227   */\n      dup1\n        /* \"#utility.yul\":8219:8231   */\n      revert\n        /* \"#utility.yul\":8197:8233   */\n    tag_461:\n      pop\n        /* \"#utility.yul\":8252:8315   */\n      tag_462\n        /* \"#utility.yul\":8307:8314   */\n      dup7\n        /* \"#utility.yul\":8296:8304   */\n      dup3\n        /* \"#utility.yul\":8285:8294   */\n      dup8\n        /* \"#utility.yul\":8281:8305   */\n      add\n        /* \"#utility.yul\":8252:8315   */\n      tag_372\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":8242:8315   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7652:8321   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8326:8857   */\n    tag_61:\n        /* \"#utility.yul\":8421:8427   */\n      0x00\n        /* \"#utility.yul\":8429:8435   */\n      dup1\n        /* \"#utility.yul\":8437:8443   */\n      0x00\n        /* \"#utility.yul\":8445:8451   */\n      dup1\n        /* \"#utility.yul\":8498:8501   */\n      0x80\n        /* \"#utility.yul\":8486:8495   */\n      dup6\n        /* \"#utility.yul\":8477:8484   */\n      dup8\n        /* \"#utility.yul\":8473:8496   */\n      sub\n        /* \"#utility.yul\":8469:8502   */\n      slt\n        /* \"#utility.yul\":8466:8519   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":8515:8516   */\n      0x00\n        /* \"#utility.yul\":8512:8513   */\n      dup1\n        /* \"#utility.yul\":8505:8517   */\n      revert\n        /* \"#utility.yul\":8466:8519   */\n    tag_464:\n        /* \"#utility.yul\":8538:8567   */\n      tag_465\n        /* \"#utility.yul\":8557:8566   */\n      dup6\n        /* \"#utility.yul\":8538:8567   */\n      tag_367\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":8528:8567   */\n      swap4\n      pop\n        /* \"#utility.yul\":8614:8616   */\n      0x20\n        /* \"#utility.yul\":8603:8612   */\n      dup6\n        /* \"#utility.yul\":8599:8617   */\n      add\n        /* \"#utility.yul\":8586:8618   */\n      calldataload\n        /* \"#utility.yul\":8576:8618   */\n      swap3\n      pop\n        /* \"#utility.yul\":8665:8667   */\n      0x40\n        /* \"#utility.yul\":8654:8663   */\n      dup6\n        /* \"#utility.yul\":8650:8668   */\n      add\n        /* \"#utility.yul\":8637:8669   */\n      calldataload\n        /* \"#utility.yul\":8627:8669   */\n      swap2\n      pop\n        /* \"#utility.yul\":8720:8722   */\n      0x60\n        /* \"#utility.yul\":8709:8718   */\n      dup6\n        /* \"#utility.yul\":8705:8723   */\n      add\n        /* \"#utility.yul\":8692:8724   */\n      calldataload\n        /* \"#utility.yul\":8747:8765   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8739:8745   */\n      dup2\n        /* \"#utility.yul\":8736:8766   */\n      gt\n        /* \"#utility.yul\":8733:8783   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":8779:8780   */\n      0x00\n        /* \"#utility.yul\":8776:8777   */\n      dup1\n        /* \"#utility.yul\":8769:8781   */\n      revert\n        /* \"#utility.yul\":8733:8783   */\n    tag_466:\n        /* \"#utility.yul\":8802:8851   */\n      tag_426\n        /* \"#utility.yul\":8843:8850   */\n      dup8\n        /* \"#utility.yul\":8834:8840   */\n      dup3\n        /* \"#utility.yul\":8823:8832   */\n      dup9\n        /* \"#utility.yul\":8819:8841   */\n      add\n        /* \"#utility.yul\":8802:8851   */\n      tag_373\n      jump\t// in\n        /* \"#utility.yul\":9070:9417   */\n    tag_69:\n        /* \"#utility.yul\":9135:9141   */\n      0x00\n        /* \"#utility.yul\":9143:9149   */\n      dup1\n        /* \"#utility.yul\":9196:9198   */\n      0x40\n        /* \"#utility.yul\":9184:9193   */\n      dup4\n        /* \"#utility.yul\":9175:9182   */\n      dup6\n        /* \"#utility.yul\":9171:9194   */\n      sub\n        /* \"#utility.yul\":9167:9199   */\n      slt\n        /* \"#utility.yul\":9164:9216   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":9212:9213   */\n      0x00\n        /* \"#utility.yul\":9209:9210   */\n      dup1\n        /* \"#utility.yul\":9202:9214   */\n      revert\n        /* \"#utility.yul\":9164:9216   */\n    tag_470:\n        /* \"#utility.yul\":9235:9264   */\n      tag_471\n        /* \"#utility.yul\":9254:9263   */\n      dup4\n        /* \"#utility.yul\":9235:9264   */\n      tag_367\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":9225:9264   */\n      swap2\n      pop\n        /* \"#utility.yul\":9314:9316   */\n      0x20\n        /* \"#utility.yul\":9303:9312   */\n      dup4\n        /* \"#utility.yul\":9299:9317   */\n      add\n        /* \"#utility.yul\":9286:9318   */\n      calldataload\n        /* \"#utility.yul\":9361:9366   */\n      dup1\n        /* \"#utility.yul\":9354:9367   */\n      iszero\n        /* \"#utility.yul\":9347:9368   */\n      iszero\n        /* \"#utility.yul\":9340:9345   */\n      dup2\n        /* \"#utility.yul\":9337:9369   */\n      eq\n        /* \"#utility.yul\":9327:9387   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":9383:9384   */\n      0x00\n        /* \"#utility.yul\":9380:9381   */\n      dup1\n        /* \"#utility.yul\":9373:9385   */\n      revert\n        /* \"#utility.yul\":9327:9387   */\n    tag_472:\n        /* \"#utility.yul\":9406:9411   */\n      dup1\n        /* \"#utility.yul\":9396:9411   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":9070:9417   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9422:9682   */\n    tag_73:\n        /* \"#utility.yul\":9490:9496   */\n      0x00\n        /* \"#utility.yul\":9498:9504   */\n      dup1\n        /* \"#utility.yul\":9551:9553   */\n      0x40\n        /* \"#utility.yul\":9539:9548   */\n      dup4\n        /* \"#utility.yul\":9530:9537   */\n      dup6\n        /* \"#utility.yul\":9526:9549   */\n      sub\n        /* \"#utility.yul\":9522:9554   */\n      slt\n        /* \"#utility.yul\":9519:9571   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":9567:9568   */\n      0x00\n        /* \"#utility.yul\":9564:9565   */\n      dup1\n        /* \"#utility.yul\":9557:9569   */\n      revert\n        /* \"#utility.yul\":9519:9571   */\n    tag_474:\n        /* \"#utility.yul\":9590:9619   */\n      tag_475\n        /* \"#utility.yul\":9609:9618   */\n      dup4\n        /* \"#utility.yul\":9590:9619   */\n      tag_367\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":9580:9619   */\n      swap2\n      pop\n        /* \"#utility.yul\":9638:9676   */\n      tag_476\n        /* \"#utility.yul\":9672:9674   */\n      0x20\n        /* \"#utility.yul\":9661:9670   */\n      dup5\n        /* \"#utility.yul\":9657:9675   */\n      add\n        /* \"#utility.yul\":9638:9676   */\n      tag_367\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":9628:9676   */\n      swap1\n      pop\n        /* \"#utility.yul\":9422:9682   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9687:10293   */\n    tag_78:\n        /* \"#utility.yul\":9791:9797   */\n      0x00\n        /* \"#utility.yul\":9799:9805   */\n      dup1\n        /* \"#utility.yul\":9807:9813   */\n      0x00\n        /* \"#utility.yul\":9815:9821   */\n      dup1\n        /* \"#utility.yul\":9823:9829   */\n      0x00\n        /* \"#utility.yul\":9876:9879   */\n      0xa0\n        /* \"#utility.yul\":9864:9873   */\n      dup7\n        /* \"#utility.yul\":9855:9862   */\n      dup9\n        /* \"#utility.yul\":9851:9874   */\n      sub\n        /* \"#utility.yul\":9847:9880   */\n      slt\n        /* \"#utility.yul\":9844:9897   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":9893:9894   */\n      0x00\n        /* \"#utility.yul\":9890:9891   */\n      dup1\n        /* \"#utility.yul\":9883:9895   */\n      revert\n        /* \"#utility.yul\":9844:9897   */\n    tag_478:\n        /* \"#utility.yul\":9916:9945   */\n      tag_479\n        /* \"#utility.yul\":9935:9944   */\n      dup7\n        /* \"#utility.yul\":9916:9945   */\n      tag_367\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":9906:9945   */\n      swap5\n      pop\n        /* \"#utility.yul\":9964:10002   */\n      tag_480\n        /* \"#utility.yul\":9998:10000   */\n      0x20\n        /* \"#utility.yul\":9987:9996   */\n      dup8\n        /* \"#utility.yul\":9983:10001   */\n      add\n        /* \"#utility.yul\":9964:10002   */\n      tag_367\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":9954:10002   */\n      swap4\n      pop\n        /* \"#utility.yul\":10049:10051   */\n      0x40\n        /* \"#utility.yul\":10038:10047   */\n      dup7\n        /* \"#utility.yul\":10034:10052   */\n      add\n        /* \"#utility.yul\":10021:10053   */\n      calldataload\n        /* \"#utility.yul\":10011:10053   */\n      swap3\n      pop\n        /* \"#utility.yul\":10100:10102   */\n      0x60\n        /* \"#utility.yul\":10089:10098   */\n      dup7\n        /* \"#utility.yul\":10085:10103   */\n      add\n        /* \"#utility.yul\":10072:10104   */\n      calldataload\n        /* \"#utility.yul\":10062:10104   */\n      swap2\n      pop\n        /* \"#utility.yul\":10155:10158   */\n      0x80\n        /* \"#utility.yul\":10144:10153   */\n      dup7\n        /* \"#utility.yul\":10140:10159   */\n      add\n        /* \"#utility.yul\":10127:10160   */\n      calldataload\n        /* \"#utility.yul\":10183:10201   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10175:10181   */\n      dup2\n        /* \"#utility.yul\":10172:10202   */\n      gt\n        /* \"#utility.yul\":10169:10219   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":10215:10216   */\n      0x00\n        /* \"#utility.yul\":10212:10213   */\n      dup1\n        /* \"#utility.yul\":10205:10217   */\n      revert\n        /* \"#utility.yul\":10169:10219   */\n    tag_481:\n        /* \"#utility.yul\":10238:10287   */\n      tag_436\n        /* \"#utility.yul\":10279:10286   */\n      dup9\n        /* \"#utility.yul\":10270:10276   */\n      dup3\n        /* \"#utility.yul\":10259:10268   */\n      dup10\n        /* \"#utility.yul\":10255:10277   */\n      add\n        /* \"#utility.yul\":10238:10287   */\n      tag_373\n      jump\t// in\n        /* \"#utility.yul\":10298:10484   */\n    tag_82:\n        /* \"#utility.yul\":10357:10363   */\n      0x00\n        /* \"#utility.yul\":10410:10412   */\n      0x20\n        /* \"#utility.yul\":10398:10407   */\n      dup3\n        /* \"#utility.yul\":10389:10396   */\n      dup5\n        /* \"#utility.yul\":10385:10408   */\n      sub\n        /* \"#utility.yul\":10381:10413   */\n      slt\n        /* \"#utility.yul\":10378:10430   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":10426:10427   */\n      0x00\n        /* \"#utility.yul\":10423:10424   */\n      dup1\n        /* \"#utility.yul\":10416:10428   */\n      revert\n        /* \"#utility.yul\":10378:10430   */\n    tag_484:\n        /* \"#utility.yul\":10449:10478   */\n      tag_387\n        /* \"#utility.yul\":10468:10477   */\n      dup3\n        /* \"#utility.yul\":10449:10478   */\n      tag_367\n      jump\t// in\n        /* \"#utility.yul\":10489:10811   */\n    tag_86:\n        /* \"#utility.yul\":10566:10572   */\n      0x00\n        /* \"#utility.yul\":10574:10580   */\n      dup1\n        /* \"#utility.yul\":10582:10588   */\n      0x00\n        /* \"#utility.yul\":10635:10637   */\n      0x60\n        /* \"#utility.yul\":10623:10632   */\n      dup5\n        /* \"#utility.yul\":10614:10621   */\n      dup7\n        /* \"#utility.yul\":10610:10633   */\n      sub\n        /* \"#utility.yul\":10606:10638   */\n      slt\n        /* \"#utility.yul\":10603:10655   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":10651:10652   */\n      0x00\n        /* \"#utility.yul\":10648:10649   */\n      dup1\n        /* \"#utility.yul\":10641:10653   */\n      revert\n        /* \"#utility.yul\":10603:10655   */\n    tag_487:\n        /* \"#utility.yul\":10674:10703   */\n      tag_488\n        /* \"#utility.yul\":10693:10702   */\n      dup5\n        /* \"#utility.yul\":10674:10703   */\n      tag_367\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":10664:10703   */\n      swap6\n        /* \"#utility.yul\":10750:10752   */\n      0x20\n        /* \"#utility.yul\":10735:10753   */\n      dup6\n      add\n        /* \"#utility.yul\":10722:10754   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":10801:10803   */\n      0x40\n        /* \"#utility.yul\":10786:10804   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":10773:10805   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":10489:10811   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11227:11607   */\n    tag_99:\n        /* \"#utility.yul\":11306:11307   */\n      0x01\n        /* \"#utility.yul\":11302:11314   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":11349:11361   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":11370:11431   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":11424:11428   */\n      0x7f\n        /* \"#utility.yul\":11416:11422   */\n      dup3\n        /* \"#utility.yul\":11412:11429   */\n      and\n        /* \"#utility.yul\":11402:11429   */\n      swap2\n      pop\n        /* \"#utility.yul\":11370:11431   */\n    tag_491:\n        /* \"#utility.yul\":11477:11479   */\n      0x20\n        /* \"#utility.yul\":11469:11475   */\n      dup3\n        /* \"#utility.yul\":11466:11480   */\n      lt\n        /* \"#utility.yul\":11446:11464   */\n      dup2\n        /* \"#utility.yul\":11443:11481   */\n      sub\n        /* \"#utility.yul\":11440:11601   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":11523:11533   */\n      0x4e487b71\n        /* \"#utility.yul\":11518:11521   */\n      0xe0\n        /* \"#utility.yul\":11514:11534   */\n      shl\n        /* \"#utility.yul\":11511:11512   */\n      0x00\n        /* \"#utility.yul\":11504:11535   */\n      mstore\n        /* \"#utility.yul\":11558:11562   */\n      0x22\n        /* \"#utility.yul\":11555:11556   */\n      0x04\n        /* \"#utility.yul\":11548:11563   */\n      mstore\n        /* \"#utility.yul\":11586:11590   */\n      0x24\n        /* \"#utility.yul\":11583:11584   */\n      0x00\n        /* \"#utility.yul\":11576:11591   */\n      revert\n        /* \"#utility.yul\":11440:11601   */\n    tag_492:\n      pop\n        /* \"#utility.yul\":11227:11607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11612:12022   */\n    tag_118:\n        /* \"#utility.yul\":11814:11816   */\n      0x20\n        /* \"#utility.yul\":11796:11817   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11853:11855   */\n      0x2e\n        /* \"#utility.yul\":11833:11851   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11826:11856   */\n      mstore\n        /* \"#utility.yul\":11892:11926   */\n      0x455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e\n        /* \"#utility.yul\":11887:11889   */\n      0x40\n        /* \"#utility.yul\":11872:11890   */\n      dup3\n      add\n        /* \"#utility.yul\":11865:11927   */\n      mstore\n      shl(0x92, 0x195c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":11958:11960   */\n      0x60\n        /* \"#utility.yul\":11943:11961   */\n      dup3\n      add\n        /* \"#utility.yul\":11936:11980   */\n      mstore\n        /* \"#utility.yul\":12012:12015   */\n      0x80\n        /* \"#utility.yul\":11997:12016   */\n      add\n      swap1\n        /* \"#utility.yul\":11612:12022   */\n      jump\t// out\n        /* \"#utility.yul\":12437:12564   */\n    tag_135:\n        /* \"#utility.yul\":12498:12508   */\n      0x4e487b71\n        /* \"#utility.yul\":12493:12496   */\n      0xe0\n        /* \"#utility.yul\":12489:12509   */\n      shl\n        /* \"#utility.yul\":12486:12487   */\n      0x00\n        /* \"#utility.yul\":12479:12510   */\n      mstore\n        /* \"#utility.yul\":12529:12533   */\n      0x32\n        /* \"#utility.yul\":12526:12527   */\n      0x04\n        /* \"#utility.yul\":12519:12534   */\n      mstore\n        /* \"#utility.yul\":12553:12557   */\n      0x24\n        /* \"#utility.yul\":12550:12551   */\n      0x00\n        /* \"#utility.yul\":12543:12558   */\n      revert\n        /* \"#utility.yul\":12569:12696   */\n    tag_375:\n        /* \"#utility.yul\":12630:12640   */\n      0x4e487b71\n        /* \"#utility.yul\":12625:12628   */\n      0xe0\n        /* \"#utility.yul\":12621:12641   */\n      shl\n        /* \"#utility.yul\":12618:12619   */\n      0x00\n        /* \"#utility.yul\":12611:12642   */\n      mstore\n        /* \"#utility.yul\":12661:12665   */\n      0x11\n        /* \"#utility.yul\":12658:12659   */\n      0x04\n        /* \"#utility.yul\":12651:12666   */\n      mstore\n        /* \"#utility.yul\":12685:12689   */\n      0x24\n        /* \"#utility.yul\":12682:12683   */\n      0x00\n        /* \"#utility.yul\":12675:12690   */\n      revert\n        /* \"#utility.yul\":12701:12836   */\n    tag_141:\n        /* \"#utility.yul\":12740:12743   */\n      0x00\n        /* \"#utility.yul\":12761:12778   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":12758:12801   */\n      tag_499\n      jumpi\n        /* \"#utility.yul\":12781:12799   */\n      tag_499\n      tag_375\n      jump\t// in\n    tag_499:\n      pop\n        /* \"#utility.yul\":12828:12829   */\n      0x01\n        /* \"#utility.yul\":12817:12830   */\n      add\n      swap1\n        /* \"#utility.yul\":12701:12836   */\n      jump\t// out\n        /* \"#utility.yul\":13609:14006   */\n    tag_202:\n        /* \"#utility.yul\":13811:13813   */\n      0x20\n        /* \"#utility.yul\":13793:13814   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13850:13852   */\n      0x21\n        /* \"#utility.yul\":13830:13848   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13823:13853   */\n      mstore\n        /* \"#utility.yul\":13889:13923   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":13884:13886   */\n      0x40\n        /* \"#utility.yul\":13869:13887   */\n      dup3\n      add\n        /* \"#utility.yul\":13862:13924   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":13955:13957   */\n      0x60\n        /* \"#utility.yul\":13940:13958   */\n      dup3\n      add\n        /* \"#utility.yul\":13933:13964   */\n      mstore\n        /* \"#utility.yul\":13996:13999   */\n      0x80\n        /* \"#utility.yul\":13981:14000   */\n      add\n      swap1\n        /* \"#utility.yul\":13609:14006   */\n      jump\t// out\n        /* \"#utility.yul\":14011:14415   */\n    tag_205:\n        /* \"#utility.yul\":14213:14215   */\n      0x20\n        /* \"#utility.yul\":14195:14216   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14252:14254   */\n      0x28\n        /* \"#utility.yul\":14232:14250   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14225:14255   */\n      mstore\n        /* \"#utility.yul\":14291:14325   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":14286:14288   */\n      0x40\n        /* \"#utility.yul\":14271:14289   */\n      dup3\n      add\n        /* \"#utility.yul\":14264:14326   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":14357:14359   */\n      0x60\n        /* \"#utility.yul\":14342:14360   */\n      dup3\n      add\n        /* \"#utility.yul\":14335:14373   */\n      mstore\n        /* \"#utility.yul\":14405:14408   */\n      0x80\n        /* \"#utility.yul\":14390:14409   */\n      add\n      swap1\n        /* \"#utility.yul\":14011:14415   */\n      jump\t// out\n        /* \"#utility.yul\":14420:14545   */\n    tag_217:\n        /* \"#utility.yul\":14485:14494   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":14506:14516   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":14503:14539   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":14519:14537   */\n      tag_88\n      tag_375\n      jump\t// in\n        /* \"#utility.yul\":14550:15015   */\n    tag_220:\n        /* \"#utility.yul\":14807:14809   */\n      0x40\n        /* \"#utility.yul\":14796:14805   */\n      dup2\n        /* \"#utility.yul\":14789:14810   */\n      mstore\n        /* \"#utility.yul\":14770:14774   */\n      0x00\n        /* \"#utility.yul\":14833:14889   */\n      tag_508\n        /* \"#utility.yul\":14885:14887   */\n      0x40\n        /* \"#utility.yul\":14874:14883   */\n      dup4\n        /* \"#utility.yul\":14870:14888   */\n      add\n        /* \"#utility.yul\":14862:14868   */\n      dup6\n        /* \"#utility.yul\":14833:14889   */\n      tag_374\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":14937:14946   */\n      dup3\n        /* \"#utility.yul\":14929:14935   */\n      dup2\n        /* \"#utility.yul\":14925:14947   */\n      sub\n        /* \"#utility.yul\":14920:14922   */\n      0x20\n        /* \"#utility.yul\":14909:14918   */\n      dup5\n        /* \"#utility.yul\":14905:14923   */\n      add\n        /* \"#utility.yul\":14898:14948   */\n      mstore\n        /* \"#utility.yul\":14965:15009   */\n      tag_509\n        /* \"#utility.yul\":15002:15008   */\n      dup2\n        /* \"#utility.yul\":14994:15000   */\n      dup6\n        /* \"#utility.yul\":14965:15009   */\n      tag_374\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":14957:15009   */\n      swap6\n        /* \"#utility.yul\":14550:15015   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15020:15421   */\n    tag_231:\n        /* \"#utility.yul\":15222:15224   */\n      0x20\n        /* \"#utility.yul\":15204:15225   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15261:15263   */\n      0x25\n        /* \"#utility.yul\":15241:15259   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15234:15264   */\n      mstore\n        /* \"#utility.yul\":15300:15334   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":15295:15297   */\n      0x40\n        /* \"#utility.yul\":15280:15298   */\n      dup3\n      add\n        /* \"#utility.yul\":15273:15335   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":15366:15368   */\n      0x60\n        /* \"#utility.yul\":15351:15369   */\n      dup3\n      add\n        /* \"#utility.yul\":15344:15379   */\n      mstore\n        /* \"#utility.yul\":15411:15414   */\n      0x80\n        /* \"#utility.yul\":15396:15415   */\n      add\n      swap1\n        /* \"#utility.yul\":15020:15421   */\n      jump\t// out\n        /* \"#utility.yul\":15426:15832   */\n    tag_243:\n        /* \"#utility.yul\":15628:15630   */\n      0x20\n        /* \"#utility.yul\":15610:15631   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15667:15669   */\n      0x2a\n        /* \"#utility.yul\":15647:15665   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15640:15670   */\n      mstore\n        /* \"#utility.yul\":15706:15740   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":15701:15703   */\n      0x40\n        /* \"#utility.yul\":15686:15704   */\n      dup3\n      add\n        /* \"#utility.yul\":15679:15741   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":15772:15774   */\n      0x60\n        /* \"#utility.yul\":15757:15775   */\n      dup3\n      add\n        /* \"#utility.yul\":15750:15790   */\n      mstore\n        /* \"#utility.yul\":15822:15825   */\n      0x80\n        /* \"#utility.yul\":15807:15826   */\n      add\n      swap1\n        /* \"#utility.yul\":15426:15832   */\n      jump\t// out\n        /* \"#utility.yul\":15837:16236   */\n    tag_252:\n        /* \"#utility.yul\":16039:16041   */\n      0x20\n        /* \"#utility.yul\":16021:16042   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16078:16080   */\n      0x23\n        /* \"#utility.yul\":16058:16076   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16051:16081   */\n      mstore\n        /* \"#utility.yul\":16117:16151   */\n      0x455243313135353a206275726e2066726f6d20746865207a65726f2061646472\n        /* \"#utility.yul\":16112:16114   */\n      0x40\n        /* \"#utility.yul\":16097:16115   */\n      dup3\n      add\n        /* \"#utility.yul\":16090:16152   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":16183:16185   */\n      0x60\n        /* \"#utility.yul\":16168:16186   */\n      dup3\n      add\n        /* \"#utility.yul\":16161:16194   */\n      mstore\n        /* \"#utility.yul\":16226:16229   */\n      0x80\n        /* \"#utility.yul\":16211:16230   */\n      add\n      swap1\n        /* \"#utility.yul\":15837:16236   */\n      jump\t// out\n        /* \"#utility.yul\":16241:16641   */\n    tag_266:\n        /* \"#utility.yul\":16443:16445   */\n      0x20\n        /* \"#utility.yul\":16425:16446   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16482:16484   */\n      0x24\n        /* \"#utility.yul\":16462:16480   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16455:16485   */\n      mstore\n        /* \"#utility.yul\":16521:16555   */\n      0x455243313135353a206275726e20616d6f756e7420657863656564732062616c\n        /* \"#utility.yul\":16516:16518   */\n      0x40\n        /* \"#utility.yul\":16501:16519   */\n      dup3\n      add\n        /* \"#utility.yul\":16494:16556   */\n      mstore\n      shl(0xe0, 0x616e6365)\n        /* \"#utility.yul\":16587:16589   */\n      0x60\n        /* \"#utility.yul\":16572:16590   */\n      dup3\n      add\n        /* \"#utility.yul\":16565:16599   */\n      mstore\n        /* \"#utility.yul\":16631:16634   */\n      0x80\n        /* \"#utility.yul\":16616:16635   */\n      add\n      swap1\n        /* \"#utility.yul\":16241:16641   */\n      jump\t// out\n        /* \"#utility.yul\":17309:18136   */\n    tag_321:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":17706:17721   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":17688:17722   */\n      dup3\n      mstore\n        /* \"#utility.yul\":17758:17773   */\n      dup6\n      and\n        /* \"#utility.yul\":17753:17755   */\n      0x20\n        /* \"#utility.yul\":17738:17756   */\n      dup3\n      add\n        /* \"#utility.yul\":17731:17774   */\n      mstore\n        /* \"#utility.yul\":17668:17671   */\n      0xa0\n        /* \"#utility.yul\":17805:17807   */\n      0x40\n        /* \"#utility.yul\":17790:17808   */\n      dup3\n      add\n        /* \"#utility.yul\":17783:17814   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":17631:17635   */\n      0x00\n      swap1\n        /* \"#utility.yul\":17837:17894   */\n      tag_517\n      swap1\n        /* \"#utility.yul\":17874:17893   */\n      dup4\n      add\n        /* \"#utility.yul\":17866:17872   */\n      dup7\n        /* \"#utility.yul\":17837:17894   */\n      tag_374\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":17942:17951   */\n      dup3\n        /* \"#utility.yul\":17934:17940   */\n      dup2\n        /* \"#utility.yul\":17930:17952   */\n      sub\n        /* \"#utility.yul\":17925:17927   */\n      0x60\n        /* \"#utility.yul\":17914:17923   */\n      dup5\n        /* \"#utility.yul\":17910:17928   */\n      add\n        /* \"#utility.yul\":17903:17953   */\n      mstore\n        /* \"#utility.yul\":17976:18020   */\n      tag_518\n        /* \"#utility.yul\":18013:18019   */\n      dup2\n        /* \"#utility.yul\":18005:18011   */\n      dup7\n        /* \"#utility.yul\":17976:18020   */\n      tag_374\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":17962:18020   */\n      swap1\n      pop\n        /* \"#utility.yul\":18069:18078   */\n      dup3\n        /* \"#utility.yul\":18061:18067   */\n      dup2\n        /* \"#utility.yul\":18057:18079   */\n      sub\n        /* \"#utility.yul\":18051:18054   */\n      0x80\n        /* \"#utility.yul\":18040:18049   */\n      dup5\n        /* \"#utility.yul\":18036:18055   */\n      add\n        /* \"#utility.yul\":18029:18080   */\n      mstore\n        /* \"#utility.yul\":18097:18130   */\n      tag_519\n        /* \"#utility.yul\":18123:18129   */\n      dup2\n        /* \"#utility.yul\":18115:18121   */\n      dup6\n        /* \"#utility.yul\":18097:18130   */\n      tag_369\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":18089:18130   */\n      swap9\n        /* \"#utility.yul\":17309:18136   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18141:18390   */\n    tag_324:\n        /* \"#utility.yul\":18210:18216   */\n      0x00\n        /* \"#utility.yul\":18263:18265   */\n      0x20\n        /* \"#utility.yul\":18251:18260   */\n      dup3\n        /* \"#utility.yul\":18242:18249   */\n      dup5\n        /* \"#utility.yul\":18238:18261   */\n      sub\n        /* \"#utility.yul\":18234:18266   */\n      slt\n        /* \"#utility.yul\":18231:18283   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":18279:18280   */\n      0x00\n        /* \"#utility.yul\":18276:18277   */\n      dup1\n        /* \"#utility.yul\":18269:18281   */\n      revert\n        /* \"#utility.yul\":18231:18283   */\n    tag_521:\n        /* \"#utility.yul\":18311:18320   */\n      dup2\n        /* \"#utility.yul\":18305:18321   */\n      mload\n        /* \"#utility.yul\":18330:18360   */\n      tag_387\n        /* \"#utility.yul\":18354:18359   */\n      dup2\n        /* \"#utility.yul\":18330:18360   */\n      tag_368\n      jump\t// in\n        /* \"#utility.yul\":18395:18574   */\n    tag_330:\n        /* \"#utility.yul\":18430:18433   */\n      0x00\n        /* \"#utility.yul\":18472:18473   */\n      0x03\n        /* \"#utility.yul\":18454:18470   */\n      returndatasize\n        /* \"#utility.yul\":18451:18474   */\n      gt\n        /* \"#utility.yul\":18448:18568   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":18518:18519   */\n      0x04\n        /* \"#utility.yul\":18515:18516   */\n      0x00\n        /* \"#utility.yul\":18512:18513   */\n      dup1\n        /* \"#utility.yul\":18497:18520   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":18555:18556   */\n      0x00\n        /* \"#utility.yul\":18549:18557   */\n      mload\n        /* \"#utility.yul\":18544:18547   */\n      0xe0\n        /* \"#utility.yul\":18540:18558   */\n      shr\n        /* \"#utility.yul\":18448:18568   */\n    tag_524:\n        /* \"#utility.yul\":18395:18574   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":18579:19250   */\n    tag_332:\n        /* \"#utility.yul\":18618:18621   */\n      0x00\n        /* \"#utility.yul\":18660:18664   */\n      0x44\n        /* \"#utility.yul\":18642:18658   */\n      returndatasize\n        /* \"#utility.yul\":18639:18665   */\n      lt\n        /* \"#utility.yul\":18636:18675   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":18579:19250   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":18636:18675   */\n    tag_526:\n        /* \"#utility.yul\":18702:18704   */\n      0x40\n        /* \"#utility.yul\":18696:18705   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":18767:18783   */\n      returndatasize\n        /* \"#utility.yul\":18763:18788   */\n      dup2\n      add\n        /* \"#utility.yul\":18760:18761   */\n      0x04\n        /* \"#utility.yul\":18696:18705   */\n      dup4\n        /* \"#utility.yul\":18739:18789   */\n      returndatacopy\n        /* \"#utility.yul\":18818:18822   */\n      dup2\n        /* \"#utility.yul\":18812:18823   */\n      mload\n        /* \"#utility.yul\":18842:18858   */\n      returndatasize\n        /* \"#utility.yul\":18877:18895   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18948:18950   */\n      dup2\n        /* \"#utility.yul\":18941:18945   */\n      0x24\n        /* \"#utility.yul\":18933:18939   */\n      dup5\n        /* \"#utility.yul\":18929:18946   */\n      add\n        /* \"#utility.yul\":18926:18951   */\n      gt\n        /* \"#utility.yul\":18921:18923   */\n      dup2\n        /* \"#utility.yul\":18913:18919   */\n      dup5\n        /* \"#utility.yul\":18910:18924   */\n      gt\n        /* \"#utility.yul\":18907:18952   */\n      or\n        /* \"#utility.yul\":18904:18962   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":18955:18960   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18579:19250   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":18904:18962   */\n    tag_527:\n        /* \"#utility.yul\":18992:18998   */\n      dup3\n        /* \"#utility.yul\":18986:18990   */\n      dup6\n        /* \"#utility.yul\":18982:18999   */\n      add\n        /* \"#utility.yul\":18971:18999   */\n      swap2\n      pop\n        /* \"#utility.yul\":19028:19031   */\n      dup2\n        /* \"#utility.yul\":19022:19032   */\n      mload\n        /* \"#utility.yul\":19055:19057   */\n      dup2\n        /* \"#utility.yul\":19047:19053   */\n      dup2\n        /* \"#utility.yul\":19044:19058   */\n      gt\n        /* \"#utility.yul\":19041:19068   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":19061:19066   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18579:19250   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19041:19068   */\n    tag_528:\n        /* \"#utility.yul\":19145:19147   */\n      dup5\n        /* \"#utility.yul\":19126:19142   */\n      returndatasize\n        /* \"#utility.yul\":19120:19124   */\n      dup8\n        /* \"#utility.yul\":19116:19143   */\n      add\n        /* \"#utility.yul\":19112:19148   */\n      add\n        /* \"#utility.yul\":19105:19109   */\n      0x20\n        /* \"#utility.yul\":19096:19102   */\n      dup3\n        /* \"#utility.yul\":19091:19094   */\n      dup6\n        /* \"#utility.yul\":19087:19103   */\n      add\n        /* \"#utility.yul\":19083:19110   */\n      add\n        /* \"#utility.yul\":19080:19149   */\n      gt\n        /* \"#utility.yul\":19077:19159   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":19152:19157   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18579:19250   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19077:19159   */\n    tag_529:\n        /* \"#utility.yul\":19168:19225   */\n      tag_530\n        /* \"#utility.yul\":19219:19223   */\n      0x20\n        /* \"#utility.yul\":19210:19216   */\n      dup3\n        /* \"#utility.yul\":19202:19208   */\n      dup7\n        /* \"#utility.yul\":19198:19217   */\n      add\n        /* \"#utility.yul\":19194:19224   */\n      add\n        /* \"#utility.yul\":19188:19192   */\n      dup8\n        /* \"#utility.yul\":19168:19225   */\n      tag_370\n      jump\t// in\n    tag_530:\n      pop\n        /* \"#utility.yul\":19241:19244   */\n      swap1\n      swap6\n        /* \"#utility.yul\":18579:19250   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19676:20080   */\n    tag_340:\n        /* \"#utility.yul\":19878:19880   */\n      0x20\n        /* \"#utility.yul\":19860:19881   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":19917:19919   */\n      0x28\n        /* \"#utility.yul\":19897:19915   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":19890:19920   */\n      mstore\n        /* \"#utility.yul\":19956:19990   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":19951:19953   */\n      0x40\n        /* \"#utility.yul\":19936:19954   */\n      dup3\n      add\n        /* \"#utility.yul\":19929:19991   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":20022:20024   */\n      0x60\n        /* \"#utility.yul\":20007:20025   */\n      dup3\n      add\n        /* \"#utility.yul\":20000:20038   */\n      mstore\n        /* \"#utility.yul\":20070:20073   */\n      0x80\n        /* \"#utility.yul\":20055:20074   */\n      add\n      swap1\n        /* \"#utility.yul\":19676:20080   */\n      jump\t// out\n        /* \"#utility.yul\":20085:20646   */\n    tag_351:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":20382:20397   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":20364:20398   */\n      dup3\n      mstore\n        /* \"#utility.yul\":20434:20449   */\n      dup6\n      and\n        /* \"#utility.yul\":20429:20431   */\n      0x20\n        /* \"#utility.yul\":20414:20432   */\n      dup3\n      add\n        /* \"#utility.yul\":20407:20450   */\n      mstore\n        /* \"#utility.yul\":20481:20483   */\n      0x40\n        /* \"#utility.yul\":20466:20484   */\n      dup2\n      add\n        /* \"#utility.yul\":20459:20493   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":20524:20526   */\n      0x60\n        /* \"#utility.yul\":20509:20527   */\n      dup2\n      add\n        /* \"#utility.yul\":20502:20536   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":20344:20347   */\n      0xa0\n        /* \"#utility.yul\":20567:20570   */\n      0x80\n        /* \"#utility.yul\":20552:20571   */\n      dup3\n      add\n        /* \"#utility.yul\":20545:20577   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":20307:20311   */\n      0x00\n      swap1\n        /* \"#utility.yul\":20594:20640   */\n      tag_534\n      swap1\n        /* \"#utility.yul\":20620:20639   */\n      dup4\n      add\n        /* \"#utility.yul\":20612:20618   */\n      dup5\n        /* \"#utility.yul\":20594:20640   */\n      tag_369\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":20586:20640   */\n      swap8\n        /* \"#utility.yul\":20085:20646   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204d0a3e93e39627f87501370bb13f5b7f7a9a549d48863dcd03f9e12de4224f7364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1965": {
									"entryPoint": null,
									"id": 1965,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_704": {
									"entryPoint": null,
									"id": 704,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setURI_1215": {
									"entryPoint": 76,
									"id": 1215,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_131": {
									"entryPoint": 94,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 253,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2732:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:1",
																			"statements": []
																		},
																		"src": "1104:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nodeType": "YulIf",
															"src": "748:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:1",
														"type": ""
													}
												],
												"src": "1207:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:1"
															},
															"nodeType": "YulIf",
															"src": "1517:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:1",
																					"statements": []
																				},
																				"src": "1964:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:1",
														"type": ""
													}
												],
												"src": "1378:1352:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060408051808201909152600781526611151a58dad95d60ca1b60208201526200003a816200004c565b5062000046336200005e565b62000217565b60026200005a82826200014f565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b600181811c90821680620000d857607f821691505b602082108103620000f757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200014a575f81815260208120601f850160051c81016020861015620001255750805b601f850160051c820191505b81811015620001465782815560010162000131565b5050505b505050565b81516001600160401b038111156200016b576200016b620000af565b62000183816200017c8454620000c3565b84620000fd565b602080601f831160018114620001b9575f8415620001a15750858301515b5f19600386901b1c1916600185901b17855562000146565b5f85815260208120601f198616915b82811015620001e957888601518255948401946001909101908401620001c8565b50858210156200020757878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b611cf980620002255f395ff3fe608060405234801561000f575f80fd5b50600436106100ef575f3560e01c8063715018a611610093578063e985e9c511610063578063e985e9c514610200578063f242432a1461023b578063f2fde38b1461024e578063f5298aca14610261575f80fd5b8063715018a6146101b7578063731133e9146101bf5780638da5cb5b146101d2578063a22cb465146101ed575f80fd5b80631f7fdffa116100ce5780631f7fdffa1461015c5780632eb2c2d6146101715780634e1273f4146101845780636b20c454146101a4575f80fd5b8062fdd58e146100f357806301ffc9a7146101195780630e89341c1461013c575b5f80fd5b610106610101366004611252565b610274565b6040519081526020015b60405180910390f35b61012c61012736600461128f565b61030b565b6040519015158152602001610110565b61014f61014a3660046112b1565b61035a565b604051610110919061130b565b61016f61016a36600461145f565b6103ec565b005b61016f61017f3660046114f2565b610406565b610197610192366004611595565b610452565b6040516101109190611693565b61016f6101b23660046116a5565b61057a565b61016f6105c2565b61016f6101cd366004611714565b6105d5565b6003546040516001600160a01b039091168152602001610110565b61016f6101fb366004611765565b6105e9565b61012c61020e36600461179e565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b61016f6102493660046117cf565b6105f8565b61016f61025c36600461182f565b61063d565b61016f61026f366004611848565b6106b6565b5f6001600160a01b0383166102e35760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b505f818152602081815260408083206001600160a01b03861684529091529020545b92915050565b5f6001600160e01b03198216636cdb3d1360e11b148061033b57506001600160e01b031982166303a24d0760e21b145b8061030557506301ffc9a760e01b6001600160e01b0319831614610305565b60606002805461036990611878565b80601f016020809104026020016040519081016040528092919081815260200182805461039590611878565b80156103e05780601f106103b7576101008083540402835291602001916103e0565b820191905f5260205f20905b8154815290600101906020018083116103c357829003601f168201915b50505050509050919050565b6103f46106f9565b61040084848484610753565b50505050565b6001600160a01b0385163314806104225750610422853361020e565b61043e5760405162461bcd60e51b81526004016102da906118b0565b61044b8585858585610896565b5050505050565b606081518351146104b75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016102da565b5f835167ffffffffffffffff8111156104d2576104d261131d565b6040519080825280602002602001820160405280156104fb578160200160208202803683370190505b5090505f5b84518110156105725761054585828151811061051e5761051e6118fe565b6020026020010151858381518110610538576105386118fe565b6020026020010151610274565b828281518110610557576105576118fe565b602090810291909101015261056b81611926565b9050610500565b509392505050565b6001600160a01b0383163314806105965750610596833361020e565b6105b25760405162461bcd60e51b81526004016102da906118b0565b6105bd838383610a2d565b505050565b6105ca6106f9565b6105d35f610bb0565b565b6105dd6106f9565b61040084848484610c01565b6105f4338383610cd6565b5050565b6001600160a01b0385163314806106145750610614853361020e565b6106305760405162461bcd60e51b81526004016102da906118b0565b61044b8585858585610db5565b6106456106f9565b6001600160a01b0381166106aa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102da565b6106b381610bb0565b50565b6001600160a01b0383163314806106d257506106d2833361020e565b6106ee5760405162461bcd60e51b81526004016102da906118b0565b6105bd838383610edb565b6003546001600160a01b031633146105d35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102da565b6001600160a01b0384166107795760405162461bcd60e51b81526004016102da9061193e565b815183511461079a5760405162461bcd60e51b81526004016102da9061197f565b335f5b8451811015610830578381815181106107b8576107b86118fe565b60200260200101515f808784815181106107d4576107d46118fe565b602002602001015181526020019081526020015f205f886001600160a01b03166001600160a01b031681526020019081526020015f205f82825461081891906119c7565b9091555081905061082881611926565b91505061079d565b50846001600160a01b03165f6001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516108809291906119da565b60405180910390a461044b815f87878787610fda565b81518351146108b75760405162461bcd60e51b81526004016102da9061197f565b6001600160a01b0384166108dd5760405162461bcd60e51b81526004016102da90611a07565b335f5b84518110156109bf575f8582815181106108fc576108fc6118fe565b602002602001015190505f858381518110610919576109196118fe565b6020908102919091018101515f84815280835260408082206001600160a01b038e1683529093529190912054909150818110156109685760405162461bcd60e51b81526004016102da90611a4c565b5f838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906109a49084906119c7565b92505081905550505050806109b890611926565b90506108e0565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a0f9291906119da565b60405180910390a4610a25818787878787610fda565b505050505050565b6001600160a01b038316610a535760405162461bcd60e51b81526004016102da90611a96565b8051825114610a745760405162461bcd60e51b81526004016102da9061197f565b60408051602081019091525f9081905233905b8351811015610b45575f848281518110610aa357610aa36118fe565b602002602001015190505f848381518110610ac057610ac06118fe565b6020908102919091018101515f84815280835260408082206001600160a01b038c168352909352919091205490915081811015610b0f5760405162461bcd60e51b81526004016102da90611ad9565b5f928352602083815260408085206001600160a01b038b1686529091529092209103905580610b3d81611926565b915050610a87565b505f6001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610b959291906119da565b60405180910390a460408051602081019091525f9052610400565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038416610c275760405162461bcd60e51b81526004016102da9061193e565b335f610c3285611134565b90505f610c3e85611134565b90505f868152602081815260408083206001600160a01b038b16845290915281208054879290610c6f9084906119c7565b909155505060408051878152602081018790526001600160a01b03808a16925f92918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610ccd835f8989898961117d565b50505050505050565b816001600160a01b0316836001600160a01b031603610d495760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016102da565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610ddb5760405162461bcd60e51b81526004016102da90611a07565b335f610de685611134565b90505f610df285611134565b90505f868152602081815260408083206001600160a01b038c16845290915290205485811015610e345760405162461bcd60e51b81526004016102da90611a4c565b5f878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610e709084906119c7565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610ed0848a8a8a8a8a61117d565b505050505050505050565b6001600160a01b038316610f015760405162461bcd60e51b81526004016102da90611a96565b335f610f0c84611134565b90505f610f1884611134565b60408051602080820183525f918290528882528181528282206001600160a01b038b1683529052205490915084811015610f645760405162461bcd60e51b81526004016102da90611ad9565b5f868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a460408051602081019091525f9052610ccd565b6001600160a01b0384163b15610a255760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061101e9089908990889088908890600401611b1d565b6020604051808303815f875af1925050508015611058575060408051601f3d908101601f1916820190925261105591810190611b7a565b60015b61110457611064611b95565b806308c379a00361109d5750611078611bae565b80611083575061109f565b8060405162461bcd60e51b81526004016102da919061130b565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016102da565b6001600160e01b0319811663bc197c8160e01b14610ccd5760405162461bcd60e51b81526004016102da90611c37565b6040805160018082528183019092526060915f91906020808301908036833701905050905082815f8151811061116c5761116c6118fe565b602090810291909101015292915050565b6001600160a01b0384163b15610a255760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906111c19089908990889088908890600401611c7f565b6020604051808303815f875af19250505080156111fb575060408051601f3d908101601f191682019092526111f891810190611b7a565b60015b61120757611064611b95565b6001600160e01b0319811663f23a6e6160e01b14610ccd5760405162461bcd60e51b81526004016102da90611c37565b80356001600160a01b038116811461124d575f80fd5b919050565b5f8060408385031215611263575f80fd5b61126c83611237565b946020939093013593505050565b6001600160e01b0319811681146106b3575f80fd5b5f6020828403121561129f575f80fd5b81356112aa8161127a565b9392505050565b5f602082840312156112c1575f80fd5b5035919050565b5f81518084525f5b818110156112ec576020818501810151868301820152016112d0565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f6112aa60208301846112c8565b634e487b7160e01b5f52604160045260245ffd5b601f8201601f1916810167ffffffffffffffff811182821017156113575761135761131d565b6040525050565b5f67ffffffffffffffff8211156113775761137761131d565b5060051b60200190565b5f82601f830112611390575f80fd5b8135602061139d8261135e565b6040516113aa8282611331565b83815260059390931b85018201928281019150868411156113c9575f80fd5b8286015b848110156113e457803583529183019183016113cd565b509695505050505050565b5f82601f8301126113fe575f80fd5b813567ffffffffffffffff8111156114185761141861131d565b60405161142f601f8301601f191660200182611331565b818152846020838601011115611443575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f8060808587031215611472575f80fd5b61147b85611237565b9350602085013567ffffffffffffffff80821115611497575f80fd5b6114a388838901611381565b945060408701359150808211156114b8575f80fd5b6114c488838901611381565b935060608701359150808211156114d9575f80fd5b506114e6878288016113ef565b91505092959194509250565b5f805f805f60a08688031215611506575f80fd5b61150f86611237565b945061151d60208701611237565b9350604086013567ffffffffffffffff80821115611539575f80fd5b61154589838a01611381565b9450606088013591508082111561155a575f80fd5b61156689838a01611381565b9350608088013591508082111561157b575f80fd5b50611588888289016113ef565b9150509295509295909350565b5f80604083850312156115a6575f80fd5b823567ffffffffffffffff808211156115bd575f80fd5b818501915085601f8301126115d0575f80fd5b813560206115dd8261135e565b6040516115ea8282611331565b83815260059390931b8501820192828101915089841115611609575f80fd5b948201945b8386101561162e5761161f86611237565b8252948201949082019061160e565b96505086013592505080821115611643575f80fd5b5061165085828601611381565b9150509250929050565b5f8151808452602080850194508084015f5b838110156116885781518752958201959082019060010161166c565b509495945050505050565b602081525f6112aa602083018461165a565b5f805f606084860312156116b7575f80fd5b6116c084611237565b9250602084013567ffffffffffffffff808211156116dc575f80fd5b6116e887838801611381565b935060408601359150808211156116fd575f80fd5b5061170a86828701611381565b9150509250925092565b5f805f8060808587031215611727575f80fd5b61173085611237565b93506020850135925060408501359150606085013567ffffffffffffffff811115611759575f80fd5b6114e6878288016113ef565b5f8060408385031215611776575f80fd5b61177f83611237565b915060208301358015158114611793575f80fd5b809150509250929050565b5f80604083850312156117af575f80fd5b6117b883611237565b91506117c660208401611237565b90509250929050565b5f805f805f60a086880312156117e3575f80fd5b6117ec86611237565b94506117fa60208701611237565b93506040860135925060608601359150608086013567ffffffffffffffff811115611823575f80fd5b611588888289016113ef565b5f6020828403121561183f575f80fd5b6112aa82611237565b5f805f6060848603121561185a575f80fd5b61186384611237565b95602085013595506040909401359392505050565b600181811c9082168061188c57607f821691505b6020821081036118aa57634e487b7160e01b5f52602260045260245ffd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f6001820161193757611937611912565b5060010190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b8082018082111561030557610305611912565b604081525f6119ec604083018561165a565b82810360208401526119fe818561165a565b95945050505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6001600160a01b0386811682528516602082015260a0604082018190525f90611b489083018661165a565b8281036060840152611b5a818661165a565b90508281036080840152611b6e81856112c8565b98975050505050505050565b5f60208284031215611b8a575f80fd5b81516112aa8161127a565b5f60033d1115611bab5760045f803e505f5160e01c5b90565b5f60443d1015611bbb5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611beb57505050505090565b8285019150815181811115611c035750505050505090565b843d8701016020828501011115611c1d5750505050505090565b611c2c60208286010187611331565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190525f90611cb8908301846112c8565b97965050505050505056fea26469706673582212204d0a3e93e39627f87501370bb13f5b7f7a9a549d48863dcd03f9e12de4224f7364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x11151A58DAD95D PUSH1 0xCA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x3A DUP2 PUSH3 0x4C JUMP JUMPDEST POP PUSH3 0x46 CALLER PUSH3 0x5E JUMP JUMPDEST PUSH3 0x217 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x5A DUP3 DUP3 PUSH3 0x14F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0xD8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xF7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x14A JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x125 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x146 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x131 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x16B JUMPI PUSH3 0x16B PUSH3 0xAF JUMP JUMPDEST PUSH3 0x183 DUP2 PUSH3 0x17C DUP5 SLOAD PUSH3 0xC3 JUMP JUMPDEST DUP5 PUSH3 0xFD JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1B9 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x1A1 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x146 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1E9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x1C8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x207 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1CF9 DUP1 PUSH3 0x225 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEF JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x261 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1ED JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F7FDFFA GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x1A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x106 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x1252 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12C PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x128F JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x130B JUMP JUMPDEST PUSH2 0x16F PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x145F JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x14F2 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A5 JUMP JUMPDEST PUSH2 0x57A JUMP JUMPDEST PUSH2 0x16F PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1714 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x5E9 JUMP JUMPDEST PUSH2 0x12C PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x182F JUMP JUMPDEST PUSH2 0x63D JUMP JUMPDEST PUSH2 0x16F PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x1848 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x33B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x305 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x305 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x369 SWAP1 PUSH2 0x1878 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x395 SWAP1 PUSH2 0x1878 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F4 PUSH2 0x6F9 JUMP JUMPDEST PUSH2 0x400 DUP5 DUP5 DUP5 DUP5 PUSH2 0x753 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x422 JUMPI POP PUSH2 0x422 DUP6 CALLER PUSH2 0x20E JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0x44B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x896 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D2 JUMPI PUSH2 0x4D2 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x572 JUMPI PUSH2 0x545 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x51E JUMPI PUSH2 0x51E PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x538 JUMPI PUSH2 0x538 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x274 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x557 JUMPI PUSH2 0x557 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x56B DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP1 POP PUSH2 0x500 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x596 JUMPI POP PUSH2 0x596 DUP4 CALLER PUSH2 0x20E JUMP JUMPDEST PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0x5BD DUP4 DUP4 DUP4 PUSH2 0xA2D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x6F9 JUMP JUMPDEST PUSH2 0x5D3 PUSH0 PUSH2 0xBB0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5DD PUSH2 0x6F9 JUMP JUMPDEST PUSH2 0x400 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0x5F4 CALLER DUP4 DUP4 PUSH2 0xCD6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x614 JUMPI POP PUSH2 0x614 DUP6 CALLER PUSH2 0x20E JUMP JUMPDEST PUSH2 0x630 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0x44B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x645 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH2 0x6B3 DUP2 PUSH2 0xBB0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x6D2 JUMPI POP PUSH2 0x6D2 DUP4 CALLER PUSH2 0x20E JUMP JUMPDEST PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0x5BD DUP4 DUP4 DUP4 PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x779 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x193E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x79A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x197F JUMP JUMPDEST CALLER PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x830 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7B8 JUMPI PUSH2 0x7B8 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7D4 JUMPI PUSH2 0x7D4 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x818 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x828 DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x79D JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x880 SWAP3 SWAP2 SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x44B DUP2 PUSH0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xFDA JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x8DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A07 JUMP JUMPDEST CALLER PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x9BF JUMPI PUSH0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8FC JUMPI PUSH2 0x8FC PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x919 JUMPI PUSH2 0x919 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x968 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x9A4 SWAP1 DUP5 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9B8 SWAP1 PUSH2 0x1926 JUMP JUMPDEST SWAP1 POP PUSH2 0x8E0 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA0F SWAP3 SWAP2 SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA25 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xFDA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A96 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xA74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 SWAP1 DUP2 SWAP1 MSTORE CALLER SWAP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xB45 JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAA3 JUMPI PUSH2 0xAA3 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAC0 JUMPI PUSH2 0xAC0 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP1 PUSH2 0xB3D DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA87 JUMP JUMPDEST POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xB95 SWAP3 SWAP2 SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 SWAP1 MSTORE PUSH2 0x400 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x193E JUMP JUMPDEST CALLER PUSH0 PUSH2 0xC32 DUP6 PUSH2 0x1134 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC3E DUP6 PUSH2 0x1134 JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xC6F SWAP1 DUP5 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xCCD DUP4 PUSH0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x117D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xD49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A07 JUMP JUMPDEST CALLER PUSH0 PUSH2 0xDE6 DUP6 PUSH2 0x1134 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xDF2 DUP6 PUSH2 0x1134 JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0xE34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xE70 SWAP1 DUP5 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xED0 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x117D JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A96 JUMP JUMPDEST CALLER PUSH0 PUSH2 0xF0C DUP5 PUSH2 0x1134 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xF18 DUP5 PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP4 MSTORE PUSH0 SWAP2 DUP3 SWAP1 MSTORE DUP9 DUP3 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP DUP5 DUP2 LT ISZERO PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP11 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP12 DUP2 MSTORE SWAP4 DUP5 ADD DUP11 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 SWAP1 MSTORE PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xA25 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x101E SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1B1D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1058 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1055 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1104 JUMPI PUSH2 0x1064 PUSH2 0x1B95 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x109D JUMPI POP PUSH2 0x1078 PUSH2 0x1BAE JUMP JUMPDEST DUP1 PUSH2 0x1083 JUMPI POP PUSH2 0x109F JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x130B JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x116C JUMPI PUSH2 0x116C PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xA25 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x11C1 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11FB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11F8 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1207 JUMPI PUSH2 0x1064 PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1C37 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x124D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1263 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x126C DUP4 PUSH2 0x1237 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12AA DUP2 PUSH2 0x127A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12EC JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x12D0 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x12AA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12C8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1357 JUMPI PUSH2 0x1357 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1377 JUMPI PUSH2 0x1377 PUSH2 0x131D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1390 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x139D DUP3 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13AA DUP3 DUP3 PUSH2 0x1331 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x13C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x13E4 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x13CD JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13FE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1418 JUMPI PUSH2 0x1418 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142F PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1331 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1443 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1472 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x147B DUP6 PUSH2 0x1237 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1497 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14A3 DUP9 DUP4 DUP10 ADD PUSH2 0x1381 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x14B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14C4 DUP9 DUP4 DUP10 ADD PUSH2 0x1381 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x14D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E6 DUP8 DUP3 DUP9 ADD PUSH2 0x13EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1506 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x150F DUP7 PUSH2 0x1237 JUMP JUMPDEST SWAP5 POP PUSH2 0x151D PUSH1 0x20 DUP8 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1539 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1545 DUP10 DUP4 DUP11 ADD PUSH2 0x1381 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x155A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1566 DUP10 DUP4 DUP11 ADD PUSH2 0x1381 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x157B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1588 DUP9 DUP3 DUP10 ADD PUSH2 0x13EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x15DD DUP3 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15EA DUP3 DUP3 PUSH2 0x1331 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x1609 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x162E JUMPI PUSH2 0x161F DUP7 PUSH2 0x1237 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x160E JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1643 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1650 DUP6 DUP3 DUP7 ADD PUSH2 0x1381 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1688 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x166C JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x12AA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x165A JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16C0 DUP5 PUSH2 0x1237 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16DC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16E8 DUP8 DUP4 DUP9 ADD PUSH2 0x1381 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x170A DUP7 DUP3 DUP8 ADD PUSH2 0x1381 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1727 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1730 DUP6 PUSH2 0x1237 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1759 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14E6 DUP8 DUP3 DUP9 ADD PUSH2 0x13EF JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1776 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x177F DUP4 PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1793 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17AF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17B8 DUP4 PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C6 PUSH1 0x20 DUP5 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17EC DUP7 PUSH2 0x1237 JUMP JUMPDEST SWAP5 POP PUSH2 0x17FA PUSH1 0x20 DUP8 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1823 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1588 DUP9 DUP3 DUP10 ADD PUSH2 0x13EF JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x183F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12AA DUP3 PUSH2 0x1237 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x185A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1863 DUP5 PUSH2 0x1237 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x188C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x18AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1937 JUMPI PUSH2 0x1937 PUSH2 0x1912 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x305 JUMPI PUSH2 0x305 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x19EC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x165A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x19FE DUP2 DUP6 PUSH2 0x165A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1B48 SWAP1 DUP4 ADD DUP7 PUSH2 0x165A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1B5A DUP2 DUP7 PUSH2 0x165A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1B6E DUP2 DUP6 PUSH2 0x12C8 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B8A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x12AA DUP2 PUSH2 0x127A JUMP JUMPDEST PUSH0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1BAB JUMPI PUSH1 0x4 PUSH0 DUP1 RETURNDATACOPY POP PUSH0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1BBB JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1BEB JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1C03 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1C1D JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1C2C PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1331 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1CB8 SWAP1 DUP4 ADD DUP5 PUSH2 0x12C8 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D EXP RETURNDATACOPY SWAP4 0xE3 SWAP7 0x27 0xF8 PUSH22 0x1370BB13F5B7F7A9A549D48863DCD03F9E12DE4224F PUSH20 0x64736F6C63430008140033000000000000000000 ",
							"sourceMap": "39983:469:0:-:0;;;40043:45;;;;;;;;;-1:-1:-1;22873:62:0;;;;;;;;;;;;-1:-1:-1;;;22873:62:0;;;;22915:13;22873:62;22915:7;:13::i;:::-;-1:-1:-1;1794:32:0;741:10;1794:18;:32::i;:::-;39983:469;;29915:86;29981:4;:13;29988:6;29981:4;:13;:::i;:::-;;29915:86;:::o;3284:187::-;3376:6;;;-1:-1:-1;;;;;3392:17:0;;;-1:-1:-1;;;;;;3392:17:0;;;;;;;3424:40;;3376:6;;;3392:17;3376:6;;3424:40;;3357:16;;3424:40;3347:124;3284:187;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:1;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:1;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:1;;;2580:26;2531:89;-1:-1:-1;;1335:1:1;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:1;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:1;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:1;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:1:o;:::-;39983:469:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1725": {
									"entryPoint": null,
									"id": 1725,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1881": {
									"entryPoint": 4404,
									"id": 1881,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1706": {
									"entryPoint": null,
									"id": 1706,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_burnBatch_1655": {
									"entryPoint": 2605,
									"id": 1655,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1532": {
									"entryPoint": 3803,
									"id": 1532,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_74": {
									"entryPoint": 1785,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1853": {
									"entryPoint": 4058,
									"id": 1853,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1788": {
									"entryPoint": 4477,
									"id": 1788,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mintBatch_1427": {
									"entryPoint": 1875,
									"id": 1427,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_1316": {
									"entryPoint": 3073,
									"id": 1316,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_1204": {
									"entryPoint": 2198,
									"id": 1204,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_1069": {
									"entryPoint": 3509,
									"id": 1069,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1687": {
									"entryPoint": 3286,
									"id": 1687,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_131": {
									"entryPoint": 2992,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOfBatch_839": {
									"entryPoint": 1106,
									"id": 839,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_775": {
									"entryPoint": 628,
									"id": 775,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@burnBatch_1948": {
									"entryPoint": 1402,
									"id": 1948,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@burn_1916": {
									"entryPoint": 1718,
									"id": 1916,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isApprovedForAll_874": {
									"entryPoint": null,
									"id": 874,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_149": {
									"entryPoint": null,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintBatch_2009": {
									"entryPoint": 1004,
									"id": 2009,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@mint_1986": {
									"entryPoint": 1493,
									"id": 1986,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@owner_60": {
									"entryPoint": null,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_88": {
									"entryPoint": 1474,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_952": {
									"entryPoint": 1030,
									"id": 952,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_912": {
									"entryPoint": 1528,
									"id": 912,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_856": {
									"entryPoint": 1513,
									"id": 856,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_493": {
									"entryPoint": null,
									"id": 493,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_735": {
									"entryPoint": 779,
									"id": 735,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_111": {
									"entryPoint": 1597,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@uri_747": {
									"entryPoint": 858,
									"id": 747,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 4663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 4993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 5103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 6095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 6216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 5908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 5722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6941,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7295,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 4958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 6438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6418,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6398,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4893,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 7061,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 7086,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 4730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:20648:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:1"
															},
															"nodeType": "YulIf",
															"src": "289:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:1",
														"type": ""
													}
												],
												"src": "192:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:1",
														"type": ""
													}
												],
												"src": "451:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:1"
															},
															"nodeType": "YulIf",
															"src": "687:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:1",
														"type": ""
													}
												],
												"src": "633:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:1"
															},
															"nodeType": "YulIf",
															"src": "848:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:1",
														"type": ""
													}
												],
												"src": "769:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:1",
														"type": ""
													}
												],
												"src": "1019:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1327:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:32:1"
															},
															"nodeType": "YulIf",
															"src": "1291:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1352:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1258:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:1",
														"type": ""
													}
												],
												"src": "1211:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:373:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:110:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:1",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1560:21:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1562:17:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:1",
																"statements": []
															},
															"src": "1538:162:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1724:3:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1729:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1720:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1720:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1738:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1716:27:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1745:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1709:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1756:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1771:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1784:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1792:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1780:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1780:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1801:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1797:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1797:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1776:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1776:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1767:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1763:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1423:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1430:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1438:3:1",
														"type": ""
													}
												],
												"src": "1396:423:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1945:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1962:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1955:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1985:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2011:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2034:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2019:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1993:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1993:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1985:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1914:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1925:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1936:4:1",
														"type": ""
													}
												],
												"src": "1824:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2081:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2098:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2105:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2110:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2101:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2091:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2091:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2091:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2138:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2141:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2131:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2131:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2162:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2165:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2155:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2049:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:202:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2238:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2260:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2276:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2282:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2272:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2272:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2291:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2287:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2287:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2268:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2268:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2256:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2242:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2371:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2373:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2373:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2373:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2314:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2326:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2311:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2311:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2350:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2362:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2347:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2347:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2308:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:62:1"
															},
															"nodeType": "YulIf",
															"src": "2305:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2409:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2413:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2402:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2210:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2218:4:1",
														"type": ""
													}
												],
												"src": "2181:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2504:114:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2548:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2550:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2550:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2550:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2520:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2528:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2517:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:30:1"
															},
															"nodeType": "YulIf",
															"src": "2514:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2579:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2595:1:1",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2591:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2591:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2607:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2587:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:25:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2579:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2484:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2495:4:1",
														"type": ""
													}
												],
												"src": "2435:183:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2687:660:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2736:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2745:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2748:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2738:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2738:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2738:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2715:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2723:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2711:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2711:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2730:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2707:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2707:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:35:1"
															},
															"nodeType": "YulIf",
															"src": "2697:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2761:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2784:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2771:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2771:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2765:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2800:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2810:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2804:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2823:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2873:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2833:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:43:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2827:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2885:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2899:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2889:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2937:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2945:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2917:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2917:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2917:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2957:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2968:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2961:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2990:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2998:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2983:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2983:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3010:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3021:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3029:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3017:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3017:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3010:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3041:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3063:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3075:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3078:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3071:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3071:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3059:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3059:23:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3084:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3055:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:32:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3045:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3115:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3124:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3127:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3117:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3117:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3117:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3102:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3110:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3099:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3099:15:1"
															},
															"nodeType": "YulIf",
															"src": "3096:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3140:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3163:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3151:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3151:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3144:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3231:86:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3252:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3270:3:1"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3257:12:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3257:17:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3245:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3245:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3245:30:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3288:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3299:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3304:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3295:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3295:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3288:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3186:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3191:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3183:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3183:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3199:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3201:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3212:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3217:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3208:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3208:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3201:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3179:3:1",
																"statements": []
															},
															"src": "3175:142:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3326:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3335:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3326:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2661:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2669:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2677:5:1",
														"type": ""
													}
												],
												"src": "2623:724:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3404:503:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3453:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3462:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3465:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3455:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3455:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3455:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3432:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3440:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3428:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3428:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3447:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3424:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3417:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3417:35:1"
															},
															"nodeType": "YulIf",
															"src": "3414:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3478:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3501:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3488:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3488:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3482:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3547:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3549:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3549:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3549:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3523:2:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3527:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3520:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3520:26:1"
															},
															"nodeType": "YulIf",
															"src": "3517:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3578:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3598:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3592:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3592:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3582:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3630:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3650:2:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3654:4:1",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3646:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3646:13:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3665:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3661:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3661:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3642:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3642:27:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3671:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3638:38:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3610:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:67:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3693:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3701:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3686:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3752:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3761:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3764:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3754:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3754:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3754:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3727:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3735:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3723:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3723:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3740:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3719:26:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3747:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3716:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3716:35:1"
															},
															"nodeType": "YulIf",
															"src": "3713:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3794:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3802:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3790:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3813:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3821:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3809:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3809:17:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3828:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3777:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3777:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3777:54:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3855:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3863:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3851:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3851:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3868:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3847:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3847:26:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3875:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3840:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3840:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3840:37:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3886:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3895:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3886:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3378:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3386:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3394:5:1",
														"type": ""
													}
												],
												"src": "3352:555:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4092:688:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4139:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4148:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4151:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4141:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4141:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4141:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4113:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4122:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4109:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4109:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4134:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4105:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4105:33:1"
															},
															"nodeType": "YulIf",
															"src": "4102:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4164:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4193:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4174:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4174:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4164:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4212:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4243:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4254:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4239:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4226:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4216:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4267:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4277:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4271:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4322:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4331:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4334:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4324:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4324:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4324:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4310:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4318:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4307:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4307:14:1"
															},
															"nodeType": "YulIf",
															"src": "4304:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4347:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4390:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4401:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4386:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4386:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4410:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4357:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4357:61:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4347:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4427:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4460:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4471:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4456:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4456:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4443:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4443:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4431:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4504:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4513:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4516:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4506:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4506:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4506:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4490:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4500:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4487:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:1"
															},
															"nodeType": "YulIf",
															"src": "4484:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4529:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4572:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4583:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4568:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4568:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4594:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4539:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4539:63:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4611:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4644:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4655:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4640:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4640:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4627:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4627:32:1"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4615:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4688:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4697:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4700:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4690:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4690:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4690:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4674:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4684:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4671:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4671:16:1"
															},
															"nodeType": "YulIf",
															"src": "4668:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4713:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4744:9:1"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4755:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4740:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4740:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4766:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4723:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4723:51:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4713:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4034:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4045:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4057:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4065:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4073:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4081:6:1",
														"type": ""
													}
												],
												"src": "3912:868:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4982:746:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5029:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5038:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5041:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5031:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5031:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5031:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5003:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5012:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4999:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5024:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4995:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4995:33:1"
															},
															"nodeType": "YulIf",
															"src": "4992:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5054:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5083:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5064:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5064:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5054:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5102:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5135:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5146:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5131:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5131:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5112:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5112:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5102:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5159:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5190:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5201:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5186:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5186:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5173:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5173:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5163:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5214:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5224:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5218:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5269:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5278:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5281:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5271:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5271:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5271:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5257:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5265:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5254:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5254:14:1"
															},
															"nodeType": "YulIf",
															"src": "5251:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5294:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5337:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5348:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5333:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5333:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5357:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5304:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5304:61:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5294:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5374:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5418:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5403:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5390:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5390:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5378:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5451:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5460:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5463:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5453:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5453:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5453:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5437:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5447:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5434:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5434:16:1"
															},
															"nodeType": "YulIf",
															"src": "5431:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5476:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5519:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5530:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5515:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5541:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5486:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5486:63:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5476:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5558:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5591:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5602:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5587:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5587:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5574:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5574:33:1"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "5562:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5636:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5645:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5648:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5638:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5638:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5638:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "5622:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5632:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5619:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5619:16:1"
															},
															"nodeType": "YulIf",
															"src": "5616:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5661:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5692:9:1"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "5703:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5688:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5688:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5714:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5671:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5671:51:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5661:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4916:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4927:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4939:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4947:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4955:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4963:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4971:6:1",
														"type": ""
													}
												],
												"src": "4785:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5870:1071:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5916:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5925:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5928:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5918:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5918:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5918:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5891:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5900:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5887:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5887:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5912:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5883:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5883:32:1"
															},
															"nodeType": "YulIf",
															"src": "5880:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5941:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5968:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5955:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5955:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5945:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5987:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5997:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5991:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6042:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6051:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6054:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6044:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6044:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6044:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6030:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6038:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6027:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6027:14:1"
															},
															"nodeType": "YulIf",
															"src": "6024:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6067:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6081:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6092:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6077:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6077:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6071:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6147:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6156:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6159:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6149:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6149:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6149:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "6126:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6130:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6122:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6122:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6137:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6118:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6118:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6111:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6111:35:1"
															},
															"nodeType": "YulIf",
															"src": "6108:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6172:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6195:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6182:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6182:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "6176:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6207:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6217:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "6211:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6230:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6280:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6240:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6240:43:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "6234:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6292:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6312:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6306:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6306:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "6296:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6344:6:1"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "6352:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6324:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6324:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6324:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6364:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6375:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6368:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6397:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6405:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6390:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6390:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6390:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6417:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6428:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6436:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6424:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6424:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6417:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6448:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "6470:2:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6478:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "6481:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6474:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6474:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6466:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6466:19:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6487:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6462:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6462:28:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6452:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6522:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6531:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6534:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6524:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6524:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6524:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6505:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6513:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6502:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6502:19:1"
															},
															"nodeType": "YulIf",
															"src": "6499:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6547:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6562:2:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6566:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6558:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6558:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "6551:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6634:92:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6655:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "6679:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "6660:18:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6660:23:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6648:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6648:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6648:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6697:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6708:3:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "6713:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6704:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6704:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6697:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6589:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6594:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6586:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6586:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6602:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6604:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6615:3:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "6620:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6611:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6611:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6604:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6582:3:1",
																"statements": []
															},
															"src": "6578:148:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6735:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6745:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6735:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6760:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6793:9:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "6804:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6789:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6789:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6776:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6776:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "6764:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6837:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6846:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6849:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6839:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6839:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6839:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6823:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6833:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6820:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6820:16:1"
															},
															"nodeType": "YulIf",
															"src": "6817:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6862:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6905:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6916:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6901:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6901:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6927:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6872:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6872:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6862:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5828:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5839:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5851:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5859:6:1",
														"type": ""
													}
												],
												"src": "5733:1208:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7007:374:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7017:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7037:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7031:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7031:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7021:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7059:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7064:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7052:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7052:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7052:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7080:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7090:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7084:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7103:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7114:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7119:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7110:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7110:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7103:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7131:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7149:5:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7156:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7145:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7145:14:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7135:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7168:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7177:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7172:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7236:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7257:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "7268:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7262:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7262:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7250:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7250:26:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7250:26:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7289:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7300:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7305:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7296:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7296:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7289:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7321:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7335:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7343:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7331:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7331:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7198:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7201:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7195:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7209:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7211:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7220:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7223:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7216:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7216:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7211:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7191:3:1",
																"statements": []
															},
															"src": "7187:169:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7365:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7372:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7365:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6984:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6991:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6999:3:1",
														"type": ""
													}
												],
												"src": "6946:435:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7537:110:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7554:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7565:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7547:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7547:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7547:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7577:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7614:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7626:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7637:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7622:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7622:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7585:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7585:56:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7577:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7506:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7517:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7528:4:1",
														"type": ""
													}
												],
												"src": "7386:261:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7806:515:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7852:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7861:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7864:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7854:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7854:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7854:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7827:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7836:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7823:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7823:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7848:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7819:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7819:32:1"
															},
															"nodeType": "YulIf",
															"src": "7816:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7877:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7906:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7887:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7887:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7877:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7925:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7956:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7967:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7952:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7952:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7939:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7939:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7929:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7980:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7990:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7984:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8035:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8044:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8047:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8037:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8037:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8037:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8023:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8031:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8020:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8020:14:1"
															},
															"nodeType": "YulIf",
															"src": "8017:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8060:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8103:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8114:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8099:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8099:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8123:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8070:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8070:61:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8060:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8140:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8173:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8184:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8169:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8169:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8156:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8156:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "8144:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8217:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8226:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8229:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8219:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8219:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8219:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "8203:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8213:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8200:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8200:16:1"
															},
															"nodeType": "YulIf",
															"src": "8197:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8242:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8285:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "8296:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8281:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8281:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8307:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8252:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8252:63:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8242:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7756:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7767:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7779:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7787:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7795:6:1",
														"type": ""
													}
												],
												"src": "7652:669:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8456:401:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8503:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8512:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8515:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8505:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8505:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8505:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8477:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8486:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8473:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8473:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8498:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8469:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8469:33:1"
															},
															"nodeType": "YulIf",
															"src": "8466:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8528:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8557:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8538:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8538:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8528:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8576:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8603:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8614:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8599:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8599:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8586:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8586:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8576:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8627:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8654:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8665:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8650:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8650:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8637:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8637:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8627:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8678:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8709:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8720:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8705:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8692:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8692:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8682:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8767:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8776:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8779:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8769:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8769:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8769:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8739:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8747:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8736:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8736:30:1"
															},
															"nodeType": "YulIf",
															"src": "8733:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8792:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8823:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8834:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8819:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8819:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8843:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8802:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8802:49:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "8792:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8398:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8409:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8421:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8429:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8437:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8445:6:1",
														"type": ""
													}
												],
												"src": "8326:531:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8963:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8973:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8985:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8996:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8981:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8981:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8973:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9015:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9030:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9046:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9051:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9042:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9042:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9055:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9038:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9038:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9026:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9026:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9008:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9008:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9008:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8932:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8943:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8954:4:1",
														"type": ""
													}
												],
												"src": "8862:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9154:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9200:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9209:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9212:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9202:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9202:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9175:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9184:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9171:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9171:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9196:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9167:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9167:32:1"
															},
															"nodeType": "YulIf",
															"src": "9164:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9225:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9254:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9235:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9235:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9225:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9273:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9303:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9314:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9299:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9286:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9286:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9277:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9371:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9380:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9383:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9373:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9373:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9373:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9340:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "9361:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "9354:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9354:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9347:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9347:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9337:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9337:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9330:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9330:40:1"
															},
															"nodeType": "YulIf",
															"src": "9327:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9396:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9406:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9396:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9112:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9123:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9135:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9143:6:1",
														"type": ""
													}
												],
												"src": "9070:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9509:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9555:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9564:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9567:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9557:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9557:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9557:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9530:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9539:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9526:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9526:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9551:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9522:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9522:32:1"
															},
															"nodeType": "YulIf",
															"src": "9519:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9580:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9609:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9590:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9590:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9580:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9628:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9661:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9672:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9657:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9657:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9638:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9638:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9628:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9467:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9478:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9490:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9498:6:1",
														"type": ""
													}
												],
												"src": "9422:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9834:459:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9881:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9890:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9893:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9883:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9883:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9883:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9855:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9864:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9851:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9851:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9876:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9847:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9847:33:1"
															},
															"nodeType": "YulIf",
															"src": "9844:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9906:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9935:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9916:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9916:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9906:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9954:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9987:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9998:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9983:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9983:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9964:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9964:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9954:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10011:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10038:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10049:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10034:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10034:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10021:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10021:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "10011:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10062:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10089:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10100:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10085:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10072:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10072:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "10062:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10113:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10144:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10155:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10140:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10140:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10127:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10127:33:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "10117:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10203:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10212:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10215:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10205:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10205:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10205:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10175:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10183:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10172:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10172:30:1"
															},
															"nodeType": "YulIf",
															"src": "10169:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10228:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10259:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10270:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10255:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10255:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10279:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "10238:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10238:49:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "10228:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9768:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9779:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9791:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9799:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9807:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9815:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9823:6:1",
														"type": ""
													}
												],
												"src": "9687:606:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10368:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10414:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10423:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10426:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10416:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10416:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10416:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10389:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10398:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10385:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10385:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10410:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10381:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10381:32:1"
															},
															"nodeType": "YulIf",
															"src": "10378:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10439:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10468:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10449:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10449:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10439:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10334:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10345:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10357:6:1",
														"type": ""
													}
												],
												"src": "10298:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10593:218:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10639:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10648:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10651:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10641:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10641:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10641:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10614:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10623:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10610:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10610:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10635:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10606:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:32:1"
															},
															"nodeType": "YulIf",
															"src": "10603:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10664:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10693:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10674:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10674:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10664:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10712:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10739:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10750:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10735:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10735:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10722:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10722:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "10712:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10763:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10790:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10801:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10786:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10786:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10773:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10773:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "10763:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10543:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10554:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10566:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10574:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10582:6:1",
														"type": ""
													}
												],
												"src": "10489:322:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10990:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11007:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11018:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11000:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11000:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11000:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11041:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11052:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11037:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11037:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11057:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11030:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11030:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11030:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11080:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11091:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11076:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11076:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11096:34:1",
																		"type": "",
																		"value": "ERC1155: address zero is not a v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11069:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11069:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11069:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11151:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11162:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11147:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11147:18:1"
																	},
																	{
																		"hexValue": "616c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11167:12:1",
																		"type": "",
																		"value": "alid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11140:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11140:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11140:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11189:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11201:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11212:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11197:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11197:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11189:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10967:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10981:4:1",
														"type": ""
													}
												],
												"src": "10816:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11282:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11292:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11306:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11309:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "11302:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11302:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11292:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11323:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11353:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11359:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11349:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11349:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11327:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11400:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11402:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11416:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11424:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11412:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11412:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11402:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11380:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11373:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11373:26:1"
															},
															"nodeType": "YulIf",
															"src": "11370:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11490:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11511:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11518:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11523:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11514:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11514:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11504:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11504:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11504:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11555:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11558:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11548:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11548:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11548:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11583:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11586:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11576:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11576:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11576:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11446:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11469:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11477:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11466:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11466:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11443:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11443:38:1"
															},
															"nodeType": "YulIf",
															"src": "11440:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11262:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11271:6:1",
														"type": ""
													}
												],
												"src": "11227:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11786:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11803:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11814:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11796:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11796:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11796:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11837:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11848:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11833:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11833:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11853:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11826:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11826:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11826:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11876:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11887:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11872:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11872:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11892:34:1",
																		"type": "",
																		"value": "ERC1155: caller is not token own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11865:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11865:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11865:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11947:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11958:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11943:18:1"
																	},
																	{
																		"hexValue": "6572206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11963:16:1",
																		"type": "",
																		"value": "er or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11936:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11936:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11936:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11989:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12001:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12012:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11997:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11997:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11989:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11763:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11777:4:1",
														"type": ""
													}
												],
												"src": "11612:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12201:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12218:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12229:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12211:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12211:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12211:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12252:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12263:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12248:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12248:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12268:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12241:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12241:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12241:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12291:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12302:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12287:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12287:18:1"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12307:34:1",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12280:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12280:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12280:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12362:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12373:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12358:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12358:18:1"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12378:11:1",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12351:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12351:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12351:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12399:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12411:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12422:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12407:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12407:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12399:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12178:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12192:4:1",
														"type": ""
													}
												],
												"src": "12027:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12469:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12486:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12493:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12498:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12489:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12489:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12479:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12479:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12479:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12526:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12529:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12519:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12519:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12519:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12550:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12553:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12543:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12543:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12437:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12601:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12618:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12625:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12630:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12621:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12621:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12611:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12611:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12611:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12658:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12661:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12651:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12651:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12651:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12682:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12685:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12675:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12675:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12675:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12569:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12748:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12779:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12781:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12781:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12781:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12764:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12775:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12771:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12771:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12761:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12761:17:1"
															},
															"nodeType": "YulIf",
															"src": "12758:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12810:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12821:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12828:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12817:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12817:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12810:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12730:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12740:3:1",
														"type": ""
													}
												],
												"src": "12701:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13015:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13032:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13043:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13025:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13025:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13025:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13066:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13077:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13062:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13062:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13082:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13055:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13055:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13055:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13105:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13116:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13101:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13121:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13094:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13094:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13094:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13176:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13187:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13172:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13172:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13192:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13165:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13165:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13210:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13222:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13233:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13218:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13218:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13210:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12992:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13006:4:1",
														"type": ""
													}
												],
												"src": "12841:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13422:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13439:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13450:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13432:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13432:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13432:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13473:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13484:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13469:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13469:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13489:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13462:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13462:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13462:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13512:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13523:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13508:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13508:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13528:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13501:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13501:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13501:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13572:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13584:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13595:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13580:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13580:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13572:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13399:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13413:4:1",
														"type": ""
													}
												],
												"src": "13248:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13783:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13800:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13811:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13793:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13793:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13834:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13845:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13830:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13830:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13850:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13823:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13823:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13823:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13873:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13884:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13869:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13869:18:1"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13889:34:1",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13862:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13862:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13862:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13944:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13955:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13940:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13940:18:1"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13960:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13933:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13933:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13933:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13973:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13985:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13996:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13981:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13981:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13973:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13760:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13774:4:1",
														"type": ""
													}
												],
												"src": "13609:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14185:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14202:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14213:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14195:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14195:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14195:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14236:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14247:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14232:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14232:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14252:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14225:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14225:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14225:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14275:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14286:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14271:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14271:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14291:34:1",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14264:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14264:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14264:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14346:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14357:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14342:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14342:18:1"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14362:10:1",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14335:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14335:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14382:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14394:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14405:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14390:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14390:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14382:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14162:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14176:4:1",
														"type": ""
													}
												],
												"src": "14011:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14468:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14478:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14489:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14492:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14485:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14485:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14478:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14517:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14519:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14519:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14519:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14509:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "14512:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14506:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14506:10:1"
															},
															"nodeType": "YulIf",
															"src": "14503:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14451:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14454:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14460:3:1",
														"type": ""
													}
												],
												"src": "14420:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14779:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14796:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14807:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14789:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14789:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14789:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14819:70:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14862:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14874:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14885:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14870:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14870:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "14833:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14833:56:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "14823:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14909:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14920:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14905:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14905:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "14929:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14925:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14925:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14898:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14898:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14957:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14994:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "15002:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "14965:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14965:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14957:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14740:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14751:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14759:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14770:4:1",
														"type": ""
													}
												],
												"src": "14550:465:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15194:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15211:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15222:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15204:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15204:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15204:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15245:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15256:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15241:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15241:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15261:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15234:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15234:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15284:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15295:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15280:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15300:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15273:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15273:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15355:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15366:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15351:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15351:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15371:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15344:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15344:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15344:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15388:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15400:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15411:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15396:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15396:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15388:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15171:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15185:4:1",
														"type": ""
													}
												],
												"src": "15020:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15600:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15617:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15628:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15610:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15610:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15651:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15662:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15647:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15667:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15640:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15640:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15690:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15701:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15686:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15686:18:1"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15706:34:1",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15679:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15679:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15761:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15772:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15757:18:1"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15777:12:1",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15750:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15750:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15799:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15811:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15822:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15807:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15807:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15799:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15577:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15591:4:1",
														"type": ""
													}
												],
												"src": "15426:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16011:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16028:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16039:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16021:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16021:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16021:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16062:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16073:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16058:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16058:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16078:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16051:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16051:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16051:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16101:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16112:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16097:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16097:18:1"
																	},
																	{
																		"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16117:34:1",
																		"type": "",
																		"value": "ERC1155: burn from the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16090:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16090:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16172:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16183:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16168:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16168:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16188:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16161:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16161:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16161:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16203:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16215:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16226:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16211:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16211:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16203:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15988:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16002:4:1",
														"type": ""
													}
												],
												"src": "15837:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16415:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16432:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16443:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16425:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16425:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16425:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16466:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16477:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16462:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16462:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16482:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16455:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16455:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16455:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16505:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16516:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16501:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16501:18:1"
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16521:34:1",
																		"type": "",
																		"value": "ERC1155: burn amount exceeds bal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16494:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16494:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16494:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16576:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16587:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16572:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16572:18:1"
																	},
																	{
																		"hexValue": "616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16592:6:1",
																		"type": "",
																		"value": "ance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16565:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16565:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16565:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16608:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16620:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16631:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16616:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16616:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16608:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16392:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16406:4:1",
														"type": ""
													}
												],
												"src": "16241:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16775:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16785:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16797:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16808:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16793:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16793:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16785:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16827:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16838:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16820:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16820:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16820:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16865:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16876:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16861:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16861:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16881:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16854:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16854:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16854:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16736:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16747:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16755:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16766:4:1",
														"type": ""
													}
												],
												"src": "16646:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17073:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17090:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17101:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17083:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17083:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17083:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17124:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17135:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17120:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17120:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17140:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17113:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17113:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17163:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17174:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17159:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17159:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17179:34:1",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17152:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17152:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17152:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17234:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17245:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17230:18:1"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17250:11:1",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17223:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17223:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17271:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17283:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17294:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17279:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17279:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17271:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17050:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17064:4:1",
														"type": ""
													}
												],
												"src": "16899:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17640:496:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17650:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17668:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17673:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17664:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17664:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17677:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "17660:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17660:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "17654:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17695:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "17710:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "17718:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17706:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17706:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17688:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17688:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17688:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17742:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17753:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17738:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17738:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "17762:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "17770:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17758:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17758:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17731:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17731:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17731:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17794:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17805:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17790:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17810:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17783:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17783:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17783:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17823:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17866:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17878:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17889:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17874:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17874:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "17837:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17837:57:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "17827:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17914:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17925:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17910:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17910:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "17934:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17942:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17930:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17930:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17903:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17903:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17903:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17962:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "18005:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "18013:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "17976:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17976:44:1"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "17966:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18040:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18051:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18036:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "18061:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18069:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18057:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18057:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18029:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18029:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18029:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18089:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "18115:6:1"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "18123:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "18097:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18097:33:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18089:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17577:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "17588:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "17596:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17604:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17612:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17620:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17631:4:1",
														"type": ""
													}
												],
												"src": "17309:827:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18221:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18267:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18276:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18279:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18269:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18269:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18269:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18242:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18251:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18238:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18238:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18263:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "18234:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18234:32:1"
															},
															"nodeType": "YulIf",
															"src": "18231:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18292:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18311:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18305:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18305:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "18296:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18354:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "18330:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18330:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18330:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18369:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "18379:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "18369:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18187:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "18198:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18210:6:1",
														"type": ""
													}
												],
												"src": "18141:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18438:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18483:85:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18512:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18515:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18518:1:1",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "18497:14:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18497:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18497:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "18533:25:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18544:3:1",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "18555:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "18549:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18549:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "18540:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18540:18:1"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "18533:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "18454:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18454:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18472:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18451:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18451:23:1"
															},
															"nodeType": "YulIf",
															"src": "18448:120:1"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "18430:3:1",
														"type": ""
													}
												],
												"src": "18395:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18626:624:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18666:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "18668:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "18642:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18642:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18660:4:1",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "18639:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18639:26:1"
															},
															"nodeType": "YulIf",
															"src": "18636:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18684:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18702:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18696:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18696:9:1"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "18688:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18714:16:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18728:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "18724:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18724:6:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "18718:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18754:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18760:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "18767:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18767:16:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18785:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18763:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18763:25:1"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "18739:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18739:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18739:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18798:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18818:4:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18812:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18812:11:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "18802:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18832:26:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "18842:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18842:16:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "18836:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18867:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18877:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "18871:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18953:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "18955:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "18913:6:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "18921:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "18910:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18910:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18933:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18941:4:1",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18929:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18929:17:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "18948:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "18926:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18926:25:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "18907:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18907:45:1"
															},
															"nodeType": "YulIf",
															"src": "18904:58:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18971:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18986:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "18992:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18982:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18982:17:1"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "18975:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19008:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "19028:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19022:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19022:10:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "19012:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19059:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "19061:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19047:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "19055:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19044:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19044:14:1"
															},
															"nodeType": "YulIf",
															"src": "19041:27:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19150:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "19152:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "19091:3:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "19096:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19087:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19087:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19105:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19083:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19083:27:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "19120:4:1"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "19126:14:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19126:16:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19116:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19116:27:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19145:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19112:36:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19080:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19080:69:1"
															},
															"nodeType": "YulIf",
															"src": "19077:82:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19188:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19202:6:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "19210:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19198:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19198:19:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19219:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19194:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19194:30:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "19168:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19168:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19168:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19234:10:1",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "19241:3:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "19234:3:1"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "18618:3:1",
														"type": ""
													}
												],
												"src": "18579:671:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19429:242:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19446:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19457:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19439:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19439:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19480:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19491:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19476:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19476:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19496:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19469:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19469:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19469:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19519:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19530:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19515:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19535:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to non-ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19508:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19508:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19508:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19590:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19601:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19586:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19586:18:1"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19606:22:1",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19579:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19579:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19579:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19638:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19650:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19661:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19646:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19646:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19638:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19406:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19420:4:1",
														"type": ""
													}
												],
												"src": "19255:416:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19850:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19867:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19878:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19860:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19860:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19901:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19912:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19897:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19897:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19917:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19890:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19890:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19890:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19940:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19951:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19936:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19936:18:1"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19956:34:1",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19929:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19929:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19929:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20011:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20022:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20007:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20007:18:1"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20027:10:1",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20000:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20000:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20000:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20047:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20059:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20070:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20055:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20055:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20047:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19827:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19841:4:1",
														"type": ""
													}
												],
												"src": "19676:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20316:330:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20326:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20344:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20349:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "20340:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20340:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20353:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20336:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20336:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "20330:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20371:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "20386:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "20394:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20382:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20364:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20364:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20364:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20418:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20429:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20414:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20414:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "20438:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "20446:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20434:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20434:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20407:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20407:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20407:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20470:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20481:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20466:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20466:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20486:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20459:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20459:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20459:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20513:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20524:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20509:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20509:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "20529:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20502:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20502:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20556:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20567:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20552:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20552:19:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20573:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20545:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20545:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20545:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20586:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "20612:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20624:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20635:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20620:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20620:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "20594:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20594:46:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20586:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20253:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "20264:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "20272:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20280:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20288:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20307:4:1",
														"type": ""
													}
												],
												"src": "20085:561:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC1155: burn from the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC1155: burn amount exceeds bal\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100ef575f3560e01c8063715018a611610093578063e985e9c511610063578063e985e9c514610200578063f242432a1461023b578063f2fde38b1461024e578063f5298aca14610261575f80fd5b8063715018a6146101b7578063731133e9146101bf5780638da5cb5b146101d2578063a22cb465146101ed575f80fd5b80631f7fdffa116100ce5780631f7fdffa1461015c5780632eb2c2d6146101715780634e1273f4146101845780636b20c454146101a4575f80fd5b8062fdd58e146100f357806301ffc9a7146101195780630e89341c1461013c575b5f80fd5b610106610101366004611252565b610274565b6040519081526020015b60405180910390f35b61012c61012736600461128f565b61030b565b6040519015158152602001610110565b61014f61014a3660046112b1565b61035a565b604051610110919061130b565b61016f61016a36600461145f565b6103ec565b005b61016f61017f3660046114f2565b610406565b610197610192366004611595565b610452565b6040516101109190611693565b61016f6101b23660046116a5565b61057a565b61016f6105c2565b61016f6101cd366004611714565b6105d5565b6003546040516001600160a01b039091168152602001610110565b61016f6101fb366004611765565b6105e9565b61012c61020e36600461179e565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b61016f6102493660046117cf565b6105f8565b61016f61025c36600461182f565b61063d565b61016f61026f366004611848565b6106b6565b5f6001600160a01b0383166102e35760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b505f818152602081815260408083206001600160a01b03861684529091529020545b92915050565b5f6001600160e01b03198216636cdb3d1360e11b148061033b57506001600160e01b031982166303a24d0760e21b145b8061030557506301ffc9a760e01b6001600160e01b0319831614610305565b60606002805461036990611878565b80601f016020809104026020016040519081016040528092919081815260200182805461039590611878565b80156103e05780601f106103b7576101008083540402835291602001916103e0565b820191905f5260205f20905b8154815290600101906020018083116103c357829003601f168201915b50505050509050919050565b6103f46106f9565b61040084848484610753565b50505050565b6001600160a01b0385163314806104225750610422853361020e565b61043e5760405162461bcd60e51b81526004016102da906118b0565b61044b8585858585610896565b5050505050565b606081518351146104b75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016102da565b5f835167ffffffffffffffff8111156104d2576104d261131d565b6040519080825280602002602001820160405280156104fb578160200160208202803683370190505b5090505f5b84518110156105725761054585828151811061051e5761051e6118fe565b6020026020010151858381518110610538576105386118fe565b6020026020010151610274565b828281518110610557576105576118fe565b602090810291909101015261056b81611926565b9050610500565b509392505050565b6001600160a01b0383163314806105965750610596833361020e565b6105b25760405162461bcd60e51b81526004016102da906118b0565b6105bd838383610a2d565b505050565b6105ca6106f9565b6105d35f610bb0565b565b6105dd6106f9565b61040084848484610c01565b6105f4338383610cd6565b5050565b6001600160a01b0385163314806106145750610614853361020e565b6106305760405162461bcd60e51b81526004016102da906118b0565b61044b8585858585610db5565b6106456106f9565b6001600160a01b0381166106aa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102da565b6106b381610bb0565b50565b6001600160a01b0383163314806106d257506106d2833361020e565b6106ee5760405162461bcd60e51b81526004016102da906118b0565b6105bd838383610edb565b6003546001600160a01b031633146105d35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102da565b6001600160a01b0384166107795760405162461bcd60e51b81526004016102da9061193e565b815183511461079a5760405162461bcd60e51b81526004016102da9061197f565b335f5b8451811015610830578381815181106107b8576107b86118fe565b60200260200101515f808784815181106107d4576107d46118fe565b602002602001015181526020019081526020015f205f886001600160a01b03166001600160a01b031681526020019081526020015f205f82825461081891906119c7565b9091555081905061082881611926565b91505061079d565b50846001600160a01b03165f6001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516108809291906119da565b60405180910390a461044b815f87878787610fda565b81518351146108b75760405162461bcd60e51b81526004016102da9061197f565b6001600160a01b0384166108dd5760405162461bcd60e51b81526004016102da90611a07565b335f5b84518110156109bf575f8582815181106108fc576108fc6118fe565b602002602001015190505f858381518110610919576109196118fe565b6020908102919091018101515f84815280835260408082206001600160a01b038e1683529093529190912054909150818110156109685760405162461bcd60e51b81526004016102da90611a4c565b5f838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906109a49084906119c7565b92505081905550505050806109b890611926565b90506108e0565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a0f9291906119da565b60405180910390a4610a25818787878787610fda565b505050505050565b6001600160a01b038316610a535760405162461bcd60e51b81526004016102da90611a96565b8051825114610a745760405162461bcd60e51b81526004016102da9061197f565b60408051602081019091525f9081905233905b8351811015610b45575f848281518110610aa357610aa36118fe565b602002602001015190505f848381518110610ac057610ac06118fe565b6020908102919091018101515f84815280835260408082206001600160a01b038c168352909352919091205490915081811015610b0f5760405162461bcd60e51b81526004016102da90611ad9565b5f928352602083815260408085206001600160a01b038b1686529091529092209103905580610b3d81611926565b915050610a87565b505f6001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610b959291906119da565b60405180910390a460408051602081019091525f9052610400565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038416610c275760405162461bcd60e51b81526004016102da9061193e565b335f610c3285611134565b90505f610c3e85611134565b90505f868152602081815260408083206001600160a01b038b16845290915281208054879290610c6f9084906119c7565b909155505060408051878152602081018790526001600160a01b03808a16925f92918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610ccd835f8989898961117d565b50505050505050565b816001600160a01b0316836001600160a01b031603610d495760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016102da565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610ddb5760405162461bcd60e51b81526004016102da90611a07565b335f610de685611134565b90505f610df285611134565b90505f868152602081815260408083206001600160a01b038c16845290915290205485811015610e345760405162461bcd60e51b81526004016102da90611a4c565b5f878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610e709084906119c7565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610ed0848a8a8a8a8a61117d565b505050505050505050565b6001600160a01b038316610f015760405162461bcd60e51b81526004016102da90611a96565b335f610f0c84611134565b90505f610f1884611134565b60408051602080820183525f918290528882528181528282206001600160a01b038b1683529052205490915084811015610f645760405162461bcd60e51b81526004016102da90611ad9565b5f868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a460408051602081019091525f9052610ccd565b6001600160a01b0384163b15610a255760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061101e9089908990889088908890600401611b1d565b6020604051808303815f875af1925050508015611058575060408051601f3d908101601f1916820190925261105591810190611b7a565b60015b61110457611064611b95565b806308c379a00361109d5750611078611bae565b80611083575061109f565b8060405162461bcd60e51b81526004016102da919061130b565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016102da565b6001600160e01b0319811663bc197c8160e01b14610ccd5760405162461bcd60e51b81526004016102da90611c37565b6040805160018082528183019092526060915f91906020808301908036833701905050905082815f8151811061116c5761116c6118fe565b602090810291909101015292915050565b6001600160a01b0384163b15610a255760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906111c19089908990889088908890600401611c7f565b6020604051808303815f875af19250505080156111fb575060408051601f3d908101601f191682019092526111f891810190611b7a565b60015b61120757611064611b95565b6001600160e01b0319811663f23a6e6160e01b14610ccd5760405162461bcd60e51b81526004016102da90611c37565b80356001600160a01b038116811461124d575f80fd5b919050565b5f8060408385031215611263575f80fd5b61126c83611237565b946020939093013593505050565b6001600160e01b0319811681146106b3575f80fd5b5f6020828403121561129f575f80fd5b81356112aa8161127a565b9392505050565b5f602082840312156112c1575f80fd5b5035919050565b5f81518084525f5b818110156112ec576020818501810151868301820152016112d0565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f6112aa60208301846112c8565b634e487b7160e01b5f52604160045260245ffd5b601f8201601f1916810167ffffffffffffffff811182821017156113575761135761131d565b6040525050565b5f67ffffffffffffffff8211156113775761137761131d565b5060051b60200190565b5f82601f830112611390575f80fd5b8135602061139d8261135e565b6040516113aa8282611331565b83815260059390931b85018201928281019150868411156113c9575f80fd5b8286015b848110156113e457803583529183019183016113cd565b509695505050505050565b5f82601f8301126113fe575f80fd5b813567ffffffffffffffff8111156114185761141861131d565b60405161142f601f8301601f191660200182611331565b818152846020838601011115611443575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f8060808587031215611472575f80fd5b61147b85611237565b9350602085013567ffffffffffffffff80821115611497575f80fd5b6114a388838901611381565b945060408701359150808211156114b8575f80fd5b6114c488838901611381565b935060608701359150808211156114d9575f80fd5b506114e6878288016113ef565b91505092959194509250565b5f805f805f60a08688031215611506575f80fd5b61150f86611237565b945061151d60208701611237565b9350604086013567ffffffffffffffff80821115611539575f80fd5b61154589838a01611381565b9450606088013591508082111561155a575f80fd5b61156689838a01611381565b9350608088013591508082111561157b575f80fd5b50611588888289016113ef565b9150509295509295909350565b5f80604083850312156115a6575f80fd5b823567ffffffffffffffff808211156115bd575f80fd5b818501915085601f8301126115d0575f80fd5b813560206115dd8261135e565b6040516115ea8282611331565b83815260059390931b8501820192828101915089841115611609575f80fd5b948201945b8386101561162e5761161f86611237565b8252948201949082019061160e565b96505086013592505080821115611643575f80fd5b5061165085828601611381565b9150509250929050565b5f8151808452602080850194508084015f5b838110156116885781518752958201959082019060010161166c565b509495945050505050565b602081525f6112aa602083018461165a565b5f805f606084860312156116b7575f80fd5b6116c084611237565b9250602084013567ffffffffffffffff808211156116dc575f80fd5b6116e887838801611381565b935060408601359150808211156116fd575f80fd5b5061170a86828701611381565b9150509250925092565b5f805f8060808587031215611727575f80fd5b61173085611237565b93506020850135925060408501359150606085013567ffffffffffffffff811115611759575f80fd5b6114e6878288016113ef565b5f8060408385031215611776575f80fd5b61177f83611237565b915060208301358015158114611793575f80fd5b809150509250929050565b5f80604083850312156117af575f80fd5b6117b883611237565b91506117c660208401611237565b90509250929050565b5f805f805f60a086880312156117e3575f80fd5b6117ec86611237565b94506117fa60208701611237565b93506040860135925060608601359150608086013567ffffffffffffffff811115611823575f80fd5b611588888289016113ef565b5f6020828403121561183f575f80fd5b6112aa82611237565b5f805f6060848603121561185a575f80fd5b61186384611237565b95602085013595506040909401359392505050565b600181811c9082168061188c57607f821691505b6020821081036118aa57634e487b7160e01b5f52602260045260245ffd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f6001820161193757611937611912565b5060010190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b8082018082111561030557610305611912565b604081525f6119ec604083018561165a565b82810360208401526119fe818561165a565b95945050505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6001600160a01b0386811682528516602082015260a0604082018190525f90611b489083018661165a565b8281036060840152611b5a818661165a565b90508281036080840152611b6e81856112c8565b98975050505050505050565b5f60208284031215611b8a575f80fd5b81516112aa8161127a565b5f60033d1115611bab5760045f803e505f5160e01c5b90565b5f60443d1015611bbb5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611beb57505050505090565b8285019150815181811115611c035750505050505090565b843d8701016020828501011115611c1d5750505050505090565b611c2c60208286010187611331565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190525f90611cb8908301846112c8565b97965050505050505056fea26469706673582212204d0a3e93e39627f87501370bb13f5b7f7a9a549d48863dcd03f9e12de4224f7364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEF JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x261 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1ED JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F7FDFFA GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x1A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x106 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x1252 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12C PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x128F JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x130B JUMP JUMPDEST PUSH2 0x16F PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x145F JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x14F2 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x16A5 JUMP JUMPDEST PUSH2 0x57A JUMP JUMPDEST PUSH2 0x16F PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1714 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x5E9 JUMP JUMPDEST PUSH2 0x12C PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x182F JUMP JUMPDEST PUSH2 0x63D JUMP JUMPDEST PUSH2 0x16F PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x1848 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x33B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x305 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x305 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x369 SWAP1 PUSH2 0x1878 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x395 SWAP1 PUSH2 0x1878 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F4 PUSH2 0x6F9 JUMP JUMPDEST PUSH2 0x400 DUP5 DUP5 DUP5 DUP5 PUSH2 0x753 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x422 JUMPI POP PUSH2 0x422 DUP6 CALLER PUSH2 0x20E JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0x44B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x896 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D2 JUMPI PUSH2 0x4D2 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x572 JUMPI PUSH2 0x545 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x51E JUMPI PUSH2 0x51E PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x538 JUMPI PUSH2 0x538 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x274 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x557 JUMPI PUSH2 0x557 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x56B DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP1 POP PUSH2 0x500 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x596 JUMPI POP PUSH2 0x596 DUP4 CALLER PUSH2 0x20E JUMP JUMPDEST PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0x5BD DUP4 DUP4 DUP4 PUSH2 0xA2D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x6F9 JUMP JUMPDEST PUSH2 0x5D3 PUSH0 PUSH2 0xBB0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5DD PUSH2 0x6F9 JUMP JUMPDEST PUSH2 0x400 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0x5F4 CALLER DUP4 DUP4 PUSH2 0xCD6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x614 JUMPI POP PUSH2 0x614 DUP6 CALLER PUSH2 0x20E JUMP JUMPDEST PUSH2 0x630 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0x44B DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x645 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH2 0x6B3 DUP2 PUSH2 0xBB0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x6D2 JUMPI POP PUSH2 0x6D2 DUP4 CALLER PUSH2 0x20E JUMP JUMPDEST PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0x5BD DUP4 DUP4 DUP4 PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x779 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x193E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x79A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x197F JUMP JUMPDEST CALLER PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x830 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7B8 JUMPI PUSH2 0x7B8 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7D4 JUMPI PUSH2 0x7D4 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x818 SWAP2 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x828 DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x79D JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x880 SWAP3 SWAP2 SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x44B DUP2 PUSH0 DUP8 DUP8 DUP8 DUP8 PUSH2 0xFDA JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x8DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A07 JUMP JUMPDEST CALLER PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x9BF JUMPI PUSH0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8FC JUMPI PUSH2 0x8FC PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x919 JUMPI PUSH2 0x919 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x968 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x9A4 SWAP1 DUP5 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9B8 SWAP1 PUSH2 0x1926 JUMP JUMPDEST SWAP1 POP PUSH2 0x8E0 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA0F SWAP3 SWAP2 SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA25 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xFDA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A96 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xA74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 SWAP1 DUP2 SWAP1 MSTORE CALLER SWAP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xB45 JUMPI PUSH0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAA3 JUMPI PUSH2 0xAA3 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAC0 JUMPI PUSH2 0xAC0 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP1 PUSH2 0xB3D DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA87 JUMP JUMPDEST POP PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xB95 SWAP3 SWAP2 SWAP1 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 SWAP1 MSTORE PUSH2 0x400 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x193E JUMP JUMPDEST CALLER PUSH0 PUSH2 0xC32 DUP6 PUSH2 0x1134 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC3E DUP6 PUSH2 0x1134 JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xC6F SWAP1 DUP5 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xCCD DUP4 PUSH0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x117D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xD49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A07 JUMP JUMPDEST CALLER PUSH0 PUSH2 0xDE6 DUP6 PUSH2 0x1134 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xDF2 DUP6 PUSH2 0x1134 JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0xE34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A4C JUMP JUMPDEST PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xE70 SWAP1 DUP5 SWAP1 PUSH2 0x19C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xED0 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x117D JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1A96 JUMP JUMPDEST CALLER PUSH0 PUSH2 0xF0C DUP5 PUSH2 0x1134 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xF18 DUP5 PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP4 MSTORE PUSH0 SWAP2 DUP3 SWAP1 MSTORE DUP9 DUP3 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP DUP5 DUP2 LT ISZERO PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP11 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP12 DUP2 MSTORE SWAP4 DUP5 ADD DUP11 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 SWAP1 MSTORE PUSH2 0xCCD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xA25 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x101E SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1B1D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1058 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1055 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1104 JUMPI PUSH2 0x1064 PUSH2 0x1B95 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x109D JUMPI POP PUSH2 0x1078 PUSH2 0x1BAE JUMP JUMPDEST DUP1 PUSH2 0x1083 JUMPI POP PUSH2 0x109F JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x130B JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x116C JUMPI PUSH2 0x116C PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xA25 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x11C1 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11FB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11F8 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1207 JUMPI PUSH2 0x1064 PUSH2 0x1B95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0x1C37 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x124D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1263 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x126C DUP4 PUSH2 0x1237 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12AA DUP2 PUSH2 0x127A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12EC JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x12D0 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x12AA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12C8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1357 JUMPI PUSH2 0x1357 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1377 JUMPI PUSH2 0x1377 PUSH2 0x131D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1390 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x139D DUP3 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13AA DUP3 DUP3 PUSH2 0x1331 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x13C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x13E4 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x13CD JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13FE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1418 JUMPI PUSH2 0x1418 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142F PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1331 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1443 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1472 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x147B DUP6 PUSH2 0x1237 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1497 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14A3 DUP9 DUP4 DUP10 ADD PUSH2 0x1381 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x14B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14C4 DUP9 DUP4 DUP10 ADD PUSH2 0x1381 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x14D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E6 DUP8 DUP3 DUP9 ADD PUSH2 0x13EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1506 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x150F DUP7 PUSH2 0x1237 JUMP JUMPDEST SWAP5 POP PUSH2 0x151D PUSH1 0x20 DUP8 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1539 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1545 DUP10 DUP4 DUP11 ADD PUSH2 0x1381 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x155A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1566 DUP10 DUP4 DUP11 ADD PUSH2 0x1381 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x157B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1588 DUP9 DUP3 DUP10 ADD PUSH2 0x13EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x15DD DUP3 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15EA DUP3 DUP3 PUSH2 0x1331 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x1609 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x162E JUMPI PUSH2 0x161F DUP7 PUSH2 0x1237 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x160E JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1643 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1650 DUP6 DUP3 DUP7 ADD PUSH2 0x1381 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1688 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x166C JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x12AA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x165A JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16C0 DUP5 PUSH2 0x1237 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16DC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16E8 DUP8 DUP4 DUP9 ADD PUSH2 0x1381 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x170A DUP7 DUP3 DUP8 ADD PUSH2 0x1381 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1727 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1730 DUP6 PUSH2 0x1237 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1759 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x14E6 DUP8 DUP3 DUP9 ADD PUSH2 0x13EF JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1776 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x177F DUP4 PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1793 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17AF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17B8 DUP4 PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C6 PUSH1 0x20 DUP5 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17EC DUP7 PUSH2 0x1237 JUMP JUMPDEST SWAP5 POP PUSH2 0x17FA PUSH1 0x20 DUP8 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1823 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1588 DUP9 DUP3 DUP10 ADD PUSH2 0x13EF JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x183F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12AA DUP3 PUSH2 0x1237 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x185A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1863 DUP5 PUSH2 0x1237 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x188C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x18AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1937 JUMPI PUSH2 0x1937 PUSH2 0x1912 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x305 JUMPI PUSH2 0x305 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x19EC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x165A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x19FE DUP2 DUP6 PUSH2 0x165A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1B48 SWAP1 DUP4 ADD DUP7 PUSH2 0x165A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1B5A DUP2 DUP7 PUSH2 0x165A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1B6E DUP2 DUP6 PUSH2 0x12C8 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B8A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x12AA DUP2 PUSH2 0x127A JUMP JUMPDEST PUSH0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1BAB JUMPI PUSH1 0x4 PUSH0 DUP1 RETURNDATACOPY POP PUSH0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1BBB JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1BEB JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1C03 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1C1D JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1C2C PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1331 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1CB8 SWAP1 DUP4 ADD DUP5 PUSH2 0x12C8 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D EXP RETURNDATACOPY SWAP4 0xE3 SWAP7 0x27 0xF8 PUSH22 0x1370BB13F5B7F7A9A549D48863DCD03F9E12DE4224F PUSH20 0x64736F6C63430008140033000000000000000000 ",
							"sourceMap": "39983:469:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23951:227;;;;;;:::i;:::-;;:::i;:::-;;;597:25:1;;;585:2;570:18;23951:227:0;;;;;;;;23002:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:1;;1177:22;1159:41;;1147:2;1132:18;23002:305:0;1019:187:1;23706:103:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;40264:186::-;;;;;;:::i;:::-;;:::i;:::-;;25808:426;;;;;;:::i;:::-;;:::i;24335:486::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;39599:317::-;;;;;;:::i;:::-;;:::i;2682:101::-;;;:::i;40094:164::-;;;;;;:::i;:::-;;:::i;2059:85::-;2131:6;;2059:85;;-1:-1:-1;;;;;2131:6:0;;;9008:51:1;;8996:2;8981:18;2059:85:0;8862:203:1;24889:153:0;;;;;;:::i;:::-;;:::i;25109:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;25231:27:0;;;25208:4;25231:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;25109:166;25342:394;;;;;;:::i;:::-;;:::i;2932:198::-;;;;;;:::i;:::-;;:::i;39308:285::-;;;;;;:::i;:::-;;:::i;23951:227::-;24037:7;-1:-1:-1;;;;;24064:21:0;;24056:76;;;;-1:-1:-1;;;24056:76:0;;11018:2:1;24056:76:0;;;11000:21:1;11057:2;11037:18;;;11030:30;11096:34;11076:18;;;11069:62;-1:-1:-1;;;11147:18:1;;;11140:40;11197:19;;24056:76:0;;;;;;;;;-1:-1:-1;24149:9:0;:13;;;;;;;;;;;-1:-1:-1;;;;;24149:22:0;;;;;;;;;;23951:227;;;;;:::o;23002:305::-;23104:4;-1:-1:-1;;;;;;23139:41:0;;-1:-1:-1;;;23139:41:0;;:109;;-1:-1:-1;;;;;;;23196:52:0;;-1:-1:-1;;;23196:52:0;23139:109;:161;;;-1:-1:-1;;;;;;;;;;14697:40:0;;;23264:36;14589:155;23706:103;23766:13;23798:4;23791:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23706:103;;;:::o;40264:186::-;1952:13;:11;:13::i;:::-;40409:34:::1;40420:2;40424:3;40429:7;40438:4;40409:10;:34::i;:::-;40264:186:::0;;;;:::o;25808:426::-;-1:-1:-1;;;;;26033:20:0;;741:10;26033:20;;:60;;-1:-1:-1;26057:36:0;26074:4;741:10;25109:166;:::i;26057:36::-;26012:153;;;;-1:-1:-1;;;26012:153:0;;;;;;;:::i;:::-;26175:52;26198:4;26204:2;26208:3;26213:7;26222:4;26175:22;:52::i;:::-;25808:426;;;;;:::o;24335:486::-;24468:16;24523:3;:10;24504:8;:15;:29;24496:83;;;;-1:-1:-1;;;24496:83:0;;12229:2:1;24496:83:0;;;12211:21:1;12268:2;12248:18;;;12241:30;12307:34;12287:18;;;12280:62;-1:-1:-1;;;12358:18:1;;;12351:39;12407:19;;24496:83:0;12027:405:1;24496:83:0;24590:30;24637:8;:15;24623:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24623:30:0;;24590:63;;24669:9;24664:120;24688:8;:15;24684:1;:19;24664:120;;;24743:30;24753:8;24762:1;24753:11;;;;;;;;:::i;:::-;;;;;;;24766:3;24770:1;24766:6;;;;;;;;:::i;:::-;;;;;;;24743:9;:30::i;:::-;24724:13;24738:1;24724:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;24705:3;;;:::i;:::-;;;24664:120;;;-1:-1:-1;24801:13:0;24335:486;-1:-1:-1;;;24335:486:0:o;39599:317::-;-1:-1:-1;;;;;39728:23:0;;741:10;39728:23;;:66;;-1:-1:-1;39755:39:0;39772:7;741:10;25109:166;:::i;39755:39::-;39707:159;;;;-1:-1:-1;;;39707:159:0;;;;;;;:::i;:::-;39877:32;39888:7;39897:3;39902:6;39877:10;:32::i;:::-;39599:317;;;:::o;2682:101::-;1952:13;:11;:13::i;:::-;2746:30:::1;2773:1;2746:18;:30::i;:::-;2682:101::o:0;40094:164::-;1952:13;:11;:13::i;:::-;40219:32:::1;40225:7;40234:2;40238:6;40246:4;40219:5;:32::i;24889:153::-:0;24983:52;741:10;25016:8;25026;24983:18;:52::i;:::-;24889:153;;:::o;25342:394::-;-1:-1:-1;;;;;25542:20:0;;741:10;25542:20;;:60;;-1:-1:-1;25566:36:0;25583:4;741:10;25109:166;:::i;25566:36::-;25521:153;;;;-1:-1:-1;;;25521:153:0;;;;;;;:::i;:::-;25684:45;25702:4;25708:2;25712;25716:6;25724:4;25684:17;:45::i;2932:198::-;1952:13;:11;:13::i;:::-;-1:-1:-1;;;;;3020:22:0;::::1;3012:73;;;::::0;-1:-1:-1;;;3012:73:0;;13043:2:1;3012:73:0::1;::::0;::::1;13025:21:1::0;13082:2;13062:18;;;13055:30;13121:34;13101:18;;;13094:62;-1:-1:-1;;;13172:18:1;;;13165:36;13218:19;;3012:73:0::1;12841:402:1::0;3012:73:0::1;3095:28;3114:8;3095:18;:28::i;:::-;2932:198:::0;:::o;39308:285::-;-1:-1:-1;;;;;39412:23:0;;741:10;39412:23;;:66;;-1:-1:-1;39439:39:0;39456:7;741:10;25109:166;:::i;39439:39::-;39391:159;;;;-1:-1:-1;;;39391:159:0;;;;;;;:::i;:::-;39561:25;39567:7;39576:2;39580:5;39561;:25::i;2217:130::-;2131:6;;-1:-1:-1;;;;;2131:6:0;741:10;2280:23;2272:68;;;;-1:-1:-1;;;2272:68:0;;13450:2:1;2272:68:0;;;13432:21:1;;;13469:18;;;13462:30;13528:34;13508:18;;;13501:62;13580:18;;2272:68:0;13248:356:1;31435:791:0;-1:-1:-1;;;;;31607:16:0;;31599:62;;;;-1:-1:-1;;;31599:62:0;;;;;;;:::i;:::-;31693:7;:14;31679:3;:10;:28;31671:81;;;;-1:-1:-1;;;31671:81:0;;;;;;;:::i;:::-;741:10;31763:16;31882:101;31906:3;:10;31902:1;:14;31882:101;;;31962:7;31970:1;31962:10;;;;;;;;:::i;:::-;;;;;;;31937:9;:17;31947:3;31951:1;31947:6;;;;;;;;:::i;:::-;;;;;;;31937:17;;;;;;;;;;;:21;31955:2;-1:-1:-1;;;;;31937:21:0;-1:-1:-1;;;;;31937:21:0;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;31918:3:0;;-1:-1:-1;31918:3:0;;;:::i;:::-;;;;31882:101;;;;32034:2;-1:-1:-1;;;;;31998:53:0;32030:1;-1:-1:-1;;;;;31998:53:0;32012:8;-1:-1:-1;;;;;31998:53:0;;32038:3;32043:7;31998:53;;;;;;;:::i;:::-;;;;;;;;32138:81;32174:8;32192:1;32196:2;32200:3;32205:7;32214:4;32138:35;:81::i;27977:1115::-;28197:7;:14;28183:3;:10;:28;28175:81;;;;-1:-1:-1;;;28175:81:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;28274:16:0;;28266:66;;;;-1:-1:-1;;;28266:66:0;;;;;;;:::i;:::-;741:10;28343:16;28456:411;28480:3;:10;28476:1;:14;28456:411;;;28511:10;28524:3;28528:1;28524:6;;;;;;;;:::i;:::-;;;;;;;28511:19;;28544:14;28561:7;28569:1;28561:10;;;;;;;;:::i;:::-;;;;;;;;;;;;28586:19;28608:13;;;;;;;;;;-1:-1:-1;;;;;28608:19:0;;;;;;;;;;;;28561:10;;-1:-1:-1;28649:21:0;;;;28641:76;;;;-1:-1:-1;;;28641:76:0;;;;;;;:::i;:::-;28759:9;:13;;;;;;;;;;;-1:-1:-1;;;;;28759:19:0;;;;;;;;;;28781:20;;;28759:42;;28829:17;;;;;;;:27;;28781:20;;28759:9;28829:27;;28781:20;;28829:27;:::i;:::-;;;;;;;;28497:370;;;28492:3;;;;:::i;:::-;;;28456:411;;;;28912:2;-1:-1:-1;;;;;28882:47:0;28906:4;-1:-1:-1;;;;;28882:47:0;28896:8;-1:-1:-1;;;;;28882:47:0;;28916:3;28921:7;28882:47;;;;;;;:::i;:::-;;;;;;;;29010:75;29046:8;29056:4;29062:2;29066:3;29071:7;29080:4;29010:35;:75::i;:::-;28165:927;27977:1115;;;;;:::o;33507:913::-;-1:-1:-1;;;;;33624:18:0;;33616:66;;;;-1:-1:-1;;;33616:66:0;;;;;;;:::i;:::-;33714:7;:14;33700:3;:10;:28;33692:81;;;;-1:-1:-1;;;33692:81:0;;;;;;;:::i;:::-;33826:66;;;;;;;;;33784:16;33826:66;;;;741:10;;33903:364;33927:3;:10;33923:1;:14;33903:364;;;33958:10;33971:3;33975:1;33971:6;;;;;;;;:::i;:::-;;;;;;;33958:19;;33991:14;34008:7;34016:1;34008:10;;;;;;;;:::i;:::-;;;;;;;;;;;;34033:19;34055:13;;;;;;;;;;-1:-1:-1;;;;;34055:19:0;;;;;;;;;;;;34008:10;;-1:-1:-1;34096:21:0;;;;34088:70;;;;-1:-1:-1;;;34088:70:0;;;;;;;:::i;:::-;34200:9;:13;;;;;;;;;;;-1:-1:-1;;;;;34200:19:0;;;;;;;;;;34222:20;;34200:42;;33939:3;;;;:::i;:::-;;;;33903:364;;;;34320:1;-1:-1:-1;;;;;34282:55:0;34306:4;-1:-1:-1;;;;;34282:55:0;34296:8;-1:-1:-1;;;;;34282:55:0;;34324:3;34329:7;34282:55;;;;;;;:::i;:::-;;;;;;;;34348:65;;;;;;;;;34392:1;34348:65;;;27977:1115;3284:187;3376:6;;;-1:-1:-1;;;;;3392:17:0;;;-1:-1:-1;;;;;;3392:17:0;;;;;;;3424:40;;3376:6;;;3392:17;3376:6;;3424:40;;3357:16;;3424:40;3347:124;3284:187;:::o;30374:671::-;-1:-1:-1;;;;;30483:16:0;;30475:62;;;;-1:-1:-1;;;30475:62:0;;;;;;;:::i;:::-;741:10;30548:16;30612:21;30630:2;30612:17;:21::i;:::-;30589:44;;30643:24;30670:25;30688:6;30670:17;:25::i;:::-;30643:52;;30783:9;:13;;;;;;;;;;;-1:-1:-1;;;;;30783:17:0;;;;;;;;;:27;;30804:6;;30783:9;:27;;30804:6;;30783:27;:::i;:::-;;;;-1:-1:-1;;30825:52:0;;;16820:25:1;;;16876:2;16861:18;;16854:34;;;-1:-1:-1;;;;;30825:52:0;;;;30858:1;;30825:52;;;;;;16793:18:1;30825:52:0;;;;;;;30964:74;30995:8;31013:1;31017:2;31021;31025:6;31033:4;30964:30;:74::i;:::-;30465:580;;;30374:671;;;;:::o;34556:293::-;34676:8;-1:-1:-1;;;;;34667:17:0;:5;-1:-1:-1;;;;;34667:17:0;;34659:71;;;;-1:-1:-1;;;34659:71:0;;17101:2:1;34659:71:0;;;17083:21:1;17140:2;17120:18;;;17113:30;17179:34;17159:18;;;17152:62;-1:-1:-1;;;17230:18:1;;;17223:39;17279:19;;34659:71:0;16899:405:1;34659:71:0;-1:-1:-1;;;;;34740:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;34740:46:0;;;;;;;;;;34801:41;;1159::1;;;34801::0;;1132:18:1;34801:41:0;;;;;;;34556:293;;;:::o;26684:947::-;-1:-1:-1;;;;;26865:16:0;;26857:66;;;;-1:-1:-1;;;26857:66:0;;;;;;;:::i;:::-;741:10;26934:16;26998:21;27016:2;26998:17;:21::i;:::-;26975:44;;27029:24;27056:25;27074:6;27056:17;:25::i;:::-;27029:52;;27163:19;27185:13;;;;;;;;;;;-1:-1:-1;;;;;27185:19:0;;;;;;;;;;27222:21;;;;27214:76;;;;-1:-1:-1;;;27214:76:0;;;;;;;:::i;:::-;27324:9;:13;;;;;;;;;;;-1:-1:-1;;;;;27324:19:0;;;;;;;;;;27346:20;;;27324:42;;27386:17;;;;;;;:27;;27346:20;;27324:9;27386:27;;27346:20;;27386:27;:::i;:::-;;;;-1:-1:-1;;27429:46:0;;;16820:25:1;;;16876:2;16861:18;;16854:34;;;-1:-1:-1;;;;;27429:46:0;;;;;;;;;;;;;;16793:18:1;27429:46:0;;;;;;;27556:68;27587:8;27597:4;27603:2;27607;27611:6;27619:4;27556:30;:68::i;:::-;26847:784;;;;26684:947;;;;;:::o;32512:756::-;-1:-1:-1;;;;;32604:18:0;;32596:66;;;;-1:-1:-1;;;32596:66:0;;;;;;;:::i;:::-;741:10;32673:16;32737:21;32755:2;32737:17;:21::i;:::-;32714:44;;32768:24;32795:25;32813:6;32795:17;:25::i;:::-;32831:66;;;;;;;;;-1:-1:-1;32831:66:0;;;;32930:13;;;;;;;;;-1:-1:-1;;;;;32930:19:0;;;;;;;;32768:52;;-1:-1:-1;32967:21:0;;;;32959:70;;;;-1:-1:-1;;;32959:70:0;;;;;;;:::i;:::-;33063:9;:13;;;;;;;;;;;-1:-1:-1;;;;;33063:19:0;;;;;;;;;;;;33085:20;;;33063:42;;33131:54;;16820:25:1;;;16861:18;;;16854:34;;;33063:19:0;;33131:54;;;;;;16793:18:1;33131:54:0;;;;;;;33196:65;;;;;;;;;33240:1;33196:65;;;27977:1115;37882:792;-1:-1:-1;;;;;38114:13:0;;5198:19;:23;38110:558;;38149:79;;-1:-1:-1;;;38149:79:0;;-1:-1:-1;;;;;38149:43:0;;;;;:79;;38193:8;;38203:4;;38209:3;;38214:7;;38223:4;;38149:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38149:79:0;;;;;;;;-1:-1:-1;;38149:79:0;;;;;;;;;;;;:::i;:::-;;;38145:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;38534:6;38527:14;;-1:-1:-1;;;38527:14:0;;;;;;;;:::i;38145:513::-;;;38581:62;;-1:-1:-1;;;38581:62:0;;19457:2:1;38581:62:0;;;19439:21:1;19496:2;19476:18;;;19469:30;19535:34;19515:18;;;19508:62;-1:-1:-1;;;19586:18:1;;;19579:50;19646:19;;38581:62:0;19255:416:1;38145:513:0;-1:-1:-1;;;;;;38307:60:0;;-1:-1:-1;;;38307:60:0;38303:157;;38391:50;;-1:-1:-1;;;38391:50:0;;;;;;;:::i;38680:193::-;38799:16;;;38813:1;38799:16;;;;;;;;;38746;;38774:22;;38799:16;;;;;;;;;;;;-1:-1:-1;38799:16:0;38774:41;;38836:7;38825:5;38831:1;38825:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;38861:5;38680:193;-1:-1:-1;;38680:193:0:o;37151:725::-;-1:-1:-1;;;;;37358:13:0;;5198:19;:23;37354:516;;37393:72;;-1:-1:-1;;;37393:72:0;;-1:-1:-1;;;;;37393:38:0;;;;;:72;;37432:8;;37442:4;;37448:2;;37452:6;;37460:4;;37393:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;37393:72:0;;;;;;;;-1:-1:-1;;37393:72:0;;;;;;;;;;;;:::i;:::-;;;37389:471;;;;:::i;:::-;-1:-1:-1;;;;;;37514:55:0;;-1:-1:-1;;;37514:55:0;37510:152;;37593:50;;-1:-1:-1;;;37593:50:0;;;;;;;:::i;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:1:o;633:131::-;-1:-1:-1;;;;;;707:32:1;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:1:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:1;;1211:180;-1:-1:-1;1211:180:1:o;1396:423::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1542:3;1745:1;1738:4;1729:6;1724:3;1720:16;1716:27;1709:38;1808:4;1801:2;1797:7;1792:2;1784:6;1780:15;1776:29;1771:3;1767:39;1763:50;1756:57;;;1396:423;;;;:::o;1824:220::-;1973:2;1962:9;1955:21;1936:4;1993:45;2034:2;2023:9;2019:18;2011:6;1993:45;:::i;2049:127::-;2110:10;2105:3;2101:20;2098:1;2091:31;2141:4;2138:1;2131:15;2165:4;2162:1;2155:15;2181:249;2291:2;2272:13;;-1:-1:-1;;2268:27:1;2256:40;;2326:18;2311:34;;2347:22;;;2308:62;2305:88;;;2373:18;;:::i;:::-;2409:2;2402:22;-1:-1:-1;;2181:249:1:o;2435:183::-;2495:4;2528:18;2520:6;2517:30;2514:56;;;2550:18;;:::i;:::-;-1:-1:-1;2595:1:1;2591:14;2607:4;2587:25;;2435:183::o;2623:724::-;2677:5;2730:3;2723:4;2715:6;2711:17;2707:27;2697:55;;2748:1;2745;2738:12;2697:55;2784:6;2771:20;2810:4;2833:43;2873:2;2833:43;:::i;:::-;2905:2;2899:9;2917:31;2945:2;2937:6;2917:31;:::i;:::-;2983:18;;;3075:1;3071:10;;;;3059:23;;3055:32;;;3017:15;;;;-1:-1:-1;3099:15:1;;;3096:35;;;3127:1;3124;3117:12;3096:35;3163:2;3155:6;3151:15;3175:142;3191:6;3186:3;3183:15;3175:142;;;3257:17;;3245:30;;3295:12;;;;3208;;3175:142;;;-1:-1:-1;3335:6:1;2623:724;-1:-1:-1;;;;;;2623:724:1:o;3352:555::-;3394:5;3447:3;3440:4;3432:6;3428:17;3424:27;3414:55;;3465:1;3462;3455:12;3414:55;3501:6;3488:20;3527:18;3523:2;3520:26;3517:52;;;3549:18;;:::i;:::-;3598:2;3592:9;3610:67;3665:2;3646:13;;-1:-1:-1;;3642:27:1;3671:4;3638:38;3592:9;3610:67;:::i;:::-;3701:2;3693:6;3686:18;3747:3;3740:4;3735:2;3727:6;3723:15;3719:26;3716:35;3713:55;;;3764:1;3761;3754:12;3713:55;3828:2;3821:4;3813:6;3809:17;3802:4;3794:6;3790:17;3777:54;3875:1;3851:15;;;3868:4;3847:26;3840:37;;;;3855:6;3352:555;-1:-1:-1;;;3352:555:1:o;3912:868::-;4057:6;4065;4073;4081;4134:3;4122:9;4113:7;4109:23;4105:33;4102:53;;;4151:1;4148;4141:12;4102:53;4174:29;4193:9;4174:29;:::i;:::-;4164:39;;4254:2;4243:9;4239:18;4226:32;4277:18;4318:2;4310:6;4307:14;4304:34;;;4334:1;4331;4324:12;4304:34;4357:61;4410:7;4401:6;4390:9;4386:22;4357:61;:::i;:::-;4347:71;;4471:2;4460:9;4456:18;4443:32;4427:48;;4500:2;4490:8;4487:16;4484:36;;;4516:1;4513;4506:12;4484:36;4539:63;4594:7;4583:8;4572:9;4568:24;4539:63;:::i;:::-;4529:73;;4655:2;4644:9;4640:18;4627:32;4611:48;;4684:2;4674:8;4671:16;4668:36;;;4700:1;4697;4690:12;4668:36;;4723:51;4766:7;4755:8;4744:9;4740:24;4723:51;:::i;:::-;4713:61;;;3912:868;;;;;;;:::o;4785:943::-;4939:6;4947;4955;4963;4971;5024:3;5012:9;5003:7;4999:23;4995:33;4992:53;;;5041:1;5038;5031:12;4992:53;5064:29;5083:9;5064:29;:::i;:::-;5054:39;;5112:38;5146:2;5135:9;5131:18;5112:38;:::i;:::-;5102:48;;5201:2;5190:9;5186:18;5173:32;5224:18;5265:2;5257:6;5254:14;5251:34;;;5281:1;5278;5271:12;5251:34;5304:61;5357:7;5348:6;5337:9;5333:22;5304:61;:::i;:::-;5294:71;;5418:2;5407:9;5403:18;5390:32;5374:48;;5447:2;5437:8;5434:16;5431:36;;;5463:1;5460;5453:12;5431:36;5486:63;5541:7;5530:8;5519:9;5515:24;5486:63;:::i;:::-;5476:73;;5602:3;5591:9;5587:19;5574:33;5558:49;;5632:2;5622:8;5619:16;5616:36;;;5648:1;5645;5638:12;5616:36;;5671:51;5714:7;5703:8;5692:9;5688:24;5671:51;:::i;:::-;5661:61;;;4785:943;;;;;;;;:::o;5733:1208::-;5851:6;5859;5912:2;5900:9;5891:7;5887:23;5883:32;5880:52;;;5928:1;5925;5918:12;5880:52;5968:9;5955:23;5997:18;6038:2;6030:6;6027:14;6024:34;;;6054:1;6051;6044:12;6024:34;6092:6;6081:9;6077:22;6067:32;;6137:7;6130:4;6126:2;6122:13;6118:27;6108:55;;6159:1;6156;6149:12;6108:55;6195:2;6182:16;6217:4;6240:43;6280:2;6240:43;:::i;:::-;6312:2;6306:9;6324:31;6352:2;6344:6;6324:31;:::i;:::-;6390:18;;;6478:1;6474:10;;;;6466:19;;6462:28;;;6424:15;;;;-1:-1:-1;6502:19:1;;;6499:39;;;6534:1;6531;6524:12;6499:39;6558:11;;;;6578:148;6594:6;6589:3;6586:15;6578:148;;;6660:23;6679:3;6660:23;:::i;:::-;6648:36;;6611:12;;;;6704;;;;6578:148;;;6745:6;-1:-1:-1;;6789:18:1;;6776:32;;-1:-1:-1;;6820:16:1;;;6817:36;;;6849:1;6846;6839:12;6817:36;;6872:63;6927:7;6916:8;6905:9;6901:24;6872:63;:::i;:::-;6862:73;;;5733:1208;;;;;:::o;6946:435::-;6999:3;7037:5;7031:12;7064:6;7059:3;7052:19;7090:4;7119:2;7114:3;7110:12;7103:19;;7156:2;7149:5;7145:14;7177:1;7187:169;7201:6;7198:1;7195:13;7187:169;;;7262:13;;7250:26;;7296:12;;;;7331:15;;;;7223:1;7216:9;7187:169;;;-1:-1:-1;7372:3:1;;6946:435;-1:-1:-1;;;;;6946:435:1:o;7386:261::-;7565:2;7554:9;7547:21;7528:4;7585:56;7637:2;7626:9;7622:18;7614:6;7585:56;:::i;7652:669::-;7779:6;7787;7795;7848:2;7836:9;7827:7;7823:23;7819:32;7816:52;;;7864:1;7861;7854:12;7816:52;7887:29;7906:9;7887:29;:::i;:::-;7877:39;;7967:2;7956:9;7952:18;7939:32;7990:18;8031:2;8023:6;8020:14;8017:34;;;8047:1;8044;8037:12;8017:34;8070:61;8123:7;8114:6;8103:9;8099:22;8070:61;:::i;:::-;8060:71;;8184:2;8173:9;8169:18;8156:32;8140:48;;8213:2;8203:8;8200:16;8197:36;;;8229:1;8226;8219:12;8197:36;;8252:63;8307:7;8296:8;8285:9;8281:24;8252:63;:::i;:::-;8242:73;;;7652:669;;;;;:::o;8326:531::-;8421:6;8429;8437;8445;8498:3;8486:9;8477:7;8473:23;8469:33;8466:53;;;8515:1;8512;8505:12;8466:53;8538:29;8557:9;8538:29;:::i;:::-;8528:39;;8614:2;8603:9;8599:18;8586:32;8576:42;;8665:2;8654:9;8650:18;8637:32;8627:42;;8720:2;8709:9;8705:18;8692:32;8747:18;8739:6;8736:30;8733:50;;;8779:1;8776;8769:12;8733:50;8802:49;8843:7;8834:6;8823:9;8819:22;8802:49;:::i;9070:347::-;9135:6;9143;9196:2;9184:9;9175:7;9171:23;9167:32;9164:52;;;9212:1;9209;9202:12;9164:52;9235:29;9254:9;9235:29;:::i;:::-;9225:39;;9314:2;9303:9;9299:18;9286:32;9361:5;9354:13;9347:21;9340:5;9337:32;9327:60;;9383:1;9380;9373:12;9327:60;9406:5;9396:15;;;9070:347;;;;;:::o;9422:260::-;9490:6;9498;9551:2;9539:9;9530:7;9526:23;9522:32;9519:52;;;9567:1;9564;9557:12;9519:52;9590:29;9609:9;9590:29;:::i;:::-;9580:39;;9638:38;9672:2;9661:9;9657:18;9638:38;:::i;:::-;9628:48;;9422:260;;;;;:::o;9687:606::-;9791:6;9799;9807;9815;9823;9876:3;9864:9;9855:7;9851:23;9847:33;9844:53;;;9893:1;9890;9883:12;9844:53;9916:29;9935:9;9916:29;:::i;:::-;9906:39;;9964:38;9998:2;9987:9;9983:18;9964:38;:::i;:::-;9954:48;;10049:2;10038:9;10034:18;10021:32;10011:42;;10100:2;10089:9;10085:18;10072:32;10062:42;;10155:3;10144:9;10140:19;10127:33;10183:18;10175:6;10172:30;10169:50;;;10215:1;10212;10205:12;10169:50;10238:49;10279:7;10270:6;10259:9;10255:22;10238:49;:::i;10298:186::-;10357:6;10410:2;10398:9;10389:7;10385:23;10381:32;10378:52;;;10426:1;10423;10416:12;10378:52;10449:29;10468:9;10449:29;:::i;10489:322::-;10566:6;10574;10582;10635:2;10623:9;10614:7;10610:23;10606:32;10603:52;;;10651:1;10648;10641:12;10603:52;10674:29;10693:9;10674:29;:::i;:::-;10664:39;10750:2;10735:18;;10722:32;;-1:-1:-1;10801:2:1;10786:18;;;10773:32;;10489:322;-1:-1:-1;;;10489:322:1:o;11227:380::-;11306:1;11302:12;;;;11349;;;11370:61;;11424:4;11416:6;11412:17;11402:27;;11370:61;11477:2;11469:6;11466:14;11446:18;11443:38;11440:161;;11523:10;11518:3;11514:20;11511:1;11504:31;11558:4;11555:1;11548:15;11586:4;11583:1;11576:15;11440:161;;11227:380;;;:::o;11612:410::-;11814:2;11796:21;;;11853:2;11833:18;;;11826:30;11892:34;11887:2;11872:18;;11865:62;-1:-1:-1;;;11958:2:1;11943:18;;11936:44;12012:3;11997:19;;11612:410::o;12437:127::-;12498:10;12493:3;12489:20;12486:1;12479:31;12529:4;12526:1;12519:15;12553:4;12550:1;12543:15;12569:127;12630:10;12625:3;12621:20;12618:1;12611:31;12661:4;12658:1;12651:15;12685:4;12682:1;12675:15;12701:135;12740:3;12761:17;;;12758:43;;12781:18;;:::i;:::-;-1:-1:-1;12828:1:1;12817:13;;12701:135::o;13609:397::-;13811:2;13793:21;;;13850:2;13830:18;;;13823:30;13889:34;13884:2;13869:18;;13862:62;-1:-1:-1;;;13955:2:1;13940:18;;13933:31;13996:3;13981:19;;13609:397::o;14011:404::-;14213:2;14195:21;;;14252:2;14232:18;;;14225:30;14291:34;14286:2;14271:18;;14264:62;-1:-1:-1;;;14357:2:1;14342:18;;14335:38;14405:3;14390:19;;14011:404::o;14420:125::-;14485:9;;;14506:10;;;14503:36;;;14519:18;;:::i;14550:465::-;14807:2;14796:9;14789:21;14770:4;14833:56;14885:2;14874:9;14870:18;14862:6;14833:56;:::i;:::-;14937:9;14929:6;14925:22;14920:2;14909:9;14905:18;14898:50;14965:44;15002:6;14994;14965:44;:::i;:::-;14957:52;14550:465;-1:-1:-1;;;;;14550:465:1:o;15020:401::-;15222:2;15204:21;;;15261:2;15241:18;;;15234:30;15300:34;15295:2;15280:18;;15273:62;-1:-1:-1;;;15366:2:1;15351:18;;15344:35;15411:3;15396:19;;15020:401::o;15426:406::-;15628:2;15610:21;;;15667:2;15647:18;;;15640:30;15706:34;15701:2;15686:18;;15679:62;-1:-1:-1;;;15772:2:1;15757:18;;15750:40;15822:3;15807:19;;15426:406::o;15837:399::-;16039:2;16021:21;;;16078:2;16058:18;;;16051:30;16117:34;16112:2;16097:18;;16090:62;-1:-1:-1;;;16183:2:1;16168:18;;16161:33;16226:3;16211:19;;15837:399::o;16241:400::-;16443:2;16425:21;;;16482:2;16462:18;;;16455:30;16521:34;16516:2;16501:18;;16494:62;-1:-1:-1;;;16587:2:1;16572:18;;16565:34;16631:3;16616:19;;16241:400::o;17309:827::-;-1:-1:-1;;;;;17706:15:1;;;17688:34;;17758:15;;17753:2;17738:18;;17731:43;17668:3;17805:2;17790:18;;17783:31;;;17631:4;;17837:57;;17874:19;;17866:6;17837:57;:::i;:::-;17942:9;17934:6;17930:22;17925:2;17914:9;17910:18;17903:50;17976:44;18013:6;18005;17976:44;:::i;:::-;17962:58;;18069:9;18061:6;18057:22;18051:3;18040:9;18036:19;18029:51;18097:33;18123:6;18115;18097:33;:::i;:::-;18089:41;17309:827;-1:-1:-1;;;;;;;;17309:827:1:o;18141:249::-;18210:6;18263:2;18251:9;18242:7;18238:23;18234:32;18231:52;;;18279:1;18276;18269:12;18231:52;18311:9;18305:16;18330:30;18354:5;18330:30;:::i;18395:179::-;18430:3;18472:1;18454:16;18451:23;18448:120;;;18518:1;18515;18512;18497:23;-1:-1:-1;18555:1:1;18549:8;18544:3;18540:18;18448:120;18395:179;:::o;18579:671::-;18618:3;18660:4;18642:16;18639:26;18636:39;;;18579:671;:::o;18636:39::-;18702:2;18696:9;-1:-1:-1;;18767:16:1;18763:25;;18760:1;18696:9;18739:50;18818:4;18812:11;18842:16;18877:18;18948:2;18941:4;18933:6;18929:17;18926:25;18921:2;18913:6;18910:14;18907:45;18904:58;;;18955:5;;;;;18579:671;:::o;18904:58::-;18992:6;18986:4;18982:17;18971:28;;19028:3;19022:10;19055:2;19047:6;19044:14;19041:27;;;19061:5;;;;;;18579:671;:::o;19041:27::-;19145:2;19126:16;19120:4;19116:27;19112:36;19105:4;19096:6;19091:3;19087:16;19083:27;19080:69;19077:82;;;19152:5;;;;;;18579:671;:::o;19077:82::-;19168:57;19219:4;19210:6;19202;19198:19;19194:30;19188:4;19168:57;:::i;:::-;-1:-1:-1;19241:3:1;;18579:671;-1:-1:-1;;;;;18579:671:1:o;19676:404::-;19878:2;19860:21;;;19917:2;19897:18;;;19890:30;19956:34;19951:2;19936:18;;19929:62;-1:-1:-1;;;20022:2:1;20007:18;;20000:38;20070:3;20055:19;;19676:404::o;20085:561::-;-1:-1:-1;;;;;20382:15:1;;;20364:34;;20434:15;;20429:2;20414:18;;20407:43;20481:2;20466:18;;20459:34;;;20524:2;20509:18;;20502:34;;;20344:3;20567;20552:19;;20545:32;;;20307:4;;20594:46;;20620:19;;20612:6;20594:46;:::i;:::-;20586:54;20085:561;-1:-1:-1;;;;;;;20085:561:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1483400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2696",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"burn(address,uint256,uint256)": "infinite",
								"burnBatch(address,uint256[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,uint256,bytes)": "infinite",
								"mintBatch(address,uint256[],uint256[],bytes)": "infinite",
								"owner()": "2367",
								"renounceOwnership()": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26769",
								"supportsInterface(bytes4)": "575",
								"transferOwnership(address)": "28399",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 39983,
									"end": 40452,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 39983,
									"end": 40452,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39983,
									"end": 40452,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40043,
									"end": 40088,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 40043,
									"end": 40088,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40043,
									"end": 40088,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 40043,
									"end": 40088,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40043,
									"end": 40088,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40043,
									"end": 40088,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40043,
									"end": 40088,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40043,
									"end": 40088,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 40043,
									"end": 40088,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40043,
									"end": 40088,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "11151A58DAD95D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "CA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22915,
									"end": 22928,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22915,
									"end": 22922,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 22915,
									"end": 22928,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22915,
									"end": 22928,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 22915,
									"end": 22928,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1794,
									"end": 1826,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 741,
									"end": 751,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1794,
									"end": 1812,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1794,
									"end": 1826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1794,
									"end": 1826,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1794,
									"end": 1826,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39983,
									"end": 40452,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 39983,
									"end": 40452,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29915,
									"end": 30001,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 29915,
									"end": 30001,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29981,
									"end": 29985,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 29981,
									"end": 29994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 29988,
									"end": 29994,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29981,
									"end": 29985,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29981,
									"end": 29994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 29981,
									"end": 29994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29981,
									"end": 29994,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 29981,
									"end": 29994,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29981,
									"end": 29994,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29915,
									"end": 30001,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29915,
									"end": 30001,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3284,
									"end": 3471,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 3284,
									"end": 3471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3424,
									"end": 3464,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3424,
									"end": 3464,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3424,
									"end": 3464,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3424,
									"end": 3464,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3357,
									"end": 3373,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3357,
									"end": 3373,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3424,
									"end": 3464,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3347,
									"end": 3471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3284,
									"end": 3471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3284,
									"end": 3471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 39983,
									"end": 40452,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39983,
									"end": 40452,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39983,
									"end": 40452,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39983,
									"end": 40452,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39983,
									"end": 40452,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 39983,
									"end": 40452,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39983,
									"end": 40452,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d0a3e93e39627f87501370bb13f5b7f7a9a549d48863dcd03f9e12de4224f7364736f6c63430008140033",
									".code": [
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "F5298ACA"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "731133E9"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "1F7FDFFA"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "1F7FDFFA"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "6B20C454"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 40452,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 23951,
											"end": 24178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23951,
											"end": 24178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 23002,
											"end": 23307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 23002,
											"end": 23307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 23706,
											"end": 23809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 23706,
											"end": 23809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 23706,
											"end": 23809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 40264,
											"end": 40450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 40264,
											"end": 40450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 25808,
											"end": 26234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 25808,
											"end": 26234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 24335,
											"end": 24821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24335,
											"end": 24821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 24335,
											"end": 24821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39916,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 39599,
											"end": 39916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 39599,
											"end": 39916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 39599,
											"end": 39916,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39916,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39599,
											"end": 39916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 39599,
											"end": 39916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39916,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 39599,
											"end": 39916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 39599,
											"end": 39916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 2783,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2682,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2682,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2682,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40094,
											"end": 40258,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 40094,
											"end": 40258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40094,
											"end": 40258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 40094,
											"end": 40258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40094,
											"end": 40258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40094,
											"end": 40258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40094,
											"end": 40258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 40094,
											"end": 40258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40094,
											"end": 40258,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40094,
											"end": 40258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40094,
											"end": 40258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 40094,
											"end": 40258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2144,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2059,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9008,
											"end": 9059,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9008,
											"end": 9059,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8996,
											"end": 8998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 8999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8862,
											"end": 9065,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24889,
											"end": 25042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 24889,
											"end": 25042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25109,
											"end": 25275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25208,
											"end": 25212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25249,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 25342,
											"end": 25736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 25342,
											"end": 25736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2932,
											"end": 3130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2932,
											"end": 3130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39308,
											"end": 39593,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 39308,
											"end": 39593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39308,
											"end": 39593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 39308,
											"end": 39593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 39308,
											"end": 39593,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39308,
											"end": 39593,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39308,
											"end": 39593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 39308,
											"end": 39593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39308,
											"end": 39593,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 39308,
											"end": 39593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39308,
											"end": 39593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 39308,
											"end": 39593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24064,
											"end": 24085,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24064,
											"end": 24085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11020,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11000,
											"end": 11021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11057,
											"end": 11059,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 11037,
											"end": 11055,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11037,
											"end": 11055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11037,
											"end": 11055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11030,
											"end": 11060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11130,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2061646472657373207A65726F206973206E6F7420612076"
										},
										{
											"begin": 11076,
											"end": 11094,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11076,
											"end": 11094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11076,
											"end": 11094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11069,
											"end": 11131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11147,
											"end": 11165,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11147,
											"end": 11165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11147,
											"end": 11165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11140,
											"end": 11180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11197,
											"end": 11216,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11197,
											"end": 11216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24149,
											"end": 24158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23139,
											"end": 23180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23139,
											"end": 23180,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 23139,
											"end": 23248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23196,
											"end": 23248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23196,
											"end": 23248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23196,
											"end": 23248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23248,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 23139,
											"end": 23248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 23139,
											"end": 23300,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14697,
											"end": 14737,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14697,
											"end": 14737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14697,
											"end": 14737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23264,
											"end": 23300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14589,
											"end": 14744,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23766,
											"end": 23779,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23798,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23791,
											"end": 23802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23791,
											"end": 23802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1952,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1952,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40409,
											"end": 40443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 40420,
											"end": 40422,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40424,
											"end": 40427,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40429,
											"end": 40436,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40438,
											"end": 40442,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40409,
											"end": 40419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 40409,
											"end": 40443,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40409,
											"end": 40443,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 40409,
											"end": 40443,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40264,
											"end": 40450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40264,
											"end": 40450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26033,
											"end": 26053,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26033,
											"end": 26053,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26033,
											"end": 26053,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26033,
											"end": 26053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26033,
											"end": 26093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 26033,
											"end": 26093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26057,
											"end": 26093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 26074,
											"end": 26078,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 25109,
											"end": 25275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26093,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 26057,
											"end": 26093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 26012,
											"end": 26165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26175,
											"end": 26227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 26198,
											"end": 26202,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26204,
											"end": 26206,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26208,
											"end": 26211,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26213,
											"end": 26220,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26222,
											"end": 26226,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26175,
											"end": 26197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 26175,
											"end": 26227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26175,
											"end": 26227,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 26175,
											"end": 26227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24468,
											"end": 24484,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24523,
											"end": 24526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24523,
											"end": 24533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24504,
											"end": 24512,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24504,
											"end": 24519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24504,
											"end": 24533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12229,
											"end": 12231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12211,
											"end": 12232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12268,
											"end": 12270,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 12248,
											"end": 12266,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12248,
											"end": 12266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12248,
											"end": 12266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12241,
											"end": 12271,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12307,
											"end": 12341,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 12287,
											"end": 12305,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12287,
											"end": 12305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12287,
											"end": 12305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12280,
											"end": 12342,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12358,
											"end": 12376,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12358,
											"end": 12376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12358,
											"end": 12376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12351,
											"end": 12390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12407,
											"end": 12426,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12407,
											"end": 12426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 12027,
											"end": 12432,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24590,
											"end": 24620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24637,
											"end": 24645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24637,
											"end": 24652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 24623,
											"end": 24653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24590,
											"end": 24653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24590,
											"end": 24653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24688,
											"end": 24696,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24688,
											"end": 24703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24703,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24743,
											"end": 24773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 24753,
											"end": 24761,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24762,
											"end": 24763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 24753,
											"end": 24764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24769,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24770,
											"end": 24771,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 24766,
											"end": 24772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24743,
											"end": 24752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 24743,
											"end": 24773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24743,
											"end": 24773,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 24743,
											"end": 24773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24737,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24738,
											"end": 24739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 24724,
											"end": 24740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24705,
											"end": 24708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 24705,
											"end": 24708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24705,
											"end": 24708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 24705,
											"end": 24708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24705,
											"end": 24708,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 24705,
											"end": 24708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24705,
											"end": 24708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24705,
											"end": 24708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24801,
											"end": 24814,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24335,
											"end": 24821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39916,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 39599,
											"end": 39916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39728,
											"end": 39751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39728,
											"end": 39751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 39728,
											"end": 39751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39728,
											"end": 39751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39728,
											"end": 39794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 39728,
											"end": 39794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39755,
											"end": 39794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 39772,
											"end": 39779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 25109,
											"end": 25275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39755,
											"end": 39794,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 39755,
											"end": 39794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39707,
											"end": 39866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 39707,
											"end": 39866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39707,
											"end": 39866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39707,
											"end": 39866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39707,
											"end": 39866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39707,
											"end": 39866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39707,
											"end": 39866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39707,
											"end": 39866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39707,
											"end": 39866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 39707,
											"end": 39866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39707,
											"end": 39866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 39707,
											"end": 39866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39707,
											"end": 39866,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 39707,
											"end": 39866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39877,
											"end": 39909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 39888,
											"end": 39895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39897,
											"end": 39900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39902,
											"end": 39908,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39877,
											"end": 39887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 39877,
											"end": 39909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39877,
											"end": 39909,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 39877,
											"end": 39909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39916,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 2783,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2682,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1952,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1952,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2776,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2773,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2764,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2746,
											"end": 2776,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2776,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2746,
											"end": 2776,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 2783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40094,
											"end": 40258,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 40094,
											"end": 40258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1952,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1952,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40219,
											"end": 40251,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 40225,
											"end": 40232,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40234,
											"end": 40236,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40238,
											"end": 40244,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40246,
											"end": 40250,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40219,
											"end": 40224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 40219,
											"end": 40251,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24983,
											"end": 25035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25024,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25026,
											"end": 25034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24983,
											"end": 25001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 24983,
											"end": 25035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24983,
											"end": 25035,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 24983,
											"end": 25035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24889,
											"end": 25042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25542,
											"end": 25562,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25542,
											"end": 25562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25542,
											"end": 25562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25542,
											"end": 25562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25542,
											"end": 25602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 25542,
											"end": 25602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25566,
											"end": 25602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 25583,
											"end": 25587,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 25109,
											"end": 25275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 25602,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 25566,
											"end": 25602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 25521,
											"end": 25674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25684,
											"end": 25729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 25702,
											"end": 25706,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25708,
											"end": 25710,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25712,
											"end": 25714,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25716,
											"end": 25722,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25728,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25684,
											"end": 25701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 25684,
											"end": 25729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1952,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1952,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3042,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3012,
											"end": 3085,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3012,
											"end": 3085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3012,
											"end": 3085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13043,
											"end": 13045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3012,
											"end": 3085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3012,
											"end": 3085,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3085,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13025,
											"end": 13046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13082,
											"end": 13084,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 13062,
											"end": 13080,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13062,
											"end": 13080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13062,
											"end": 13080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13055,
											"end": 13085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13121,
											"end": 13155,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13101,
											"end": 13119,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13101,
											"end": 13119,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13101,
											"end": 13119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13094,
											"end": 13156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13172,
											"end": 13190,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13172,
											"end": 13190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13172,
											"end": 13190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13165,
											"end": 13201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13218,
											"end": 13237,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13218,
											"end": 13237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 12841,
											"end": 13243,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3085,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3012,
											"end": 3085,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3114,
											"end": 3122,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3095,
											"end": 3123,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3123,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3095,
											"end": 3123,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 3130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39308,
											"end": 39593,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 39308,
											"end": 39593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39412,
											"end": 39435,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39412,
											"end": 39435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 39412,
											"end": 39435,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39412,
											"end": 39435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39412,
											"end": 39478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 39412,
											"end": 39478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39439,
											"end": 39478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 39456,
											"end": 39463,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 25109,
											"end": 25275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39439,
											"end": 39478,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 39439,
											"end": 39478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39391,
											"end": 39550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 39391,
											"end": 39550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39391,
											"end": 39550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39391,
											"end": 39550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39391,
											"end": 39550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39391,
											"end": 39550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39391,
											"end": 39550,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39391,
											"end": 39550,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39391,
											"end": 39550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 39391,
											"end": 39550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39391,
											"end": 39550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 39391,
											"end": 39550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39391,
											"end": 39550,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 39391,
											"end": 39550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39561,
											"end": 39586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 39567,
											"end": 39574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39576,
											"end": 39578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39580,
											"end": 39585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39561,
											"end": 39566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 39561,
											"end": 39586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2217,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2217,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13452,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13432,
											"end": 13453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13432,
											"end": 13453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13432,
											"end": 13453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13462,
											"end": 13492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13528,
											"end": 13562,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13508,
											"end": 13526,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13508,
											"end": 13526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13508,
											"end": 13526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13501,
											"end": 13563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13580,
											"end": 13598,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13580,
											"end": 13598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 13248,
											"end": 13604,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31435,
											"end": 32226,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 31435,
											"end": 32226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31607,
											"end": 31623,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31607,
											"end": 31623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31599,
											"end": 31661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 31599,
											"end": 31661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31599,
											"end": 31661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31599,
											"end": 31661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31599,
											"end": 31661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31599,
											"end": 31661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31599,
											"end": 31661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31599,
											"end": 31661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31599,
											"end": 31661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 31599,
											"end": 31661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31599,
											"end": 31661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 31599,
											"end": 31661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31599,
											"end": 31661,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 31599,
											"end": 31661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 31700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31693,
											"end": 31707,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31682,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 31671,
											"end": 31752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31671,
											"end": 31752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31671,
											"end": 31752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31752,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31671,
											"end": 31752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 31671,
											"end": 31752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 31671,
											"end": 31752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31752,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 31671,
											"end": 31752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31763,
											"end": 31779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31882,
											"end": 31983,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 31882,
											"end": 31983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31909,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31906,
											"end": 31916,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31902,
											"end": 31903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31902,
											"end": 31916,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31882,
											"end": 31983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31882,
											"end": 31983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 31882,
											"end": 31983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31962,
											"end": 31969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 31971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31962,
											"end": 31972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31962,
											"end": 31972,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31962,
											"end": 31972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31962,
											"end": 31972,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31962,
											"end": 31972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 31962,
											"end": 31972,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31962,
											"end": 31972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 31962,
											"end": 31972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 31962,
											"end": 31972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31962,
											"end": 31972,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 31962,
											"end": 31972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31962,
											"end": 31972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31962,
											"end": 31972,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31962,
											"end": 31972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31962,
											"end": 31972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31962,
											"end": 31972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31962,
											"end": 31972,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31937,
											"end": 31954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 31950,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31951,
											"end": 31952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 31953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 31953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 31953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 31953,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 31953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 31947,
											"end": 31953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 31953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 31947,
											"end": 31953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 31947,
											"end": 31953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 31953,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 31947,
											"end": 31953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 31953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31947,
											"end": 31953,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 31953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31947,
											"end": 31953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 31953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 31953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31937,
											"end": 31954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31937,
											"end": 31954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31937,
											"end": 31954,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31955,
											"end": 31957,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31937,
											"end": 31958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31937,
											"end": 31958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31937,
											"end": 31958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31937,
											"end": 31958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31937,
											"end": 31958,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31937,
											"end": 31972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31972,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 31937,
											"end": 31972,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 31937,
											"end": 31972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31972,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 31937,
											"end": 31972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31972,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31937,
											"end": 31972,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31918,
											"end": 31921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31918,
											"end": 31921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31918,
											"end": 31921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 31918,
											"end": 31921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31918,
											"end": 31921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 31918,
											"end": 31921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31918,
											"end": 31921,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 31918,
											"end": 31921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31918,
											"end": 31921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31918,
											"end": 31921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31918,
											"end": 31921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31882,
											"end": 31983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 31882,
											"end": 31983,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31882,
											"end": 31983,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 31882,
											"end": 31983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31882,
											"end": 31983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32034,
											"end": 32036,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32030,
											"end": 32031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32012,
											"end": 32020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 32038,
											"end": 32041,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32043,
											"end": 32050,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 31998,
											"end": 32051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31998,
											"end": 32051,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 32138,
											"end": 32219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 32174,
											"end": 32182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32192,
											"end": 32193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32196,
											"end": 32198,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32203,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32205,
											"end": 32212,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32214,
											"end": 32218,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32138,
											"end": 32173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 32138,
											"end": 32219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 29092,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 27977,
											"end": 29092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28183,
											"end": 28186,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28183,
											"end": 28193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28183,
											"end": 28211,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 28175,
											"end": 28256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28274,
											"end": 28290,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28274,
											"end": 28290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 28266,
											"end": 28332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28343,
											"end": 28359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28480,
											"end": 28483,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28480,
											"end": 28490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28476,
											"end": 28477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28476,
											"end": 28490,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28511,
											"end": 28521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28524,
											"end": 28527,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 28524,
											"end": 28530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28511,
											"end": 28530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28511,
											"end": 28530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28544,
											"end": 28558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28561,
											"end": 28568,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 28561,
											"end": 28571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28586,
											"end": 28605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28649,
											"end": 28670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28649,
											"end": 28670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28649,
											"end": 28670,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28649,
											"end": 28670,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 28641,
											"end": 28717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 28801,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 28801,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 28801,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28801,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28846,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28846,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 28801,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 28801,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 28801,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 28801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 28829,
											"end": 28856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28497,
											"end": 28867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28497,
											"end": 28867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28497,
											"end": 28867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28492,
											"end": 28495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28492,
											"end": 28495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 28492,
											"end": 28495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28492,
											"end": 28495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 28492,
											"end": 28495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28492,
											"end": 28495,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 28492,
											"end": 28495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28492,
											"end": 28495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28492,
											"end": 28495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28912,
											"end": 28914,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28906,
											"end": 28910,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28896,
											"end": 28904,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 28916,
											"end": 28919,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28921,
											"end": 28928,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 28882,
											"end": 28929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 29010,
											"end": 29085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 29046,
											"end": 29054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29056,
											"end": 29060,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29062,
											"end": 29064,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29066,
											"end": 29069,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29071,
											"end": 29078,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29080,
											"end": 29084,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29010,
											"end": 29045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 29010,
											"end": 29085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29010,
											"end": 29085,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 29010,
											"end": 29085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28165,
											"end": 29092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 29092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 29092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 29092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 29092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 29092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 29092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33507,
											"end": 34420,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 33507,
											"end": 34420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33624,
											"end": 33642,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33624,
											"end": 33642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33616,
											"end": 33682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 33616,
											"end": 33682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33616,
											"end": 33682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33616,
											"end": 33682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33616,
											"end": 33682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33616,
											"end": 33682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33616,
											"end": 33682,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33616,
											"end": 33682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33616,
											"end": 33682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 33616,
											"end": 33682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33616,
											"end": 33682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 33616,
											"end": 33682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33616,
											"end": 33682,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 33616,
											"end": 33682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33714,
											"end": 33721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33714,
											"end": 33728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33728,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 33692,
											"end": 33773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33692,
											"end": 33773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33692,
											"end": 33773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33773,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33692,
											"end": 33773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 33692,
											"end": 33773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 33692,
											"end": 33773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33773,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 33692,
											"end": 33773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33826,
											"end": 33892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33826,
											"end": 33892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33826,
											"end": 33892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33826,
											"end": 33892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33826,
											"end": 33892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33826,
											"end": 33892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33826,
											"end": 33892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33826,
											"end": 33892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33826,
											"end": 33892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 33800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33826,
											"end": 33892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33826,
											"end": 33892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33826,
											"end": 33892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33826,
											"end": 33892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 34267,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 33903,
											"end": 34267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33927,
											"end": 33930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33927,
											"end": 33937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 33924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 33937,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 34267,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 34267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 33903,
											"end": 34267,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33958,
											"end": 33968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33971,
											"end": 33974,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33975,
											"end": 33976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33977,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 33971,
											"end": 33977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 33971,
											"end": 33977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 33971,
											"end": 33977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33977,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 33971,
											"end": 33977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33971,
											"end": 33977,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33971,
											"end": 33977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33971,
											"end": 33977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33958,
											"end": 33977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33958,
											"end": 33977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33991,
											"end": 34005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34008,
											"end": 34015,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34016,
											"end": 34017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 34008,
											"end": 34018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34033,
											"end": 34052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34055,
											"end": 34068,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34068,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34055,
											"end": 34068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34068,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34068,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34055,
											"end": 34074,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34074,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34074,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34074,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34074,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34055,
											"end": 34074,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34008,
											"end": 34018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34096,
											"end": 34117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34096,
											"end": 34117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34096,
											"end": 34117,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34096,
											"end": 34117,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 34088,
											"end": 34158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34088,
											"end": 34158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34088,
											"end": 34158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34158,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34088,
											"end": 34158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 34088,
											"end": 34158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 34088,
											"end": 34158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34158,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 34088,
											"end": 34158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34200,
											"end": 34213,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34213,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34200,
											"end": 34213,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34200,
											"end": 34213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34213,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34213,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34200,
											"end": 34219,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34219,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34219,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34219,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34222,
											"end": 34242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34222,
											"end": 34242,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34200,
											"end": 34242,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33939,
											"end": 33942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33939,
											"end": 33942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 33939,
											"end": 33942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33939,
											"end": 33942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 33939,
											"end": 33942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33939,
											"end": 33942,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 33939,
											"end": 33942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33939,
											"end": 33942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33939,
											"end": 33942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33939,
											"end": 33942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 34267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 33903,
											"end": 34267,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 34267,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 33903,
											"end": 34267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33903,
											"end": 34267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34320,
											"end": 34321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34306,
											"end": 34310,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34296,
											"end": 34304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 34324,
											"end": 34327,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34329,
											"end": 34336,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 34282,
											"end": 34337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34337,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34348,
											"end": 34413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34413,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34348,
											"end": 34413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34392,
											"end": 34393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34348,
											"end": 34413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34348,
											"end": 34413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 27977,
											"end": 29092,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3471,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3284,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3464,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3424,
											"end": 3464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3464,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30374,
											"end": 31045,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 30374,
											"end": 31045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30483,
											"end": 30499,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30483,
											"end": 30499,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 30475,
											"end": 30537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30475,
											"end": 30537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30475,
											"end": 30537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30537,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30475,
											"end": 30537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 30475,
											"end": 30537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 30475,
											"end": 30537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30475,
											"end": 30537,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 30475,
											"end": 30537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30548,
											"end": 30564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30612,
											"end": 30633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 30630,
											"end": 30632,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30612,
											"end": 30629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 30612,
											"end": 30633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30612,
											"end": 30633,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 30612,
											"end": 30633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30589,
											"end": 30633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30589,
											"end": 30633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30643,
											"end": 30667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30670,
											"end": 30695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 30688,
											"end": 30694,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30670,
											"end": 30687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 30670,
											"end": 30695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30670,
											"end": 30695,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 30670,
											"end": 30695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30643,
											"end": 30695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30643,
											"end": 30695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30783,
											"end": 30796,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30783,
											"end": 30796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30783,
											"end": 30796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30796,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30783,
											"end": 30800,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30800,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30800,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30804,
											"end": 30810,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30804,
											"end": 30810,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 30783,
											"end": 30810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30804,
											"end": 30810,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30804,
											"end": 30810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 30783,
											"end": 30810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30810,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 30783,
											"end": 30810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30783,
											"end": 30810,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16820,
											"end": 16845,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16820,
											"end": 16845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16820,
											"end": 16845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16876,
											"end": 16878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16861,
											"end": 16879,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16861,
											"end": 16879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16854,
											"end": 16888,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16854,
											"end": 16888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16854,
											"end": 16888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30858,
											"end": 30859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30858,
											"end": 30859,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30825,
											"end": 30877,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 30995,
											"end": 31003,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31013,
											"end": 31014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31017,
											"end": 31019,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 31021,
											"end": 31023,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 31025,
											"end": 31031,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 31033,
											"end": 31037,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 30994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 30964,
											"end": 31038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 31038,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 30964,
											"end": 31038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30465,
											"end": 31045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30465,
											"end": 31045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30465,
											"end": 31045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30374,
											"end": 31045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30374,
											"end": 31045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30374,
											"end": 31045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30374,
											"end": 31045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30374,
											"end": 31045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34556,
											"end": 34849,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 34556,
											"end": 34849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34667,
											"end": 34684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34672,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34667,
											"end": 34684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34684,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17101,
											"end": 17103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17083,
											"end": 17104,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17140,
											"end": 17142,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17120,
											"end": 17138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17113,
											"end": 17143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17179,
											"end": 17213,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 17159,
											"end": 17177,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 17159,
											"end": 17177,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17159,
											"end": 17177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17152,
											"end": 17214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17230,
											"end": 17248,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 17230,
											"end": 17248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17230,
											"end": 17248,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17223,
											"end": 17262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17279,
											"end": 17298,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 17279,
											"end": 17298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 16899,
											"end": 17304,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34758,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 34556,
											"end": 34849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34556,
											"end": 34849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34556,
											"end": 34849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34556,
											"end": 34849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26684,
											"end": 27631,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 26684,
											"end": 27631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26865,
											"end": 26881,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26865,
											"end": 26881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 26857,
											"end": 26923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26934,
											"end": 26950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26998,
											"end": 27019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 27016,
											"end": 27018,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 26998,
											"end": 27019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27019,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 26998,
											"end": 27019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26975,
											"end": 27019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26975,
											"end": 27019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27029,
											"end": 27053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27056,
											"end": 27081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 27074,
											"end": 27080,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27056,
											"end": 27073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 27056,
											"end": 27081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27056,
											"end": 27081,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 27056,
											"end": 27081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27029,
											"end": 27081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27029,
											"end": 27081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27163,
											"end": 27182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27222,
											"end": 27243,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27222,
											"end": 27243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27222,
											"end": 27243,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27222,
											"end": 27243,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 27214,
											"end": 27290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27346,
											"end": 27366,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 27346,
											"end": 27366,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27346,
											"end": 27366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27366,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27403,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27403,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27346,
											"end": 27366,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 27346,
											"end": 27366,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27346,
											"end": 27366,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27346,
											"end": 27366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 27386,
											"end": 27413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16820,
											"end": 16845,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 16820,
											"end": 16845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16820,
											"end": 16845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16876,
											"end": 16878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16861,
											"end": 16879,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16861,
											"end": 16879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16854,
											"end": 16888,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 16854,
											"end": 16888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16854,
											"end": 16888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 27556,
											"end": 27624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 27587,
											"end": 27595,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27597,
											"end": 27601,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27605,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 27607,
											"end": 27609,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 27611,
											"end": 27617,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 27619,
											"end": 27623,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 27556,
											"end": 27586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 27556,
											"end": 27624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27556,
											"end": 27624,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 27556,
											"end": 27624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26684,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26684,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26684,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26684,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26684,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26684,
											"end": 27631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32512,
											"end": 33268,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 32512,
											"end": 33268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32604,
											"end": 32622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32596,
											"end": 32662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 32596,
											"end": 32662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32596,
											"end": 32662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32596,
											"end": 32662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32596,
											"end": 32662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32596,
											"end": 32662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32596,
											"end": 32662,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32596,
											"end": 32662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32596,
											"end": 32662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 32596,
											"end": 32662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32596,
											"end": 32662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 32596,
											"end": 32662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32596,
											"end": 32662,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 32596,
											"end": 32662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32673,
											"end": 32689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32737,
											"end": 32758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 32755,
											"end": 32757,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32737,
											"end": 32754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 32737,
											"end": 32758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32737,
											"end": 32758,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 32737,
											"end": 32758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32768,
											"end": 32792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32795,
											"end": 32820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 32813,
											"end": 32819,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32795,
											"end": 32812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 32795,
											"end": 32820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32795,
											"end": 32820,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 32795,
											"end": 32820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32831,
											"end": 32897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32831,
											"end": 32897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32831,
											"end": 32897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32831,
											"end": 32897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32831,
											"end": 32897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32831,
											"end": 32897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32831,
											"end": 32897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32831,
											"end": 32897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32831,
											"end": 32897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 32831,
											"end": 32897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32831,
											"end": 32897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32831,
											"end": 32897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32831,
											"end": 32897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32943,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32943,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32930,
											"end": 32949,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32949,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32949,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32930,
											"end": 32949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32768,
											"end": 32820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32768,
											"end": 32820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32967,
											"end": 32988,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32967,
											"end": 32988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32967,
											"end": 32988,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32967,
											"end": 32988,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32959,
											"end": 33029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 32959,
											"end": 33029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32959,
											"end": 33029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32959,
											"end": 33029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32959,
											"end": 33029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32959,
											"end": 33029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32959,
											"end": 33029,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32959,
											"end": 33029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32959,
											"end": 33029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 32959,
											"end": 33029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32959,
											"end": 33029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 32959,
											"end": 33029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32959,
											"end": 33029,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 32959,
											"end": 33029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33063,
											"end": 33076,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33063,
											"end": 33076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33063,
											"end": 33076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33076,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33076,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33085,
											"end": 33105,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 33085,
											"end": 33105,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33085,
											"end": 33105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33105,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16820,
											"end": 16845,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 16820,
											"end": 16845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16820,
											"end": 16845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16861,
											"end": 16879,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16861,
											"end": 16879,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16861,
											"end": 16879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16854,
											"end": 16888,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 16854,
											"end": 16888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16854,
											"end": 16888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33185,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33185,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 33131,
											"end": 33185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16793,
											"end": 16811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33131,
											"end": 33185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33131,
											"end": 33185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33131,
											"end": 33185,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 33196,
											"end": 33261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33196,
											"end": 33261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33196,
											"end": 33261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33196,
											"end": 33261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33196,
											"end": 33261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33196,
											"end": 33261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33196,
											"end": 33261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33196,
											"end": 33261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33196,
											"end": 33261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33240,
											"end": 33241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33196,
											"end": 33261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33196,
											"end": 33261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33196,
											"end": 33261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 27977,
											"end": 29092,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37882,
											"end": 38674,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 37882,
											"end": 38674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38114,
											"end": 38127,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38114,
											"end": 38127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5217,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 38110,
											"end": 38668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38149,
											"end": 38192,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38192,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 38149,
											"end": 38192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38193,
											"end": 38201,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 38193,
											"end": 38201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38203,
											"end": 38207,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 38203,
											"end": 38207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38209,
											"end": 38212,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 38209,
											"end": 38212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38214,
											"end": 38221,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 38214,
											"end": 38221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38223,
											"end": 38227,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 38223,
											"end": 38227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 38149,
											"end": 38228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 38149,
											"end": 38228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 38145,
											"end": 38658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 38145,
											"end": 38658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38534,
											"end": 38540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 38527,
											"end": 38541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38581,
											"end": 38643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38581,
											"end": 38643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38581,
											"end": 38643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38581,
											"end": 38643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19457,
											"end": 19459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38581,
											"end": 38643,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38581,
											"end": 38643,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38581,
											"end": 38643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19439,
											"end": 19460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19496,
											"end": 19498,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 19476,
											"end": 19494,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 19476,
											"end": 19494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19476,
											"end": 19494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19469,
											"end": 19499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19535,
											"end": 19569,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2D45524331313535"
										},
										{
											"begin": 19515,
											"end": 19533,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 19515,
											"end": 19533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19515,
											"end": 19533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19508,
											"end": 19570,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19586,
											"end": 19604,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 19586,
											"end": 19604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19586,
											"end": 19604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19579,
											"end": 19629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19646,
											"end": 19665,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 19646,
											"end": 19665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38581,
											"end": 38643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 19255,
											"end": 19671,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 38307,
											"end": 38367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38307,
											"end": 38367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38307,
											"end": 38367,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38303,
											"end": 38460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 38303,
											"end": 38460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 38391,
											"end": 38441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38680,
											"end": 38873,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 38680,
											"end": 38873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 38814,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38746,
											"end": 38762,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 38746,
											"end": 38762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38774,
											"end": 38796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38774,
											"end": 38796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38774,
											"end": 38815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38774,
											"end": 38815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38836,
											"end": 38843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38831,
											"end": 38832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 38825,
											"end": 38833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38866,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38680,
											"end": 38873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38680,
											"end": 38873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37151,
											"end": 37876,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 37151,
											"end": 37876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37358,
											"end": 37371,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37358,
											"end": 37371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5217,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37354,
											"end": 37870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 37354,
											"end": 37870,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37393,
											"end": 37431,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37431,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 37393,
											"end": 37431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37432,
											"end": 37440,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 37432,
											"end": 37440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37442,
											"end": 37446,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 37442,
											"end": 37446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37450,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37452,
											"end": 37458,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37452,
											"end": 37458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37464,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 37393,
											"end": 37465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 37393,
											"end": 37465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37389,
											"end": 37860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 37389,
											"end": 37860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37389,
											"end": 37860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 37389,
											"end": 37860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 37389,
											"end": 37860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37389,
											"end": 37860,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 37389,
											"end": 37860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 37514,
											"end": 37569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37514,
											"end": 37569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37514,
											"end": 37569,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37510,
											"end": 37662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 37510,
											"end": 37662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 37593,
											"end": 37643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 954,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1742,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1727,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1804,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1805,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 1993,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2176,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2049,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2101,
											"end": 2121,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2138,
											"end": 2139,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2430,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 2181,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2293,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2272,
											"end": 2285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2268,
											"end": 2295,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2311,
											"end": 2345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2345,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2370,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2373,
											"end": 2391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2411,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2181,
											"end": 2430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2618,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 2435,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2546,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2547,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2550,
											"end": 2568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2587,
											"end": 2612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2734,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2750,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2791,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 2873,
											"end": 2875,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 2833,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2899,
											"end": 2908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 2945,
											"end": 2947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 2917,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3129,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3197,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3198,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3274,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3275,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3220,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3341,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2623,
											"end": 3347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3432,
											"end": 3438,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3451,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3466,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3467,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3508,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3545,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3523,
											"end": 3525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3546,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3549,
											"end": 3567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3598,
											"end": 3600,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3601,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 3665,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3646,
											"end": 3659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3676,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 3610,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3750,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3733,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3719,
											"end": 3745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3751,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3761,
											"end": 3762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3825,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3819,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3794,
											"end": 3800,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3831,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3872,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3847,
											"end": 3873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3861,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3352,
											"end": 3907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4081,
											"end": 4087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4137,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4122,
											"end": 4131,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4120,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4132,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4105,
											"end": 4138,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4155,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 4102,
											"end": 4155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4148,
											"end": 4149,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4153,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4155,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 4102,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 4193,
											"end": 4202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 4174,
											"end": 4203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4203,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 4174,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4203,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4243,
											"end": 4252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4258,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4277,
											"end": 4295,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4318,
											"end": 4320,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4321,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4334,
											"end": 4335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4331,
											"end": 4332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 4336,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 4410,
											"end": 4417,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4390,
											"end": 4399,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4386,
											"end": 4408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 4357,
											"end": 4418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4418,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 4357,
											"end": 4418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4418,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4460,
											"end": 4469,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4456,
											"end": 4474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4475,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4427,
											"end": 4475,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4427,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4500,
											"end": 4502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4490,
											"end": 4498,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4516,
											"end": 4517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4513,
											"end": 4514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4518,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 4594,
											"end": 4601,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4591,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4581,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 4539,
											"end": 4602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4602,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 4539,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4529,
											"end": 4602,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4529,
											"end": 4602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4655,
											"end": 4657,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4644,
											"end": 4653,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4640,
											"end": 4658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4659,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4684,
											"end": 4686,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4674,
											"end": 4682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4687,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4704,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 4668,
											"end": 4704,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4701,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4704,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 4668,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 4766,
											"end": 4773,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4755,
											"end": 4763,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4753,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 4723,
											"end": 4774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4774,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 4723,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4939,
											"end": 4945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 4953,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5027,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5012,
											"end": 5021,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5010,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4999,
											"end": 5022,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5028,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5045,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 4992,
											"end": 5045,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5038,
											"end": 5039,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5043,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 4992,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 5083,
											"end": 5092,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 5064,
											"end": 5093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5093,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 5064,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5093,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 5146,
											"end": 5148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5135,
											"end": 5144,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 5112,
											"end": 5150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5150,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 5112,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5150,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5203,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5199,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5205,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5265,
											"end": 5267,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5268,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 5285,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 5251,
											"end": 5285,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5283,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 5285,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 5251,
											"end": 5285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 5357,
											"end": 5364,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5354,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5337,
											"end": 5346,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 5304,
											"end": 5365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5365,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 5304,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5294,
											"end": 5365,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5294,
											"end": 5365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5418,
											"end": 5420,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5407,
											"end": 5416,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5403,
											"end": 5421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5422,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5449,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5445,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5467,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 5431,
											"end": 5467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5461,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5465,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5467,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 5431,
											"end": 5467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5486,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 5541,
											"end": 5548,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5530,
											"end": 5538,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5519,
											"end": 5528,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5486,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 5486,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5486,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 5486,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5549,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5605,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5591,
											"end": 5600,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5607,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5558,
											"end": 5607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5558,
											"end": 5607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5632,
											"end": 5634,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5622,
											"end": 5630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5635,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5652,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 5616,
											"end": 5652,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5645,
											"end": 5646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5650,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5652,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 5616,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 5714,
											"end": 5721,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5703,
											"end": 5711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5701,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 5671,
											"end": 5722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5722,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 5671,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5722,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 6941,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5733,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5851,
											"end": 5857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5859,
											"end": 5865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 5914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5900,
											"end": 5909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 5898,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 5910,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 5915,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5932,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 5880,
											"end": 5932,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5926,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 5930,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5932,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 5880,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 5977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5955,
											"end": 5978,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6038,
											"end": 6040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6041,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6051,
											"end": 6052,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6044,
											"end": 6056,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6092,
											"end": 6098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6081,
											"end": 6090,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6067,
											"end": 6099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6067,
											"end": 6099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6144,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6130,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6126,
											"end": 6128,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6122,
											"end": 6135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6145,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 6108,
											"end": 6163,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6159,
											"end": 6160,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6149,
											"end": 6161,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6163,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 6108,
											"end": 6163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6195,
											"end": 6197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6182,
											"end": 6198,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6240,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 6280,
											"end": 6282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 6240,
											"end": 6283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6283,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 6240,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6306,
											"end": 6315,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 6352,
											"end": 6354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 6324,
											"end": 6355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6355,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 6324,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6479,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6474,
											"end": 6484,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6474,
											"end": 6484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6474,
											"end": 6484,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6474,
											"end": 6484,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6485,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6462,
											"end": 6490,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6462,
											"end": 6490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6462,
											"end": 6490,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6502,
											"end": 6521,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6521,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6538,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 6499,
											"end": 6538,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6524,
											"end": 6536,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6538,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 6499,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6569,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6569,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6569,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6569,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 6600,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6592,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6586,
											"end": 6601,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 6679,
											"end": 6682,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 6660,
											"end": 6683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6683,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 6660,
											"end": 6683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6623,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6623,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6623,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6751,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6789,
											"end": 6807,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6776,
											"end": 6808,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6776,
											"end": 6808,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6820,
											"end": 6836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6836,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6853,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 6817,
											"end": 6853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6849,
											"end": 6850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6846,
											"end": 6847,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6851,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6853,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 6817,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 6927,
											"end": 6934,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6914,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6901,
											"end": 6925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 6872,
											"end": 6935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6935,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 6872,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 6941,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 6941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 6941,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 6941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 6941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 6941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6946,
											"end": 7381,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 6946,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6999,
											"end": 7002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7037,
											"end": 7042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7070,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7059,
											"end": 7062,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7052,
											"end": 7071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7090,
											"end": 7094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7119,
											"end": 7121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7114,
											"end": 7117,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7110,
											"end": 7122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7122,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7156,
											"end": 7158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7154,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7198,
											"end": 7199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7208,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7276,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 7308,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 7308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 7308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 7308,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7223,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7372,
											"end": 7375,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7375,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6946,
											"end": 7381,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6946,
											"end": 7381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7386,
											"end": 7647,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 7386,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7565,
											"end": 7567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7554,
											"end": 7563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7547,
											"end": 7568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7532,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 7641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 7637,
											"end": 7639,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7626,
											"end": 7635,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7614,
											"end": 7620,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 7585,
											"end": 7641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 8321,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 7652,
											"end": 8321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7779,
											"end": 7785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7787,
											"end": 7793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7848,
											"end": 7850,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7836,
											"end": 7845,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 7834,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7819,
											"end": 7851,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 7816,
											"end": 7868,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7861,
											"end": 7862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7854,
											"end": 7866,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7868,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 7816,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 7906,
											"end": 7915,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 7887,
											"end": 7916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7916,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 7887,
											"end": 7916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7877,
											"end": 7916,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7877,
											"end": 7916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7967,
											"end": 7969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7956,
											"end": 7965,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 7971,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8031,
											"end": 8033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8034,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8051,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 8017,
											"end": 8051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8044,
											"end": 8045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8037,
											"end": 8049,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8051,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 8017,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8070,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 8123,
											"end": 8130,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8103,
											"end": 8112,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8070,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 8070,
											"end": 8131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8070,
											"end": 8131,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 8070,
											"end": 8131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8131,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8184,
											"end": 8186,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8173,
											"end": 8182,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8169,
											"end": 8187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8140,
											"end": 8188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8140,
											"end": 8188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8213,
											"end": 8215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8203,
											"end": 8211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8216,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 8197,
											"end": 8233,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8229,
											"end": 8230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8219,
											"end": 8231,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8233,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 8197,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 8307,
											"end": 8314,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8296,
											"end": 8304,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8294,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 8252,
											"end": 8315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8315,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 8252,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8242,
											"end": 8315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8242,
											"end": 8315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8242,
											"end": 8315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 8321,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 8321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 8321,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 8321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 8321,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 8321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8326,
											"end": 8857,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 8326,
											"end": 8857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8421,
											"end": 8427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8429,
											"end": 8435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8437,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8445,
											"end": 8451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8501,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8486,
											"end": 8495,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8484,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8473,
											"end": 8496,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8469,
											"end": 8502,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8466,
											"end": 8519,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8466,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 8466,
											"end": 8519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8515,
											"end": 8516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8512,
											"end": 8513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8505,
											"end": 8517,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8466,
											"end": 8519,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 8466,
											"end": 8519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8538,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 8557,
											"end": 8566,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8538,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 8538,
											"end": 8567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8538,
											"end": 8567,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 8538,
											"end": 8567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8528,
											"end": 8567,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8528,
											"end": 8567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8614,
											"end": 8616,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8603,
											"end": 8612,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8599,
											"end": 8617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8586,
											"end": 8618,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8618,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8665,
											"end": 8667,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8654,
											"end": 8663,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8650,
											"end": 8668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8637,
											"end": 8669,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8669,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8722,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8709,
											"end": 8718,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8705,
											"end": 8723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8692,
											"end": 8724,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8739,
											"end": 8745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8736,
											"end": 8766,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8783,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 8733,
											"end": 8783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8779,
											"end": 8780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8776,
											"end": 8777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8783,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 8733,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 8843,
											"end": 8850,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8834,
											"end": 8840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8823,
											"end": 8832,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 8802,
											"end": 8851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9070,
											"end": 9417,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 9070,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9135,
											"end": 9141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9143,
											"end": 9149,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9196,
											"end": 9198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9184,
											"end": 9193,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9175,
											"end": 9182,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9194,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9167,
											"end": 9199,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9164,
											"end": 9216,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9164,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 9164,
											"end": 9216,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9212,
											"end": 9213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9209,
											"end": 9210,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9202,
											"end": 9214,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9164,
											"end": 9216,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 9164,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9235,
											"end": 9264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 9254,
											"end": 9263,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9235,
											"end": 9264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 9235,
											"end": 9264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9235,
											"end": 9264,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 9235,
											"end": 9264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9225,
											"end": 9264,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9225,
											"end": 9264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9314,
											"end": 9316,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9303,
											"end": 9312,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9299,
											"end": 9317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9286,
											"end": 9318,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9361,
											"end": 9366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9354,
											"end": 9367,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9347,
											"end": 9368,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9340,
											"end": 9345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9337,
											"end": 9369,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9327,
											"end": 9387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 9327,
											"end": 9387,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9380,
											"end": 9381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9373,
											"end": 9385,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9327,
											"end": 9387,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 9327,
											"end": 9387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9406,
											"end": 9411,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9070,
											"end": 9417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9070,
											"end": 9417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9070,
											"end": 9417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9070,
											"end": 9417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9070,
											"end": 9417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9070,
											"end": 9417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 9682,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 9422,
											"end": 9682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9498,
											"end": 9504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9551,
											"end": 9553,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9539,
											"end": 9548,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9530,
											"end": 9537,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9554,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9519,
											"end": 9571,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9519,
											"end": 9571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 9519,
											"end": 9571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9567,
											"end": 9568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9564,
											"end": 9565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9557,
											"end": 9569,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9519,
											"end": 9571,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 9519,
											"end": 9571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9590,
											"end": 9619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 9609,
											"end": 9618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9590,
											"end": 9619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 9590,
											"end": 9619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9590,
											"end": 9619,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 9590,
											"end": 9619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9580,
											"end": 9619,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9580,
											"end": 9619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9638,
											"end": 9676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 9672,
											"end": 9674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9661,
											"end": 9670,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9657,
											"end": 9675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9638,
											"end": 9676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 9638,
											"end": 9676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9638,
											"end": 9676,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 9638,
											"end": 9676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9628,
											"end": 9676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9628,
											"end": 9676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 9682,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 9682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 9682,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 9682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 9682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 9682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9687,
											"end": 10293,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 9687,
											"end": 10293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9791,
											"end": 9797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9799,
											"end": 9805,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9807,
											"end": 9813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9823,
											"end": 9829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9876,
											"end": 9879,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 9864,
											"end": 9873,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9862,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9851,
											"end": 9874,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9847,
											"end": 9880,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9897,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 9844,
											"end": 9897,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9893,
											"end": 9894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9890,
											"end": 9891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9895,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9897,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 9844,
											"end": 9897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9916,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 9935,
											"end": 9944,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9916,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 9916,
											"end": 9945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9916,
											"end": 9945,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 9916,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9945,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 9998,
											"end": 10000,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 9996,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 10001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 9964,
											"end": 10002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 10002,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 9964,
											"end": 10002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9954,
											"end": 10002,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9954,
											"end": 10002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10051,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10038,
											"end": 10047,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10021,
											"end": 10053,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 10011,
											"end": 10053,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10011,
											"end": 10053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10102,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10089,
											"end": 10098,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10072,
											"end": 10104,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 10062,
											"end": 10104,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10062,
											"end": 10104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10158,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10144,
											"end": 10153,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10140,
											"end": 10159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10127,
											"end": 10160,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10201,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10175,
											"end": 10181,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10172,
											"end": 10202,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10169,
											"end": 10219,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10169,
											"end": 10219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 10169,
											"end": 10219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10212,
											"end": 10213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10205,
											"end": 10217,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10169,
											"end": 10219,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 10169,
											"end": 10219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10238,
											"end": 10287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 10279,
											"end": 10286,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10259,
											"end": 10268,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 10255,
											"end": 10277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10238,
											"end": 10287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 10238,
											"end": 10287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10298,
											"end": 10484,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 10298,
											"end": 10484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10357,
											"end": 10363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10410,
											"end": 10412,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10398,
											"end": 10407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10389,
											"end": 10396,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10385,
											"end": 10408,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10381,
											"end": 10413,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10430,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 10378,
											"end": 10430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10426,
											"end": 10427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10423,
											"end": 10424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10416,
											"end": 10428,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10430,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 10378,
											"end": 10430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 10468,
											"end": 10477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10449,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 10449,
											"end": 10478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10811,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 10489,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10566,
											"end": 10572,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10574,
											"end": 10580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10582,
											"end": 10588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10637,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10623,
											"end": 10632,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10614,
											"end": 10621,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10610,
											"end": 10633,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10606,
											"end": 10638,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10603,
											"end": 10655,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10603,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 10603,
											"end": 10655,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10651,
											"end": 10652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10648,
											"end": 10649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10641,
											"end": 10653,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10603,
											"end": 10655,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 10603,
											"end": 10655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10674,
											"end": 10703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 10693,
											"end": 10702,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10674,
											"end": 10703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 10674,
											"end": 10703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10674,
											"end": 10703,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 10674,
											"end": 10703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10703,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 10752,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10735,
											"end": 10753,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10722,
											"end": 10754,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 10722,
											"end": 10754,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10801,
											"end": 10803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10786,
											"end": 10804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10786,
											"end": 10804,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10786,
											"end": 10804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10773,
											"end": 10805,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 10773,
											"end": 10805,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10811,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10489,
											"end": 10811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11607,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 11227,
											"end": 11607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11306,
											"end": 11307,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11302,
											"end": 11314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11302,
											"end": 11314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11302,
											"end": 11314,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 11302,
											"end": 11314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11349,
											"end": 11361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11349,
											"end": 11361,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11349,
											"end": 11361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11370,
											"end": 11431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 11370,
											"end": 11431,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11424,
											"end": 11428,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 11416,
											"end": 11422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11429,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11402,
											"end": 11429,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11402,
											"end": 11429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11370,
											"end": 11431,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 11370,
											"end": 11431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11477,
											"end": 11479,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11469,
											"end": 11475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11466,
											"end": 11480,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11446,
											"end": 11464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11443,
											"end": 11481,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11440,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 11440,
											"end": 11601,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11523,
											"end": 11533,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 11518,
											"end": 11521,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 11514,
											"end": 11534,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11504,
											"end": 11535,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11558,
											"end": 11562,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 11555,
											"end": 11556,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11548,
											"end": 11563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11586,
											"end": 11590,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11583,
											"end": 11584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11576,
											"end": 11591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11440,
											"end": 11601,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 11440,
											"end": 11601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11440,
											"end": 11601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11612,
											"end": 12022,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 11612,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11814,
											"end": 11816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11796,
											"end": 11817,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11796,
											"end": 11817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11796,
											"end": 11817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11853,
											"end": 11855,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 11833,
											"end": 11851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11833,
											"end": 11851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11833,
											"end": 11851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11826,
											"end": 11856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11892,
											"end": 11926,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E"
										},
										{
											"begin": 11887,
											"end": 11889,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11872,
											"end": 11890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11872,
											"end": 11890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11865,
											"end": 11927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11958,
											"end": 11960,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11943,
											"end": 11961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11943,
											"end": 11961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11936,
											"end": 11980,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12012,
											"end": 12015,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11997,
											"end": 12016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11997,
											"end": 12016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11612,
											"end": 12022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12437,
											"end": 12564,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 12437,
											"end": 12564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12498,
											"end": 12508,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 12493,
											"end": 12496,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 12489,
											"end": 12509,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 12486,
											"end": 12487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12479,
											"end": 12510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12529,
											"end": 12533,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 12526,
											"end": 12527,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12519,
											"end": 12534,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12553,
											"end": 12557,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12550,
											"end": 12551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12543,
											"end": 12558,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12569,
											"end": 12696,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 12569,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12640,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 12625,
											"end": 12628,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 12621,
											"end": 12641,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 12618,
											"end": 12619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12611,
											"end": 12642,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12661,
											"end": 12665,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 12658,
											"end": 12659,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12651,
											"end": 12666,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12685,
											"end": 12689,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12682,
											"end": 12683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12675,
											"end": 12690,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 12836,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 12701,
											"end": 12836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12740,
											"end": 12743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12761,
											"end": 12778,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12761,
											"end": 12778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12761,
											"end": 12778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12758,
											"end": 12801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 12758,
											"end": 12801,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 12781,
											"end": 12799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12828,
											"end": 12829,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12817,
											"end": 12830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12817,
											"end": 12830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12701,
											"end": 12836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13609,
											"end": 14006,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 13609,
											"end": 14006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13811,
											"end": 13813,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13793,
											"end": 13814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13793,
											"end": 13814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13850,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 13830,
											"end": 13848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13830,
											"end": 13848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13830,
											"end": 13848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13823,
											"end": 13853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13889,
											"end": 13923,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 13884,
											"end": 13886,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13869,
											"end": 13887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13869,
											"end": 13887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13862,
											"end": 13924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13955,
											"end": 13957,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13940,
											"end": 13958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13940,
											"end": 13958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13933,
											"end": 13964,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13996,
											"end": 13999,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13981,
											"end": 14000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13981,
											"end": 14000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13609,
											"end": 14006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14415,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 14011,
											"end": 14415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14213,
											"end": 14215,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14195,
											"end": 14216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14195,
											"end": 14216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14195,
											"end": 14216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14252,
											"end": 14254,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 14232,
											"end": 14250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14250,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14225,
											"end": 14255,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14291,
											"end": 14325,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 14286,
											"end": 14288,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14271,
											"end": 14289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14271,
											"end": 14289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14264,
											"end": 14326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14357,
											"end": 14359,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14342,
											"end": 14360,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14342,
											"end": 14360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14335,
											"end": 14373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14405,
											"end": 14408,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14390,
											"end": 14409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14390,
											"end": 14409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14420,
											"end": 14545,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 14420,
											"end": 14545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14485,
											"end": 14494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14485,
											"end": 14494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14485,
											"end": 14494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14506,
											"end": 14516,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14506,
											"end": 14516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14506,
											"end": 14516,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14503,
											"end": 14539,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14503,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 14503,
											"end": 14539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14519,
											"end": 14537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 14519,
											"end": 14537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 14519,
											"end": 14537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14550,
											"end": 15015,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 14550,
											"end": 15015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14807,
											"end": 14809,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14796,
											"end": 14805,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14789,
											"end": 14810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14770,
											"end": 14774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14833,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 14885,
											"end": 14887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14874,
											"end": 14883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14870,
											"end": 14888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14862,
											"end": 14868,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14833,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 14833,
											"end": 14889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14833,
											"end": 14889,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 14833,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14937,
											"end": 14946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14929,
											"end": 14935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14925,
											"end": 14947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14920,
											"end": 14922,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14909,
											"end": 14918,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14905,
											"end": 14923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14898,
											"end": 14948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14965,
											"end": 15009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 15002,
											"end": 15008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14994,
											"end": 15000,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14965,
											"end": 15009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 14965,
											"end": 15009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14965,
											"end": 15009,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 14965,
											"end": 15009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14957,
											"end": 15009,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14550,
											"end": 15015,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14550,
											"end": 15015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15020,
											"end": 15421,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 15020,
											"end": 15421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15222,
											"end": 15224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15204,
											"end": 15225,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15204,
											"end": 15225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15204,
											"end": 15225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15261,
											"end": 15263,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 15241,
											"end": 15259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15241,
											"end": 15259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15241,
											"end": 15259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15234,
											"end": 15264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15300,
											"end": 15334,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 15295,
											"end": 15297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15273,
											"end": 15335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15366,
											"end": 15368,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15351,
											"end": 15369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15351,
											"end": 15369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15344,
											"end": 15379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15411,
											"end": 15414,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15396,
											"end": 15415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 15415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15020,
											"end": 15421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15426,
											"end": 15832,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 15426,
											"end": 15832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15628,
											"end": 15630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15610,
											"end": 15631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15610,
											"end": 15631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15610,
											"end": 15631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15667,
											"end": 15669,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 15647,
											"end": 15665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15647,
											"end": 15665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15647,
											"end": 15665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15640,
											"end": 15670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15706,
											"end": 15740,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 15701,
											"end": 15703,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15686,
											"end": 15704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15686,
											"end": 15704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15679,
											"end": 15741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15772,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15757,
											"end": 15775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15757,
											"end": 15775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15750,
											"end": 15790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15822,
											"end": 15825,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15807,
											"end": 15826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15807,
											"end": 15826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15426,
											"end": 15832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15837,
											"end": 16236,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 15837,
											"end": 16236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16039,
											"end": 16041,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16021,
											"end": 16042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16021,
											"end": 16042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16021,
											"end": 16042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16078,
											"end": 16080,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 16058,
											"end": 16076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16058,
											"end": 16076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16058,
											"end": 16076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16051,
											"end": 16081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16117,
											"end": 16151,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206275726E2066726F6D20746865207A65726F2061646472"
										},
										{
											"begin": 16112,
											"end": 16114,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16097,
											"end": 16115,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16097,
											"end": 16115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16090,
											"end": 16152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16183,
											"end": 16185,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16168,
											"end": 16186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16168,
											"end": 16186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16161,
											"end": 16194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16226,
											"end": 16229,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16211,
											"end": 16230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16211,
											"end": 16230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15837,
											"end": 16236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16241,
											"end": 16641,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 16241,
											"end": 16641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16443,
											"end": 16445,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16425,
											"end": 16446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16425,
											"end": 16446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16425,
											"end": 16446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16482,
											"end": 16484,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16462,
											"end": 16480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16462,
											"end": 16480,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16462,
											"end": 16480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16455,
											"end": 16485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16521,
											"end": 16555,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206275726E20616D6F756E7420657863656564732062616C"
										},
										{
											"begin": 16516,
											"end": 16518,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16501,
											"end": 16519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16501,
											"end": 16519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16587,
											"end": 16589,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16572,
											"end": 16590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16572,
											"end": 16590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16565,
											"end": 16599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16631,
											"end": 16634,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16616,
											"end": 16635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16616,
											"end": 16635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16241,
											"end": 16641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17309,
											"end": 18136,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 17309,
											"end": 18136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17706,
											"end": 17721,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17706,
											"end": 17721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17706,
											"end": 17721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17688,
											"end": 17722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17688,
											"end": 17722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17758,
											"end": 17773,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17758,
											"end": 17773,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17753,
											"end": 17755,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17738,
											"end": 17756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17738,
											"end": 17756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17731,
											"end": 17774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17668,
											"end": 17671,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 17805,
											"end": 17807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17790,
											"end": 17808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17790,
											"end": 17808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17783,
											"end": 17814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17783,
											"end": 17814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17783,
											"end": 17814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17631,
											"end": 17635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17631,
											"end": 17635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17837,
											"end": 17894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 17837,
											"end": 17894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17874,
											"end": 17893,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17874,
											"end": 17893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17866,
											"end": 17872,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17837,
											"end": 17894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 17837,
											"end": 17894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17837,
											"end": 17894,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 17837,
											"end": 17894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17942,
											"end": 17951,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17934,
											"end": 17940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17930,
											"end": 17952,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17925,
											"end": 17927,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17914,
											"end": 17923,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17910,
											"end": 17928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17903,
											"end": 17953,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17976,
											"end": 18020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 18013,
											"end": 18019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18005,
											"end": 18011,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17976,
											"end": 18020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 17976,
											"end": 18020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17976,
											"end": 18020,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 17976,
											"end": 18020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17962,
											"end": 18020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17962,
											"end": 18020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18069,
											"end": 18078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18061,
											"end": 18067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18057,
											"end": 18079,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18051,
											"end": 18054,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 18040,
											"end": 18049,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18036,
											"end": 18055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18029,
											"end": 18080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18097,
											"end": 18130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 18123,
											"end": 18129,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18115,
											"end": 18121,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18097,
											"end": 18130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 18097,
											"end": 18130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18097,
											"end": 18130,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 18097,
											"end": 18130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18089,
											"end": 18130,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 17309,
											"end": 18136,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17309,
											"end": 18136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18141,
											"end": 18390,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 18141,
											"end": 18390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18210,
											"end": 18216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18263,
											"end": 18265,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18251,
											"end": 18260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18242,
											"end": 18249,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18238,
											"end": 18261,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18234,
											"end": 18266,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 18231,
											"end": 18283,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18231,
											"end": 18283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 18231,
											"end": 18283,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18279,
											"end": 18280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18276,
											"end": 18277,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18269,
											"end": 18281,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18231,
											"end": 18283,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 18231,
											"end": 18283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18311,
											"end": 18320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18305,
											"end": 18321,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18330,
											"end": 18360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 18354,
											"end": 18359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18330,
											"end": 18360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 18330,
											"end": 18360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18395,
											"end": 18574,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 18395,
											"end": 18574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18430,
											"end": 18433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18472,
											"end": 18473,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 18454,
											"end": 18470,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 18451,
											"end": 18474,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18448,
											"end": 18568,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18448,
											"end": 18568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 18448,
											"end": 18568,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18518,
											"end": 18519,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18515,
											"end": 18516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18512,
											"end": 18513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18497,
											"end": 18520,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18555,
											"end": 18556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18549,
											"end": 18557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18544,
											"end": 18547,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 18540,
											"end": 18558,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 18448,
											"end": 18568,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 18448,
											"end": 18568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18395,
											"end": 18574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18395,
											"end": 18574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18579,
											"end": 19250,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 18579,
											"end": 19250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18618,
											"end": 18621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18660,
											"end": 18664,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 18642,
											"end": 18658,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 18639,
											"end": 18665,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18675,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 18636,
											"end": 18675,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18579,
											"end": 19250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18579,
											"end": 19250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18636,
											"end": 18675,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 18636,
											"end": 18675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18702,
											"end": 18704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18696,
											"end": 18705,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18767,
											"end": 18783,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 18763,
											"end": 18788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18763,
											"end": 18788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18760,
											"end": 18761,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18696,
											"end": 18705,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18739,
											"end": 18789,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 18818,
											"end": 18822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18812,
											"end": 18823,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18842,
											"end": 18858,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 18877,
											"end": 18895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18948,
											"end": 18950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18941,
											"end": 18945,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 18933,
											"end": 18939,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18929,
											"end": 18946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18926,
											"end": 18951,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18921,
											"end": 18923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18913,
											"end": 18919,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18910,
											"end": 18924,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18907,
											"end": 18952,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 18904,
											"end": 18962,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18904,
											"end": 18962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 18904,
											"end": 18962,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18955,
											"end": 18960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18955,
											"end": 18960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18955,
											"end": 18960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18955,
											"end": 18960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18955,
											"end": 18960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18579,
											"end": 19250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18579,
											"end": 19250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18904,
											"end": 18962,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 18904,
											"end": 18962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18992,
											"end": 18998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18986,
											"end": 18990,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18982,
											"end": 18999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18971,
											"end": 18999,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18971,
											"end": 18999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19028,
											"end": 19031,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19022,
											"end": 19032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19055,
											"end": 19057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19047,
											"end": 19053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19044,
											"end": 19058,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19041,
											"end": 19068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19041,
											"end": 19068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 19041,
											"end": 19068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19061,
											"end": 19066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19061,
											"end": 19066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19061,
											"end": 19066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19061,
											"end": 19066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19061,
											"end": 19066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19061,
											"end": 19066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18579,
											"end": 19250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18579,
											"end": 19250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19041,
											"end": 19068,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 19041,
											"end": 19068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19145,
											"end": 19147,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19126,
											"end": 19142,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 19120,
											"end": 19124,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19116,
											"end": 19143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19112,
											"end": 19148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19105,
											"end": 19109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19096,
											"end": 19102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19091,
											"end": 19094,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19087,
											"end": 19103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19083,
											"end": 19110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19080,
											"end": 19149,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19159,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 19077,
											"end": 19159,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19152,
											"end": 19157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19152,
											"end": 19157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19152,
											"end": 19157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19152,
											"end": 19157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19152,
											"end": 19157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19152,
											"end": 19157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18579,
											"end": 19250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18579,
											"end": 19250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19159,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 19077,
											"end": 19159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19168,
											"end": 19225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 19219,
											"end": 19223,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19210,
											"end": 19216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19202,
											"end": 19208,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19198,
											"end": 19217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19194,
											"end": 19224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19188,
											"end": 19192,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19168,
											"end": 19225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 19168,
											"end": 19225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19168,
											"end": 19225,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 19168,
											"end": 19225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19241,
											"end": 19244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19241,
											"end": 19244,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 18579,
											"end": 19250,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18579,
											"end": 19250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19676,
											"end": 20080,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 19676,
											"end": 20080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19878,
											"end": 19880,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19860,
											"end": 19881,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19860,
											"end": 19881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19860,
											"end": 19881,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19917,
											"end": 19919,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 19897,
											"end": 19915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19897,
											"end": 19915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19897,
											"end": 19915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19890,
											"end": 19920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19956,
											"end": 19990,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 19951,
											"end": 19953,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19936,
											"end": 19954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19936,
											"end": 19954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19929,
											"end": 19991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20022,
											"end": 20024,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 20007,
											"end": 20025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20007,
											"end": 20025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20000,
											"end": 20038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20070,
											"end": 20073,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 20055,
											"end": 20074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20055,
											"end": 20074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19676,
											"end": 20080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20085,
											"end": 20646,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 20085,
											"end": 20646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20382,
											"end": 20397,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20382,
											"end": 20397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20382,
											"end": 20397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20364,
											"end": 20398,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20364,
											"end": 20398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20434,
											"end": 20449,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20434,
											"end": 20449,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20429,
											"end": 20431,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20414,
											"end": 20432,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20414,
											"end": 20432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20407,
											"end": 20450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20481,
											"end": 20483,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20466,
											"end": 20484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20466,
											"end": 20484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20459,
											"end": 20493,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20459,
											"end": 20493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20459,
											"end": 20493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20524,
											"end": 20526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 20509,
											"end": 20527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20509,
											"end": 20527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20502,
											"end": 20536,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20502,
											"end": 20536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20502,
											"end": 20536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20344,
											"end": 20347,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 20567,
											"end": 20570,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 20552,
											"end": 20571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20552,
											"end": 20571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20545,
											"end": 20577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20545,
											"end": 20577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20545,
											"end": 20577,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20307,
											"end": 20311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20307,
											"end": 20311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20594,
											"end": 20640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 20594,
											"end": 20640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20620,
											"end": 20639,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20620,
											"end": 20639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20612,
											"end": 20618,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20594,
											"end": 20640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 20594,
											"end": 20640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20594,
											"end": 20640,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 20594,
											"end": 20640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20586,
											"end": 20640,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 20085,
											"end": 20646,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20085,
											"end": 20646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/DTicket2_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256,bytes)": "731133e9",
							"mintBatch(address,uint256[],uint256[],bytes)": "1f7fdffa",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTicket2_flattened.sol\":\"DTicket\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTicket2_flattened.sol\":{\"keccak256\":\"0x0e5171726fbcef88c4fd8ad350fc221a51d0b45111501457fe01feae960104ac\",\"urls\":[\"bzz-raw://3972866374f9c10c710210df0c6eb470f5a7c097af6c15e9d7bd08bdbd309eb8\",\"dweb:/ipfs/QmWmbTsVDaPrP4t7yGkVFydubtRc4dnZxvtUDscQJ1hDo7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 685,
								"contract": "contracts/DTicket2_flattened.sol:DTicket",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 691,
								"contract": "contracts/DTicket2_flattened.sol:DTicket",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 693,
								"contract": "contracts/DTicket2_flattened.sol:DTicket",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "contracts/DTicket2_flattened.sol:DTicket",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DTicket2_flattened.sol\":22336:38875  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DTicket2_flattened.sol\":22873:22935  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/DTicket2_flattened.sol\":22915:22928  _setURI(uri_) */\n  tag_6\n    /* \"contracts/DTicket2_flattened.sol\":22923:22927  uri_ */\n  dup2\n    /* \"contracts/DTicket2_flattened.sol\":22915:22922  _setURI */\n  tag_7\n    /* \"contracts/DTicket2_flattened.sol\":22915:22928  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"contracts/DTicket2_flattened.sol\":22873:22935  constructor(string memory uri_) {... */\n  pop\n    /* \"contracts/DTicket2_flattened.sol\":22336:38875  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_17)\n    /* \"contracts/DTicket2_flattened.sol\":29915:30001  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"contracts/DTicket2_flattened.sol\":29981:29985  _uri */\n  0x02\n    /* \"contracts/DTicket2_flattened.sol\":29981:29994  _uri = newuri */\n  tag_10\n    /* \"contracts/DTicket2_flattened.sol\":29988:29994  newuri */\n  dup3\n    /* \"contracts/DTicket2_flattened.sol\":29981:29985  _uri */\n  dup3\n    /* \"contracts/DTicket2_flattened.sol\":29981:29994  _uri = newuri */\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/DTicket2_flattened.sol\":29915:30001  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_12:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1188   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":257:259   */\n  0x20\n    /* \"#utility.yul\":300:302   */\n  dup1\n    /* \"#utility.yul\":288:297   */\n  dup4\n    /* \"#utility.yul\":279:286   */\n  dup6\n    /* \"#utility.yul\":275:298   */\n  sub\n    /* \"#utility.yul\":271:303   */\n  slt\n    /* \"#utility.yul\":268:320   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":313:314   */\n  dup1\n    /* \"#utility.yul\":306:318   */\n  revert\n    /* \"#utility.yul\":268:320   */\ntag_20:\n    /* \"#utility.yul\":343:359   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":408:422   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":405:439   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":432:433   */\n  dup1\n    /* \"#utility.yul\":425:437   */\n  revert\n    /* \"#utility.yul\":405:439   */\ntag_21:\n    /* \"#utility.yul\":473:479   */\n  dup2\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":448:480   */\n  swap2\n  pop\n    /* \"#utility.yul\":518:525   */\n  dup6\n    /* \"#utility.yul\":511:515   */\n  0x1f\n    /* \"#utility.yul\":507:509   */\n  dup4\n    /* \"#utility.yul\":503:516   */\n  add\n    /* \"#utility.yul\":499:526   */\n  slt\n    /* \"#utility.yul\":489:544   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":540:541   */\n  0x00\n    /* \"#utility.yul\":537:538   */\n  dup1\n    /* \"#utility.yul\":530:542   */\n  revert\n    /* \"#utility.yul\":489:544   */\ntag_22:\n    /* \"#utility.yul\":569:571   */\n  dup2\n    /* \"#utility.yul\":563:572   */\n  mload\n    /* \"#utility.yul\":591:593   */\n  dup2\n    /* \"#utility.yul\":587:589   */\n  dup2\n    /* \"#utility.yul\":584:594   */\n  gt\n    /* \"#utility.yul\":581:617   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":597:615   */\n  tag_24\n  tag_12\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":672:674   */\n  0x40\n    /* \"#utility.yul\":666:675   */\n  mload\n    /* \"#utility.yul\":640:642   */\n  0x1f\n    /* \"#utility.yul\":726:739   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":722:744   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":746:748   */\n  0x3f\n    /* \"#utility.yul\":718:749   */\n  add\n    /* \"#utility.yul\":714:754   */\n  and\n    /* \"#utility.yul\":702:755   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":770:788   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":790:812   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":767:813   */\n  or\n    /* \"#utility.yul\":764:836   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":816:834   */\n  tag_26\n  tag_12\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":856:866   */\n  dup2\n    /* \"#utility.yul\":852:854   */\n  0x40\n    /* \"#utility.yul\":845:867   */\n  mstore\n    /* \"#utility.yul\":891:893   */\n  dup3\n    /* \"#utility.yul\":883:889   */\n  dup2\n    /* \"#utility.yul\":876:894   */\n  mstore\n    /* \"#utility.yul\":931:938   */\n  dup9\n    /* \"#utility.yul\":926:928   */\n  dup7\n    /* \"#utility.yul\":921:923   */\n  dup5\n    /* \"#utility.yul\":917:919   */\n  dup8\n    /* \"#utility.yul\":913:924   */\n  add\n    /* \"#utility.yul\":909:929   */\n  add\n    /* \"#utility.yul\":906:939   */\n  gt\n    /* \"#utility.yul\":903:956   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":952:953   */\n  0x00\n    /* \"#utility.yul\":949:950   */\n  dup1\n    /* \"#utility.yul\":942:954   */\n  revert\n    /* \"#utility.yul\":903:956   */\ntag_27:\n    /* \"#utility.yul\":974:975   */\n  0x00\n    /* \"#utility.yul\":965:975   */\n  swap4\n  pop\n    /* \"#utility.yul\":984:1113   */\ntag_28:\n    /* \"#utility.yul\":998:1000   */\n  dup3\n    /* \"#utility.yul\":995:996   */\n  dup5\n    /* \"#utility.yul\":992:1001   */\n  lt\n    /* \"#utility.yul\":984:1113   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1086:1096   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1082:1101   */\n  dup7\n  add\n    /* \"#utility.yul\":1076:1102   */\n  mload\n    /* \"#utility.yul\":1055:1069   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1051:1074   */\n  dup8\n  add\n    /* \"#utility.yul\":1044:1103   */\n  mstore\n    /* \"#utility.yul\":1009:1019   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":984:1113   */\n  jump(tag_28)\ntag_30:\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1150:1152   */\n  dup7\n    /* \"#utility.yul\":1145:1147   */\n  dup5\n    /* \"#utility.yul\":1137:1143   */\n  dup4\n    /* \"#utility.yul\":1133:1148   */\n  add\n    /* \"#utility.yul\":1129:1153   */\n  add\n    /* \"#utility.yul\":1122:1157   */\n  mstore\n    /* \"#utility.yul\":1176:1182   */\n  dup1\n    /* \"#utility.yul\":1166:1182   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:1188   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1193:1573   */\ntag_13:\n    /* \"#utility.yul\":1272:1273   */\n  0x01\n    /* \"#utility.yul\":1268:1280   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1315:1327   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1336:1397   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1390:1394   */\n  0x7f\n    /* \"#utility.yul\":1382:1388   */\n  dup3\n    /* \"#utility.yul\":1378:1395   */\n  and\n    /* \"#utility.yul\":1368:1395   */\n  swap2\n  pop\n    /* \"#utility.yul\":1336:1397   */\ntag_32:\n    /* \"#utility.yul\":1443:1445   */\n  0x20\n    /* \"#utility.yul\":1435:1441   */\n  dup3\n    /* \"#utility.yul\":1432:1446   */\n  lt\n    /* \"#utility.yul\":1412:1430   */\n  dup2\n    /* \"#utility.yul\":1409:1447   */\n  sub\n    /* \"#utility.yul\":1406:1567   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1489:1499   */\n  0x4e487b71\n    /* \"#utility.yul\":1484:1487   */\n  0xe0\n    /* \"#utility.yul\":1480:1500   */\n  shl\n    /* \"#utility.yul\":1477:1478   */\n  0x00\n    /* \"#utility.yul\":1470:1501   */\n  mstore\n    /* \"#utility.yul\":1524:1528   */\n  0x22\n    /* \"#utility.yul\":1521:1522   */\n  0x04\n    /* \"#utility.yul\":1514:1529   */\n  mstore\n    /* \"#utility.yul\":1552:1556   */\n  0x24\n    /* \"#utility.yul\":1549:1550   */\n  0x00\n    /* \"#utility.yul\":1542:1557   */\n  revert\n    /* \"#utility.yul\":1406:1567   */\ntag_33:\n  pop\n    /* \"#utility.yul\":1193:1573   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1704:2249   */\ntag_15:\n    /* \"#utility.yul\":1806:1808   */\n  0x1f\n    /* \"#utility.yul\":1801:1804   */\n  dup3\n    /* \"#utility.yul\":1798:1809   */\n  gt\n    /* \"#utility.yul\":1795:2243   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1867:1872   */\n  dup2\n    /* \"#utility.yul\":1863:1865   */\n  dup2\n    /* \"#utility.yul\":1856:1873   */\n  mstore\n    /* \"#utility.yul\":1912:1916   */\n  0x20\n    /* \"#utility.yul\":1908:1910   */\n  dup2\n    /* \"#utility.yul\":1898:1917   */\n  keccak256\n    /* \"#utility.yul\":1982:1984   */\n  0x1f\n    /* \"#utility.yul\":1970:1980   */\n  dup6\n    /* \"#utility.yul\":1966:1985   */\n  add\n    /* \"#utility.yul\":1963:1964   */\n  0x05\n    /* \"#utility.yul\":1959:1986   */\n  shr\n    /* \"#utility.yul\":1953:1957   */\n  dup2\n    /* \"#utility.yul\":1949:1987   */\n  add\n    /* \"#utility.yul\":2018:2022   */\n  0x20\n    /* \"#utility.yul\":2006:2016   */\n  dup7\n    /* \"#utility.yul\":2003:2023   */\n  lt\n    /* \"#utility.yul\":2000:2047   */\n  iszero\n  tag_37\n  jumpi\n  pop\n    /* \"#utility.yul\":2041:2045   */\n  dup1\n    /* \"#utility.yul\":2000:2047   */\ntag_37:\n    /* \"#utility.yul\":2096:2098   */\n  0x1f\n    /* \"#utility.yul\":2091:2094   */\n  dup6\n    /* \"#utility.yul\":2087:2099   */\n  add\n    /* \"#utility.yul\":2084:2085   */\n  0x05\n    /* \"#utility.yul\":2080:2100   */\n  shr\n    /* \"#utility.yul\":2074:2078   */\n  dup3\n    /* \"#utility.yul\":2070:2101   */\n  add\n    /* \"#utility.yul\":2060:2101   */\n  swap2\n  pop\n    /* \"#utility.yul\":2151:2233   */\ntag_38:\n    /* \"#utility.yul\":2169:2171   */\n  dup2\n    /* \"#utility.yul\":2162:2167   */\n  dup2\n    /* \"#utility.yul\":2159:2172   */\n  lt\n    /* \"#utility.yul\":2151:2233   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2214:2231   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2195:2196   */\n  0x01\n    /* \"#utility.yul\":2184:2197   */\n  add\n    /* \"#utility.yul\":2151:2233   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":2155:2158   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1795:2243   */\ntag_36:\n    /* \"#utility.yul\":1704:2249   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2425:3777   */\ntag_11:\n    /* \"#utility.yul\":2545:2555   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2567:2597   */\n  dup2\n  gt\n    /* \"#utility.yul\":2564:2620   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2600:2618   */\n  tag_44\n  tag_12\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":2629:2726   */\n  tag_45\n    /* \"#utility.yul\":2719:2725   */\n  dup2\n    /* \"#utility.yul\":2679:2717   */\n  tag_46\n    /* \"#utility.yul\":2711:2715   */\n  dup5\n    /* \"#utility.yul\":2705:2716   */\n  sload\n    /* \"#utility.yul\":2679:2717   */\n  tag_13\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":2673:2677   */\n  dup5\n    /* \"#utility.yul\":2629:2726   */\n  tag_15\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":2781:2785   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2845:2847   */\n  0x1f\n    /* \"#utility.yul\":2834:2848   */\n  dup4\n  gt\n    /* \"#utility.yul\":2862:2863   */\n  0x01\n    /* \"#utility.yul\":2857:3520   */\n  dup2\n  eq\n  tag_48\n  jumpi\n    /* \"#utility.yul\":3564:3565   */\n  0x00\n    /* \"#utility.yul\":3581:3587   */\n  dup5\n    /* \"#utility.yul\":3578:3667   */\n  iszero\n  tag_49\n  jumpi\n  pop\n    /* \"#utility.yul\":3633:3652   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3627:3653   */\n  mload\n    /* \"#utility.yul\":3578:3667   */\ntag_49:\n  not(0x00)\n    /* \"#utility.yul\":2382:2383   */\n  0x03\n    /* \"#utility.yul\":2378:2389   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2374:2398   */\n  shr\n    /* \"#utility.yul\":2370:2399   */\n  not\n    /* \"#utility.yul\":2360:2400   */\n  and\n    /* \"#utility.yul\":2406:2407   */\n  0x01\n    /* \"#utility.yul\":2402:2413   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2357:2414   */\n  or\n    /* \"#utility.yul\":3680:3761   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2827:3771   */\n  jump(tag_40)\n    /* \"#utility.yul\":2857:3520   */\ntag_48:\n    /* \"#utility.yul\":1651:1652   */\n  0x00\n    /* \"#utility.yul\":1644:1658   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1688:1692   */\n  0x20\n    /* \"#utility.yul\":1675:1693   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2893:2913   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3011:3247   */\ntag_52:\n    /* \"#utility.yul\":3025:3032   */\n  dup3\n    /* \"#utility.yul\":3022:3023   */\n  dup2\n    /* \"#utility.yul\":3019:3033   */\n  lt\n    /* \"#utility.yul\":3011:3247   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3114:3133   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3108:3134   */\n  mload\n    /* \"#utility.yul\":3093:3135   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3206:3233   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3174:3175   */\n  0x01\n    /* \"#utility.yul\":3162:3176   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3041:3060   */\n  dup5\n  add\n    /* \"#utility.yul\":3011:3247   */\n  jump(tag_52)\ntag_54:\n    /* \"#utility.yul\":3015:3018   */\n  pop\n    /* \"#utility.yul\":3275:3281   */\n  dup6\n    /* \"#utility.yul\":3266:3273   */\n  dup3\n    /* \"#utility.yul\":3263:3282   */\n  lt\n    /* \"#utility.yul\":3260:3461   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":3336:3355   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3330:3356   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3419:3420   */\n  0x03\n    /* \"#utility.yul\":3415:3429   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3431:3434   */\n  0xf8\n    /* \"#utility.yul\":3411:3435   */\n  and\n    /* \"#utility.yul\":3407:3444   */\n  shr\n    /* \"#utility.yul\":3403:3445   */\n  not\n    /* \"#utility.yul\":3388:3446   */\n  and\n    /* \"#utility.yul\":3373:3447   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3260:3461   */\ntag_55:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3507:3508   */\n  0x01\n    /* \"#utility.yul\":3491:3505   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3487:3509   */\n  add\n    /* \"#utility.yul\":3474:3510   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2425:3777   */\n  jump\t// out\ntag_17:\n    /* \"contracts/DTicket2_flattened.sol\":22336:38875  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DTicket2_flattened.sol\":22336:38875  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DTicket2_flattened.sol\":23951:24178  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"contracts/DTicket2_flattened.sol\":23951:24178  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DTicket2_flattened.sol\":23002:23307  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"contracts/DTicket2_flattened.sol\":23002:23307  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":23706:23809  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":25808:26234  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/DTicket2_flattened.sol\":24335:24821  function balanceOfBatch(... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":24889:25042  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":25109:25275  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":25231:25258  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"contracts/DTicket2_flattened.sol\":25208:25212  bool */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":25231:25258  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":25231:25249  _operatorApprovals */\n      0x01\n        /* \"contracts/DTicket2_flattened.sol\":25231:25258  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":25231:25268  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":25109:25275  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":25342:25736  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":23951:24178  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"contracts/DTicket2_flattened.sol\":24037:24044  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":24064:24085  account != address(0) */\n      dup4\n      and\n        /* \"contracts/DTicket2_flattened.sol\":24056:24132  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8209:8211   */\n      0x20\n        /* \"contracts/DTicket2_flattened.sol\":24056:24132  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8191:8212   */\n      mstore\n        /* \"#utility.yul\":8248:8250   */\n      0x2a\n        /* \"#utility.yul\":8228:8246   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8221:8251   */\n      mstore\n        /* \"#utility.yul\":8287:8321   */\n      0x455243313135353a2061646472657373207a65726f206973206e6f7420612076\n        /* \"#utility.yul\":8267:8285   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8260:8322   */\n      mstore\n      shl(0xb1, 0x30b634b21037bbb732b9)\n        /* \"#utility.yul\":8338:8356   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8331:8371   */\n      mstore\n        /* \"#utility.yul\":8388:8407   */\n      0x84\n      add\n        /* \"contracts/DTicket2_flattened.sol\":24056:24132  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":24149:24158  _balances */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":24149:24162  _balances[id] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":24149:24171  _balances[id][account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DTicket2_flattened.sol\":23951:24178  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_53:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":23002:23307  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"contracts/DTicket2_flattened.sol\":23104:23108  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTicket2_flattened.sol\":23139:23180  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"contracts/DTicket2_flattened.sol\":23139:23248  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_58\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTicket2_flattened.sol\":23196:23248  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"contracts/DTicket2_flattened.sol\":23139:23248  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"contracts/DTicket2_flattened.sol\":23139:23300  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_53\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTicket2_flattened.sol\":14697:14737  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"contracts/DTicket2_flattened.sol\":23264:23300  super.supportsInterface(interfaceId) */\n      tag_53\n        /* \"contracts/DTicket2_flattened.sol\":14589:14744  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":23706:23809  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"contracts/DTicket2_flattened.sol\":23766:23779  string memory */\n      0x60\n        /* \"contracts/DTicket2_flattened.sol\":23798:23802  _uri */\n      0x02\n        /* \"contracts/DTicket2_flattened.sol\":23791:23802  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":23706:23809  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":25808:26234  function safeBatchTransferFrom(... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":26033:26053  from == _msgSender() */\n      dup6\n      and\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":26033:26053  from == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/DTicket2_flattened.sol\":26033:26093  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_73\n      jumpi\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":26057:26093  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"contracts/DTicket2_flattened.sol\":26074:26078  from */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":25109:25275  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":26057:26093  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"contracts/DTicket2_flattened.sol\":26012:26165  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_77\n      jump\t// in\n    tag_75:\n        /* \"contracts/DTicket2_flattened.sol\":26175:26227  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"contracts/DTicket2_flattened.sol\":26198:26202  from */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":26204:26206  to */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":26208:26211  ids */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":26213:26220  amounts */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":26222:26226  data */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":26175:26197  _safeBatchTransferFrom */\n      tag_79\n        /* \"contracts/DTicket2_flattened.sol\":26175:26227  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/DTicket2_flattened.sol\":25808:26234  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":24335:24821  function balanceOfBatch(... */\n    tag_37:\n        /* \"contracts/DTicket2_flattened.sol\":24468:24484  uint256[] memory */\n      0x60\n        /* \"contracts/DTicket2_flattened.sol\":24523:24526  ids */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":24523:24533  ids.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":24504:24512  accounts */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":24504:24519  accounts.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":24504:24533  accounts.length == ids.length */\n      eq\n        /* \"contracts/DTicket2_flattened.sol\":24496:24579  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9420:9422   */\n      0x20\n        /* \"contracts/DTicket2_flattened.sol\":24496:24579  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9402:9423   */\n      mstore\n        /* \"#utility.yul\":9459:9461   */\n      0x29\n        /* \"#utility.yul\":9439:9457   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9432:9462   */\n      mstore\n        /* \"#utility.yul\":9498:9532   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":9478:9496   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9471:9533   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":9549:9567   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9542:9581   */\n      mstore\n        /* \"#utility.yul\":9598:9617   */\n      0x84\n      add\n        /* \"contracts/DTicket2_flattened.sol\":24496:24579  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":9218:9623   */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":24496:24579  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_81:\n        /* \"contracts/DTicket2_flattened.sol\":24590:24620  uint256[] memory batchBalances */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":24637:24645  accounts */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":24637:24652  accounts.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":24623:24653  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":24590:24653  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":24669:24678  uint256 i */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":24664:24784  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"contracts/DTicket2_flattened.sol\":24688:24696  accounts */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":24688:24703  accounts.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":24684:24685  i */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":24684:24703  i < accounts.length */\n      lt\n        /* \"contracts/DTicket2_flattened.sol\":24664:24784  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"contracts/DTicket2_flattened.sol\":24743:24773  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"contracts/DTicket2_flattened.sol\":24753:24761  accounts */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":24762:24763  i */\n      dup3\n        /* \"contracts/DTicket2_flattened.sol\":24753:24764  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":24766:24769  ids */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":24770:24771  i */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":24766:24772  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":24743:24752  balanceOf */\n      tag_15\n        /* \"contracts/DTicket2_flattened.sol\":24743:24773  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/DTicket2_flattened.sol\":24724:24737  batchBalances */\n      dup3\n        /* \"contracts/DTicket2_flattened.sol\":24738:24739  i */\n      dup3\n        /* \"contracts/DTicket2_flattened.sol\":24724:24740  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/DTicket2_flattened.sol\":24724:24773  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":24705:24708  ++i */\n      tag_99\n      dup2\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":24664:24784  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":24801:24814  batchBalances */\n      swap4\n        /* \"contracts/DTicket2_flattened.sol\":24335:24821  function balanceOfBatch(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":24889:25042  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"contracts/DTicket2_flattened.sol\":24983:25035  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":25016:25024  operator */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":25026:25034  approved */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":24983:25001  _setApprovalForAll */\n      tag_104\n        /* \"contracts/DTicket2_flattened.sol\":24983:25035  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/DTicket2_flattened.sol\":24889:25042  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":25342:25736  function safeTransferFrom(... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":25542:25562  from == _msgSender() */\n      dup6\n      and\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":25542:25562  from == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/DTicket2_flattened.sol\":25542:25602  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_109\n      jumpi\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":25566:25602  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"contracts/DTicket2_flattened.sol\":25583:25587  from */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":25109:25275  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":25566:25602  isApprovedForAll(from, _msgSender()) */\n    tag_109:\n        /* \"contracts/DTicket2_flattened.sol\":25521:25674  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_77\n      jump\t// in\n    tag_111:\n        /* \"contracts/DTicket2_flattened.sol\":25684:25729  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"contracts/DTicket2_flattened.sol\":25702:25706  from */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":25708:25710  to */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":25712:25714  id */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":25716:25722  amount */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":25724:25728  data */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":25684:25701  _safeTransferFrom */\n      tag_114\n        /* \"contracts/DTicket2_flattened.sol\":25684:25729  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":27977:29092  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"contracts/DTicket2_flattened.sol\":28197:28204  amounts */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":28197:28211  amounts.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":28183:28186  ids */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":28183:28193  ids.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":28183:28211  ids.length == amounts.length */\n      eq\n        /* \"contracts/DTicket2_flattened.sol\":28175:28256  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10234:10236   */\n      0x20\n        /* \"contracts/DTicket2_flattened.sol\":28175:28256  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10216:10237   */\n      mstore\n        /* \"#utility.yul\":10273:10275   */\n      0x28\n        /* \"#utility.yul\":10253:10271   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10246:10276   */\n      mstore\n        /* \"#utility.yul\":10312:10346   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":10292:10310   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10285:10347   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":10363:10381   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10356:10394   */\n      mstore\n        /* \"#utility.yul\":10411:10430   */\n      0x84\n      add\n        /* \"contracts/DTicket2_flattened.sol\":28175:28256  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":10032:10436   */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":28175:28256  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":28274:28290  to != address(0) */\n      dup5\n      and\n        /* \"contracts/DTicket2_flattened.sol\":28266:28332  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_123\n      jump\t// in\n    tag_121:\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":28343:28359  address operator */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":28456:28867  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_127:\n        /* \"contracts/DTicket2_flattened.sol\":28480:28483  ids */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":28480:28490  ids.length */\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":28476:28477  i */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":28476:28490  i < ids.length */\n      lt\n        /* \"contracts/DTicket2_flattened.sol\":28456:28867  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"contracts/DTicket2_flattened.sol\":28511:28521  uint256 id */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":28524:28527  ids */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":28528:28529  i */\n      dup3\n        /* \"contracts/DTicket2_flattened.sol\":28524:28530  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_131\n      tag_94\n      jump\t// in\n    tag_131:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":28511:28530  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":28544:28558  uint256 amount */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":28561:28568  amounts */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":28569:28570  i */\n      dup4\n        /* \"contracts/DTicket2_flattened.sol\":28561:28571  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_133\n      jumpi\n      tag_133\n      tag_94\n      jump\t// in\n    tag_133:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":28586:28605  uint256 fromBalance */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":28608:28621  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":28608:28627  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/DTicket2_flattened.sol\":28561:28571  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":28649:28670  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/DTicket2_flattened.sol\":28641:28717  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_136\n      jump\t// in\n    tag_134:\n        /* \"contracts/DTicket2_flattened.sol\":28759:28768  _balances */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":28759:28772  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":28759:28778  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":28781:28801  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"contracts/DTicket2_flattened.sol\":28759:28801  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/DTicket2_flattened.sol\":28829:28846  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":28829:28856  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/DTicket2_flattened.sol\":28781:28801  fromBalance - amount */\n      dup5\n      swap3\n        /* \"contracts/DTicket2_flattened.sol\":28759:28768  _balances */\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":28829:28856  _balances[id][to] += amount */\n      tag_137\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":28781:28801  fromBalance - amount */\n      dup5\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":28829:28856  _balances[id][to] += amount */\n      tag_138\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":28497:28867  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":28492:28495  ++i */\n      dup1\n      tag_139\n      swap1\n      tag_100\n      jump\t// in\n    tag_139:\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":28456:28867  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_127)\n    tag_128:\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":28912:28914  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":28882:28929  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/DTicket2_flattened.sol\":28906:28910  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":28882:28929  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/DTicket2_flattened.sol\":28896:28904  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":28882:28929  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/DTicket2_flattened.sol\":28916:28919  ids */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":28921:28928  amounts */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":28882:28929  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_140\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DTicket2_flattened.sol\":29010:29085  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_144\n        /* \"contracts/DTicket2_flattened.sol\":29046:29054  operator */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":29056:29060  from */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":29062:29064  to */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":29066:29069  ids */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":29071:29078  amounts */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":29080:29084  data */\n      dup8\n        /* \"contracts/DTicket2_flattened.sol\":29010:29045  _doSafeBatchTransferAcceptanceCheck */\n      tag_145\n        /* \"contracts/DTicket2_flattened.sol\":29010:29085  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/DTicket2_flattened.sol\":28165:29092  {... */\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":27977:29092  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":34556:34849  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_104:\n        /* \"contracts/DTicket2_flattened.sol\":34676:34684  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":34667:34684  owner != operator */\n      and\n        /* \"contracts/DTicket2_flattened.sol\":34667:34672  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":34667:34684  owner != operator */\n      and\n      sub\n        /* \"contracts/DTicket2_flattened.sol\":34659:34730  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12060:12062   */\n      0x20\n        /* \"contracts/DTicket2_flattened.sol\":34659:34730  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12042:12063   */\n      mstore\n        /* \"#utility.yul\":12099:12101   */\n      0x29\n        /* \"#utility.yul\":12079:12097   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12072:12102   */\n      mstore\n        /* \"#utility.yul\":12138:12172   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":12118:12136   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12111:12173   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":12189:12207   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12182:12221   */\n      mstore\n        /* \"#utility.yul\":12238:12257   */\n      0x84\n      add\n        /* \"contracts/DTicket2_flattened.sol\":34659:34730  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":11858:12263   */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":34659:34730  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":34740:34765  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":34740:34758  _operatorApprovals */\n      0x01\n        /* \"contracts/DTicket2_flattened.sol\":34740:34765  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":34740:34775  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":34740:34786  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/DTicket2_flattened.sol\":34801:34842  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":34801:34842  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"contracts/DTicket2_flattened.sol\":34801:34842  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DTicket2_flattened.sol\":34556:34849  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":26684:27631  function _safeTransferFrom(... */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":26865:26881  to != address(0) */\n      dup5\n      and\n        /* \"contracts/DTicket2_flattened.sol\":26857:26923  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_123\n      jump\t// in\n    tag_152:\n        /* \"contracts/DTicket2_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTicket2_flattened.sol\":26934:26950  address operator */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":26998:27019  _asSingletonArray(id) */\n      tag_155\n        /* \"contracts/DTicket2_flattened.sol\":27016:27018  id */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":26998:27015  _asSingletonArray */\n      tag_156\n        /* \"contracts/DTicket2_flattened.sol\":26998:27019  _asSingletonArray(id) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/DTicket2_flattened.sol\":26975:27019  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":27029:27053  uint256[] memory amounts */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":27056:27081  _asSingletonArray(amount) */\n      tag_157\n        /* \"contracts/DTicket2_flattened.sol\":27074:27080  amount */\n      dup6\n        /* \"contracts/DTicket2_flattened.sol\":27056:27073  _asSingletonArray */\n      tag_156\n        /* \"contracts/DTicket2_flattened.sol\":27056:27081  _asSingletonArray(amount) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/DTicket2_flattened.sol\":27029:27081  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":27163:27182  uint256 fromBalance */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":27185:27198  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":27185:27204  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DTicket2_flattened.sol\":27222:27243  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"contracts/DTicket2_flattened.sol\":27214:27290  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_136\n      jump\t// in\n    tag_159:\n        /* \"contracts/DTicket2_flattened.sol\":27324:27333  _balances */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":27324:27337  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":27324:27343  _balances[id][from] */\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":27346:27366  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"contracts/DTicket2_flattened.sol\":27324:27366  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/DTicket2_flattened.sol\":27386:27403  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/DTicket2_flattened.sol\":27386:27413  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/DTicket2_flattened.sol\":27346:27366  fromBalance - amount */\n      dup9\n      swap3\n        /* \"contracts/DTicket2_flattened.sol\":27324:27333  _balances */\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":27386:27413  _balances[id][to] += amount */\n      tag_161\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":27346:27366  fromBalance - amount */\n      dup5\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":27386:27413  _balances[id][to] += amount */\n      tag_138\n      jump\t// in\n    tag_161:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":27429:27475  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12442:12467   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":12498:12500   */\n      0x20\n        /* \"#utility.yul\":12483:12501   */\n      dup2\n      add\n        /* \"#utility.yul\":12476:12510   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":27429:27475  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":12415:12433   */\n      add\n        /* \"contracts/DTicket2_flattened.sol\":27429:27475  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DTicket2_flattened.sol\":27556:27624  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_165\n        /* \"contracts/DTicket2_flattened.sol\":27587:27595  operator */\n      dup5\n        /* \"contracts/DTicket2_flattened.sol\":27597:27601  from */\n      dup11\n        /* \"contracts/DTicket2_flattened.sol\":27603:27605  to */\n      dup11\n        /* \"contracts/DTicket2_flattened.sol\":27607:27609  id */\n      dup11\n        /* \"contracts/DTicket2_flattened.sol\":27611:27617  amount */\n      dup11\n        /* \"contracts/DTicket2_flattened.sol\":27619:27623  data */\n      dup11\n        /* \"contracts/DTicket2_flattened.sol\":27556:27586  _doSafeTransferAcceptanceCheck */\n      tag_166\n        /* \"contracts/DTicket2_flattened.sol\":27556:27624  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/DTicket2_flattened.sol\":26847:27631  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":26684:27631  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":37882:38674  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":38114:38127  to.isContract */\n      dup5\n      and\n        /* \"contracts/DTicket2_flattened.sol\":5198:5217  account.code.length */\n      extcodesize\n        /* \"contracts/DTicket2_flattened.sol\":5198:5221  account.code.length > 0 */\n      iszero\n        /* \"contracts/DTicket2_flattened.sol\":38110:38668  if (to.isContract()) {... */\n      tag_144\n      jumpi\n        /* \"contracts/DTicket2_flattened.sol\":38149:38228  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":38149:38192  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":38149:38228  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_173\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":38193:38201  operator */\n      dup10\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":38203:38207  from */\n      dup10\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":38209:38212  ids */\n      dup9\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":38214:38221  amounts */\n      dup9\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":38223:38227  data */\n      dup9\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":38149:38228  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_174\n      jump\t// in\n    tag_173:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_175\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_176\n      swap2\n      dup2\n      add\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      0x01\n    tag_175:\n        /* \"contracts/DTicket2_flattened.sol\":38145:38658  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_178\n      jumpi\n      tag_182\n      tag_183\n      jump\t// in\n    tag_182:\n      dup1\n      0x08c379a0\n      sub\n      tag_181\n      jumpi\n      pop\n      tag_184\n      tag_185\n      jump\t// in\n    tag_184:\n      dup1\n      tag_186\n      jumpi\n      pop\n      jump(tag_180)\n    tag_186:\n        /* \"contracts/DTicket2_flattened.sol\":38534:38540  reason */\n      dup1\n        /* \"contracts/DTicket2_flattened.sol\":38527:38541  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":38145:38658  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_181:\n      pop\n    tag_180:\n        /* \"contracts/DTicket2_flattened.sol\":38581:38643  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14669:14671   */\n      0x20\n        /* \"contracts/DTicket2_flattened.sol\":38581:38643  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14651:14672   */\n      mstore\n        /* \"#utility.yul\":14708:14710   */\n      0x34\n        /* \"#utility.yul\":14688:14706   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14681:14711   */\n      mstore\n        /* \"#utility.yul\":14747:14781   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2d45524331313535\n        /* \"#utility.yul\":14727:14745   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14720:14782   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":14798:14816   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14791:14841   */\n      mstore\n        /* \"#utility.yul\":14858:14877   */\n      0x84\n      add\n        /* \"contracts/DTicket2_flattened.sol\":38581:38643  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":14467:14883   */\n      jump\n        /* \"contracts/DTicket2_flattened.sol\":38145:38658  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_178:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTicket2_flattened.sol\":38307:38367  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"contracts/DTicket2_flattened.sol\":38303:38460  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_191\n      jumpi\n        /* \"contracts/DTicket2_flattened.sol\":38391:38441  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_193\n      jump\t// in\n        /* \"contracts/DTicket2_flattened.sol\":38303:38460  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_191:\n        /* \"contracts/DTicket2_flattened.sol\":38229:38474  returns (... */\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":37882:38674  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":38680:38873  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_156:\n        /* \"contracts/DTicket2_flattened.sol\":38799:38815  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/DTicket2_flattened.sol\":38813:38814  1 */\n      0x01\n        /* \"contracts/DTicket2_flattened.sol\":38799:38815  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":38746:38762  uint256[] memory */\n      0x60\n      swap2\n        /* \"contracts/DTicket2_flattened.sol\":38774:38796  uint256[] memory array */\n      0x00\n      swap2\n        /* \"contracts/DTicket2_flattened.sol\":38799:38815  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":38774:38815  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"contracts/DTicket2_flattened.sol\":38836:38843  element */\n      dup3\n        /* \"contracts/DTicket2_flattened.sol\":38825:38830  array */\n      dup2\n        /* \"contracts/DTicket2_flattened.sol\":38831:38832  0 */\n      0x00\n        /* \"contracts/DTicket2_flattened.sol\":38825:38833  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_199\n      jumpi\n      tag_199\n      tag_94\n      jump\t// in\n    tag_199:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/DTicket2_flattened.sol\":38825:38843  array[0] = element */\n      mstore\n        /* \"contracts/DTicket2_flattened.sol\":38861:38866  array */\n      swap3\n        /* \"contracts/DTicket2_flattened.sol\":38680:38873  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTicket2_flattened.sol\":37151:37876  function _doSafeTransferAcceptanceCheck(... */\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":37358:37371  to.isContract */\n      dup5\n      and\n        /* \"contracts/DTicket2_flattened.sol\":5198:5217  account.code.length */\n      extcodesize\n        /* \"contracts/DTicket2_flattened.sol\":5198:5221  account.code.length > 0 */\n      iszero\n        /* \"contracts/DTicket2_flattened.sol\":37354:37870  if (to.isContract()) {... */\n      tag_144\n      jumpi\n        /* \"contracts/DTicket2_flattened.sol\":37393:37465  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTicket2_flattened.sol\":37393:37431  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":37393:37465  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_203\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":37432:37440  operator */\n      dup10\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":37442:37446  from */\n      dup10\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":37448:37450  id */\n      dup9\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":37452:37458  amount */\n      dup9\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":37460:37464  data */\n      dup9\n      swap1\n        /* \"contracts/DTicket2_flattened.sol\":37393:37465  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_204\n      jump\t// in\n    tag_203:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_205\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_206\n      swap2\n      dup2\n      add\n      swap1\n      tag_177\n      jump\t// in\n    tag_206:\n      0x01\n    tag_205:\n        /* \"contracts/DTicket2_flattened.sol\":37389:37860  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_207\n      jumpi\n      tag_182\n      tag_183\n      jump\t// in\n    tag_207:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTicket2_flattened.sol\":37514:37569  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"contracts/DTicket2_flattened.sol\":37510:37662  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_191\n      jumpi\n        /* \"contracts/DTicket2_flattened.sol\":37593:37643  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_193\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_220:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_231:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_14:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_233:\n        /* \"#utility.yul\":360:389   */\n      tag_234\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_220\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_221:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":687:758   */\n    tag_237:\n        /* \"#utility.yul\":633:764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1014   */\n    tag_20:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_239:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_240\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_221\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1391   */\n    tag_26:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_243:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1819   */\n    tag_222:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_245:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_245)\n    tag_247:\n        /* \"#utility.yul\":1542:1545   */\n      pop\n        /* \"#utility.yul\":1745:1746   */\n      0x00\n        /* \"#utility.yul\":1738:1742   */\n      0x20\n        /* \"#utility.yul\":1729:1735   */\n      dup3\n        /* \"#utility.yul\":1724:1727   */\n      dup7\n        /* \"#utility.yul\":1720:1736   */\n      add\n        /* \"#utility.yul\":1716:1743   */\n      add\n        /* \"#utility.yul\":1709:1747   */\n      mstore\n        /* \"#utility.yul\":1808:1812   */\n      0x20\n        /* \"#utility.yul\":1801:1803   */\n      0x1f\n        /* \"#utility.yul\":1797:1804   */\n      not\n        /* \"#utility.yul\":1792:1794   */\n      0x1f\n        /* \"#utility.yul\":1784:1790   */\n      dup4\n        /* \"#utility.yul\":1780:1795   */\n      add\n        /* \"#utility.yul\":1776:1805   */\n      and\n        /* \"#utility.yul\":1771:1774   */\n      dup6\n        /* \"#utility.yul\":1767:1806   */\n      add\n        /* \"#utility.yul\":1763:1813   */\n      add\n        /* \"#utility.yul\":1756:1813   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1396:1819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1824:2044   */\n    tag_29:\n        /* \"#utility.yul\":1973:1975   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup2\n        /* \"#utility.yul\":1955:1976   */\n      mstore\n        /* \"#utility.yul\":1936:1940   */\n      0x00\n        /* \"#utility.yul\":1993:2038   */\n      tag_240\n        /* \"#utility.yul\":2034:2036   */\n      0x20\n        /* \"#utility.yul\":2023:2032   */\n      dup4\n        /* \"#utility.yul\":2019:2037   */\n      add\n        /* \"#utility.yul\":2011:2017   */\n      dup5\n        /* \"#utility.yul\":1993:2038   */\n      tag_222\n      jump\t// in\n        /* \"#utility.yul\":2049:2176   */\n    tag_86:\n        /* \"#utility.yul\":2110:2120   */\n      0x4e487b71\n        /* \"#utility.yul\":2105:2108   */\n      0xe0\n        /* \"#utility.yul\":2101:2121   */\n      shl\n        /* \"#utility.yul\":2098:2099   */\n      0x00\n        /* \"#utility.yul\":2091:2122   */\n      mstore\n        /* \"#utility.yul\":2141:2145   */\n      0x41\n        /* \"#utility.yul\":2138:2139   */\n      0x04\n        /* \"#utility.yul\":2131:2146   */\n      mstore\n        /* \"#utility.yul\":2165:2169   */\n      0x24\n        /* \"#utility.yul\":2162:2163   */\n      0x00\n        /* \"#utility.yul\":2155:2170   */\n      revert\n        /* \"#utility.yul\":2181:2430   */\n    tag_223:\n        /* \"#utility.yul\":2291:2293   */\n      0x1f\n        /* \"#utility.yul\":2272:2285   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2268:2295   */\n      and\n        /* \"#utility.yul\":2256:2296   */\n      dup2\n      add\n        /* \"#utility.yul\":2326:2344   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2311:2345   */\n      dup2\n      gt\n        /* \"#utility.yul\":2347:2369   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2308:2370   */\n      or\n        /* \"#utility.yul\":2305:2393   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2373:2391   */\n      tag_253\n      tag_86\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":2409:2411   */\n      0x40\n        /* \"#utility.yul\":2402:2424   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2181:2430   */\n      jump\t// out\n        /* \"#utility.yul\":2435:2618   */\n    tag_224:\n        /* \"#utility.yul\":2495:2499   */\n      0x00\n        /* \"#utility.yul\":2528:2546   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2520:2526   */\n      dup3\n        /* \"#utility.yul\":2517:2547   */\n      gt\n        /* \"#utility.yul\":2514:2570   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2550:2568   */\n      tag_256\n      tag_86\n      jump\t// in\n    tag_256:\n      pop\n        /* \"#utility.yul\":2595:2596   */\n      0x05\n        /* \"#utility.yul\":2591:2605   */\n      shl\n        /* \"#utility.yul\":2607:2611   */\n      0x20\n        /* \"#utility.yul\":2587:2612   */\n      add\n      swap1\n        /* \"#utility.yul\":2435:2618   */\n      jump\t// out\n        /* \"#utility.yul\":2623:3347   */\n    tag_225:\n        /* \"#utility.yul\":2677:2682   */\n      0x00\n        /* \"#utility.yul\":2730:2733   */\n      dup3\n        /* \"#utility.yul\":2723:2727   */\n      0x1f\n        /* \"#utility.yul\":2715:2721   */\n      dup4\n        /* \"#utility.yul\":2711:2728   */\n      add\n        /* \"#utility.yul\":2707:2734   */\n      slt\n        /* \"#utility.yul\":2697:2752   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":2748:2749   */\n      0x00\n        /* \"#utility.yul\":2745:2746   */\n      dup1\n        /* \"#utility.yul\":2738:2750   */\n      revert\n        /* \"#utility.yul\":2697:2752   */\n    tag_258:\n        /* \"#utility.yul\":2784:2790   */\n      dup2\n        /* \"#utility.yul\":2771:2791   */\n      calldataload\n        /* \"#utility.yul\":2810:2814   */\n      0x20\n        /* \"#utility.yul\":2833:2876   */\n      tag_259\n        /* \"#utility.yul\":2873:2875   */\n      dup3\n        /* \"#utility.yul\":2833:2876   */\n      tag_224\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2905:2907   */\n      0x40\n        /* \"#utility.yul\":2899:2908   */\n      mload\n        /* \"#utility.yul\":2917:2948   */\n      tag_260\n        /* \"#utility.yul\":2945:2947   */\n      dup3\n        /* \"#utility.yul\":2937:2943   */\n      dup3\n        /* \"#utility.yul\":2917:2948   */\n      tag_223\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2983:3001   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3075:3076   */\n      0x05\n        /* \"#utility.yul\":3071:3081   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3059:3082   */\n      dup6\n      add\n        /* \"#utility.yul\":3055:3087   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3017:3032   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3099:3114   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3096:3131   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":3127:3128   */\n      0x00\n        /* \"#utility.yul\":3124:3125   */\n      dup1\n        /* \"#utility.yul\":3117:3129   */\n      revert\n        /* \"#utility.yul\":3096:3131   */\n    tag_261:\n        /* \"#utility.yul\":3163:3165   */\n      dup3\n        /* \"#utility.yul\":3155:3161   */\n      dup7\n        /* \"#utility.yul\":3151:3166   */\n      add\n        /* \"#utility.yul\":3175:3317   */\n    tag_262:\n        /* \"#utility.yul\":3191:3197   */\n      dup5\n        /* \"#utility.yul\":3186:3189   */\n      dup2\n        /* \"#utility.yul\":3183:3198   */\n      lt\n        /* \"#utility.yul\":3175:3317   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3257:3274   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3245:3275   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3295:3307   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3208:3220   */\n      dup4\n      add\n        /* \"#utility.yul\":3175:3317   */\n      jump(tag_262)\n    tag_264:\n      pop\n        /* \"#utility.yul\":3335:3341   */\n      swap7\n        /* \"#utility.yul\":2623:3347   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3352:3907   */\n    tag_226:\n        /* \"#utility.yul\":3394:3399   */\n      0x00\n        /* \"#utility.yul\":3447:3450   */\n      dup3\n        /* \"#utility.yul\":3440:3444   */\n      0x1f\n        /* \"#utility.yul\":3432:3438   */\n      dup4\n        /* \"#utility.yul\":3428:3445   */\n      add\n        /* \"#utility.yul\":3424:3451   */\n      slt\n        /* \"#utility.yul\":3414:3469   */\n      tag_266\n      jumpi\n        /* \"#utility.yul\":3465:3466   */\n      0x00\n        /* \"#utility.yul\":3462:3463   */\n      dup1\n        /* \"#utility.yul\":3455:3467   */\n      revert\n        /* \"#utility.yul\":3414:3469   */\n    tag_266:\n        /* \"#utility.yul\":3501:3507   */\n      dup2\n        /* \"#utility.yul\":3488:3508   */\n      calldataload\n        /* \"#utility.yul\":3527:3545   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3523:3525   */\n      dup2\n        /* \"#utility.yul\":3520:3546   */\n      gt\n        /* \"#utility.yul\":3517:3569   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":3549:3567   */\n      tag_268\n      tag_86\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3598:3600   */\n      0x40\n        /* \"#utility.yul\":3592:3601   */\n      mload\n        /* \"#utility.yul\":3610:3677   */\n      tag_269\n        /* \"#utility.yul\":3665:3667   */\n      0x1f\n        /* \"#utility.yul\":3646:3659   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3642:3669   */\n      and\n        /* \"#utility.yul\":3671:3675   */\n      0x20\n        /* \"#utility.yul\":3638:3676   */\n      add\n        /* \"#utility.yul\":3592:3601   */\n      dup3\n        /* \"#utility.yul\":3610:3677   */\n      tag_223\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3701:3703   */\n      dup2\n        /* \"#utility.yul\":3693:3699   */\n      dup2\n        /* \"#utility.yul\":3686:3704   */\n      mstore\n        /* \"#utility.yul\":3747:3750   */\n      dup5\n        /* \"#utility.yul\":3740:3744   */\n      0x20\n        /* \"#utility.yul\":3735:3737   */\n      dup4\n        /* \"#utility.yul\":3727:3733   */\n      dup7\n        /* \"#utility.yul\":3723:3738   */\n      add\n        /* \"#utility.yul\":3719:3745   */\n      add\n        /* \"#utility.yul\":3716:3751   */\n      gt\n        /* \"#utility.yul\":3713:3768   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3764:3765   */\n      0x00\n        /* \"#utility.yul\":3761:3762   */\n      dup1\n        /* \"#utility.yul\":3754:3766   */\n      revert\n        /* \"#utility.yul\":3713:3768   */\n    tag_270:\n        /* \"#utility.yul\":3828:3830   */\n      dup2\n        /* \"#utility.yul\":3821:3825   */\n      0x20\n        /* \"#utility.yul\":3813:3819   */\n      dup6\n        /* \"#utility.yul\":3809:3826   */\n      add\n        /* \"#utility.yul\":3802:3806   */\n      0x20\n        /* \"#utility.yul\":3794:3800   */\n      dup4\n        /* \"#utility.yul\":3790:3807   */\n      add\n        /* \"#utility.yul\":3777:3831   */\n      calldatacopy\n        /* \"#utility.yul\":3875:3876   */\n      0x00\n        /* \"#utility.yul\":3851:3866   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3868:3872   */\n      0x20\n        /* \"#utility.yul\":3847:3873   */\n      add\n        /* \"#utility.yul\":3840:3877   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3855:3861   */\n      swap4\n        /* \"#utility.yul\":3352:3907   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3912:4855   */\n    tag_32:\n        /* \"#utility.yul\":4066:4072   */\n      0x00\n        /* \"#utility.yul\":4074:4080   */\n      dup1\n        /* \"#utility.yul\":4082:4088   */\n      0x00\n        /* \"#utility.yul\":4090:4096   */\n      dup1\n        /* \"#utility.yul\":4098:4104   */\n      0x00\n        /* \"#utility.yul\":4151:4154   */\n      0xa0\n        /* \"#utility.yul\":4139:4148   */\n      dup7\n        /* \"#utility.yul\":4130:4137   */\n      dup9\n        /* \"#utility.yul\":4126:4149   */\n      sub\n        /* \"#utility.yul\":4122:4155   */\n      slt\n        /* \"#utility.yul\":4119:4172   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":4168:4169   */\n      0x00\n        /* \"#utility.yul\":4165:4166   */\n      dup1\n        /* \"#utility.yul\":4158:4170   */\n      revert\n        /* \"#utility.yul\":4119:4172   */\n    tag_272:\n        /* \"#utility.yul\":4191:4220   */\n      tag_273\n        /* \"#utility.yul\":4210:4219   */\n      dup7\n        /* \"#utility.yul\":4191:4220   */\n      tag_220\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4181:4220   */\n      swap5\n      pop\n        /* \"#utility.yul\":4239:4277   */\n      tag_274\n        /* \"#utility.yul\":4273:4275   */\n      0x20\n        /* \"#utility.yul\":4262:4271   */\n      dup8\n        /* \"#utility.yul\":4258:4276   */\n      add\n        /* \"#utility.yul\":4239:4277   */\n      tag_220\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4229:4277   */\n      swap4\n      pop\n        /* \"#utility.yul\":4328:4330   */\n      0x40\n        /* \"#utility.yul\":4317:4326   */\n      dup7\n        /* \"#utility.yul\":4313:4331   */\n      add\n        /* \"#utility.yul\":4300:4332   */\n      calldataload\n        /* \"#utility.yul\":4351:4369   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4392:4394   */\n      dup1\n        /* \"#utility.yul\":4384:4390   */\n      dup3\n        /* \"#utility.yul\":4381:4395   */\n      gt\n        /* \"#utility.yul\":4378:4412   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4408:4409   */\n      0x00\n        /* \"#utility.yul\":4405:4406   */\n      dup1\n        /* \"#utility.yul\":4398:4410   */\n      revert\n        /* \"#utility.yul\":4378:4412   */\n    tag_275:\n        /* \"#utility.yul\":4431:4492   */\n      tag_276\n        /* \"#utility.yul\":4484:4491   */\n      dup10\n        /* \"#utility.yul\":4475:4481   */\n      dup4\n        /* \"#utility.yul\":4464:4473   */\n      dup11\n        /* \"#utility.yul\":4460:4482   */\n      add\n        /* \"#utility.yul\":4431:4492   */\n      tag_225\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4421:4492   */\n      swap5\n      pop\n        /* \"#utility.yul\":4545:4547   */\n      0x60\n        /* \"#utility.yul\":4534:4543   */\n      dup9\n        /* \"#utility.yul\":4530:4548   */\n      add\n        /* \"#utility.yul\":4517:4549   */\n      calldataload\n        /* \"#utility.yul\":4501:4549   */\n      swap2\n      pop\n        /* \"#utility.yul\":4574:4576   */\n      dup1\n        /* \"#utility.yul\":4564:4572   */\n      dup3\n        /* \"#utility.yul\":4561:4577   */\n      gt\n        /* \"#utility.yul\":4558:4594   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":4590:4591   */\n      0x00\n        /* \"#utility.yul\":4587:4588   */\n      dup1\n        /* \"#utility.yul\":4580:4592   */\n      revert\n        /* \"#utility.yul\":4558:4594   */\n    tag_277:\n        /* \"#utility.yul\":4613:4676   */\n      tag_278\n        /* \"#utility.yul\":4668:4675   */\n      dup10\n        /* \"#utility.yul\":4657:4665   */\n      dup4\n        /* \"#utility.yul\":4646:4655   */\n      dup11\n        /* \"#utility.yul\":4642:4666   */\n      add\n        /* \"#utility.yul\":4613:4676   */\n      tag_225\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4603:4676   */\n      swap4\n      pop\n        /* \"#utility.yul\":4729:4732   */\n      0x80\n        /* \"#utility.yul\":4718:4727   */\n      dup9\n        /* \"#utility.yul\":4714:4733   */\n      add\n        /* \"#utility.yul\":4701:4734   */\n      calldataload\n        /* \"#utility.yul\":4685:4734   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4761   */\n      dup1\n        /* \"#utility.yul\":4749:4757   */\n      dup3\n        /* \"#utility.yul\":4746:4762   */\n      gt\n        /* \"#utility.yul\":4743:4779   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":4775:4776   */\n      0x00\n        /* \"#utility.yul\":4772:4773   */\n      dup1\n        /* \"#utility.yul\":4765:4777   */\n      revert\n        /* \"#utility.yul\":4743:4779   */\n    tag_279:\n      pop\n        /* \"#utility.yul\":4798:4849   */\n      tag_280\n        /* \"#utility.yul\":4841:4848   */\n      dup9\n        /* \"#utility.yul\":4830:4838   */\n      dup3\n        /* \"#utility.yul\":4819:4828   */\n      dup10\n        /* \"#utility.yul\":4815:4839   */\n      add\n        /* \"#utility.yul\":4798:4849   */\n      tag_226\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4788:4849   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3912:4855   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4860:6068   */\n    tag_36:\n        /* \"#utility.yul\":4978:4984   */\n      0x00\n        /* \"#utility.yul\":4986:4992   */\n      dup1\n        /* \"#utility.yul\":5039:5041   */\n      0x40\n        /* \"#utility.yul\":5027:5036   */\n      dup4\n        /* \"#utility.yul\":5018:5025   */\n      dup6\n        /* \"#utility.yul\":5014:5037   */\n      sub\n        /* \"#utility.yul\":5010:5042   */\n      slt\n        /* \"#utility.yul\":5007:5059   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":5055:5056   */\n      0x00\n        /* \"#utility.yul\":5052:5053   */\n      dup1\n        /* \"#utility.yul\":5045:5057   */\n      revert\n        /* \"#utility.yul\":5007:5059   */\n    tag_282:\n        /* \"#utility.yul\":5095:5104   */\n      dup3\n        /* \"#utility.yul\":5082:5105   */\n      calldataload\n        /* \"#utility.yul\":5124:5142   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5165:5167   */\n      dup1\n        /* \"#utility.yul\":5157:5163   */\n      dup3\n        /* \"#utility.yul\":5154:5168   */\n      gt\n        /* \"#utility.yul\":5151:5185   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":5181:5182   */\n      0x00\n        /* \"#utility.yul\":5178:5179   */\n      dup1\n        /* \"#utility.yul\":5171:5183   */\n      revert\n        /* \"#utility.yul\":5151:5185   */\n    tag_283:\n        /* \"#utility.yul\":5219:5225   */\n      dup2\n        /* \"#utility.yul\":5208:5217   */\n      dup6\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5194:5226   */\n      swap2\n      pop\n        /* \"#utility.yul\":5264:5271   */\n      dup6\n        /* \"#utility.yul\":5257:5261   */\n      0x1f\n        /* \"#utility.yul\":5253:5255   */\n      dup4\n        /* \"#utility.yul\":5249:5262   */\n      add\n        /* \"#utility.yul\":5245:5272   */\n      slt\n        /* \"#utility.yul\":5235:5290   */\n      tag_284\n      jumpi\n        /* \"#utility.yul\":5286:5287   */\n      0x00\n        /* \"#utility.yul\":5283:5284   */\n      dup1\n        /* \"#utility.yul\":5276:5288   */\n      revert\n        /* \"#utility.yul\":5235:5290   */\n    tag_284:\n        /* \"#utility.yul\":5322:5324   */\n      dup2\n        /* \"#utility.yul\":5309:5325   */\n      calldataload\n        /* \"#utility.yul\":5344:5348   */\n      0x20\n        /* \"#utility.yul\":5367:5410   */\n      tag_285\n        /* \"#utility.yul\":5407:5409   */\n      dup3\n        /* \"#utility.yul\":5367:5410   */\n      tag_224\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5439:5441   */\n      0x40\n        /* \"#utility.yul\":5433:5442   */\n      mload\n        /* \"#utility.yul\":5451:5482   */\n      tag_286\n        /* \"#utility.yul\":5479:5481   */\n      dup3\n        /* \"#utility.yul\":5471:5477   */\n      dup3\n        /* \"#utility.yul\":5451:5482   */\n      tag_223\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5517:5535   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5605:5606   */\n      0x05\n        /* \"#utility.yul\":5601:5611   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":5593:5612   */\n      dup6\n      add\n        /* \"#utility.yul\":5589:5617   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":5551:5566   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":5629:5648   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5626:5665   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":5661:5662   */\n      0x00\n        /* \"#utility.yul\":5658:5659   */\n      dup1\n        /* \"#utility.yul\":5651:5663   */\n      revert\n        /* \"#utility.yul\":5626:5665   */\n    tag_287:\n        /* \"#utility.yul\":5685:5696   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5705:5853   */\n    tag_288:\n        /* \"#utility.yul\":5721:5727   */\n      dup4\n        /* \"#utility.yul\":5716:5719   */\n      dup7\n        /* \"#utility.yul\":5713:5728   */\n      lt\n        /* \"#utility.yul\":5705:5853   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":5787:5810   */\n      tag_291\n        /* \"#utility.yul\":5806:5809   */\n      dup7\n        /* \"#utility.yul\":5787:5810   */\n      tag_220\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":5775:5811   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5738:5750   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5831:5843   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5705:5853   */\n      jump(tag_288)\n    tag_290:\n        /* \"#utility.yul\":5872:5878   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5916:5934   */\n      dup7\n      add\n        /* \"#utility.yul\":5903:5935   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5947:5963   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5944:5980   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":5976:5977   */\n      0x00\n        /* \"#utility.yul\":5973:5974   */\n      dup1\n        /* \"#utility.yul\":5966:5978   */\n      revert\n        /* \"#utility.yul\":5944:5980   */\n    tag_292:\n      pop\n        /* \"#utility.yul\":5999:6062   */\n      tag_293\n        /* \"#utility.yul\":6054:6061   */\n      dup6\n        /* \"#utility.yul\":6043:6051   */\n      dup3\n        /* \"#utility.yul\":6032:6041   */\n      dup7\n        /* \"#utility.yul\":6028:6052   */\n      add\n        /* \"#utility.yul\":5999:6062   */\n      tag_225\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":5989:6062   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4860:6068   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6508   */\n    tag_227:\n        /* \"#utility.yul\":6126:6129   */\n      0x00\n        /* \"#utility.yul\":6164:6169   */\n      dup2\n        /* \"#utility.yul\":6158:6170   */\n      mload\n        /* \"#utility.yul\":6191:6197   */\n      dup1\n        /* \"#utility.yul\":6186:6189   */\n      dup5\n        /* \"#utility.yul\":6179:6198   */\n      mstore\n        /* \"#utility.yul\":6217:6221   */\n      0x20\n        /* \"#utility.yul\":6246:6248   */\n      dup1\n        /* \"#utility.yul\":6241:6244   */\n      dup6\n        /* \"#utility.yul\":6237:6249   */\n      add\n        /* \"#utility.yul\":6230:6249   */\n      swap5\n      pop\n        /* \"#utility.yul\":6283:6285   */\n      dup1\n        /* \"#utility.yul\":6276:6281   */\n      dup5\n        /* \"#utility.yul\":6272:6286   */\n      add\n        /* \"#utility.yul\":6304:6305   */\n      0x00\n        /* \"#utility.yul\":6314:6483   */\n    tag_295:\n        /* \"#utility.yul\":6328:6334   */\n      dup4\n        /* \"#utility.yul\":6325:6326   */\n      dup2\n        /* \"#utility.yul\":6322:6335   */\n      lt\n        /* \"#utility.yul\":6314:6483   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":6389:6402   */\n      dup2\n      mload\n        /* \"#utility.yul\":6377:6403   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6423:6435   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6458:6473   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6350:6351   */\n      0x01\n        /* \"#utility.yul\":6343:6352   */\n      add\n        /* \"#utility.yul\":6314:6483   */\n      jump(tag_295)\n    tag_297:\n      pop\n        /* \"#utility.yul\":6499:6502   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6073:6508   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6513:6774   */\n    tag_39:\n        /* \"#utility.yul\":6692:6694   */\n      0x20\n        /* \"#utility.yul\":6681:6690   */\n      dup2\n        /* \"#utility.yul\":6674:6695   */\n      mstore\n        /* \"#utility.yul\":6655:6659   */\n      0x00\n        /* \"#utility.yul\":6712:6768   */\n      tag_240\n        /* \"#utility.yul\":6764:6766   */\n      0x20\n        /* \"#utility.yul\":6753:6762   */\n      dup4\n        /* \"#utility.yul\":6749:6767   */\n      add\n        /* \"#utility.yul\":6741:6747   */\n      dup5\n        /* \"#utility.yul\":6712:6768   */\n      tag_227\n      jump\t// in\n        /* \"#utility.yul\":6779:7126   */\n    tag_42:\n        /* \"#utility.yul\":6844:6850   */\n      0x00\n        /* \"#utility.yul\":6852:6858   */\n      dup1\n        /* \"#utility.yul\":6905:6907   */\n      0x40\n        /* \"#utility.yul\":6893:6902   */\n      dup4\n        /* \"#utility.yul\":6884:6891   */\n      dup6\n        /* \"#utility.yul\":6880:6903   */\n      sub\n        /* \"#utility.yul\":6876:6908   */\n      slt\n        /* \"#utility.yul\":6873:6925   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":6921:6922   */\n      0x00\n        /* \"#utility.yul\":6918:6919   */\n      dup1\n        /* \"#utility.yul\":6911:6923   */\n      revert\n        /* \"#utility.yul\":6873:6925   */\n    tag_301:\n        /* \"#utility.yul\":6944:6973   */\n      tag_302\n        /* \"#utility.yul\":6963:6972   */\n      dup4\n        /* \"#utility.yul\":6944:6973   */\n      tag_220\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":6934:6973   */\n      swap2\n      pop\n        /* \"#utility.yul\":7023:7025   */\n      0x20\n        /* \"#utility.yul\":7012:7021   */\n      dup4\n        /* \"#utility.yul\":7008:7026   */\n      add\n        /* \"#utility.yul\":6995:7027   */\n      calldataload\n        /* \"#utility.yul\":7070:7075   */\n      dup1\n        /* \"#utility.yul\":7063:7076   */\n      iszero\n        /* \"#utility.yul\":7056:7077   */\n      iszero\n        /* \"#utility.yul\":7049:7054   */\n      dup2\n        /* \"#utility.yul\":7046:7078   */\n      eq\n        /* \"#utility.yul\":7036:7096   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":7092:7093   */\n      0x00\n        /* \"#utility.yul\":7089:7090   */\n      dup1\n        /* \"#utility.yul\":7082:7094   */\n      revert\n        /* \"#utility.yul\":7036:7096   */\n    tag_303:\n        /* \"#utility.yul\":7115:7120   */\n      dup1\n        /* \"#utility.yul\":7105:7120   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6779:7126   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7131:7391   */\n    tag_46:\n        /* \"#utility.yul\":7199:7205   */\n      0x00\n        /* \"#utility.yul\":7207:7213   */\n      dup1\n        /* \"#utility.yul\":7260:7262   */\n      0x40\n        /* \"#utility.yul\":7248:7257   */\n      dup4\n        /* \"#utility.yul\":7239:7246   */\n      dup6\n        /* \"#utility.yul\":7235:7258   */\n      sub\n        /* \"#utility.yul\":7231:7263   */\n      slt\n        /* \"#utility.yul\":7228:7280   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":7276:7277   */\n      0x00\n        /* \"#utility.yul\":7273:7274   */\n      dup1\n        /* \"#utility.yul\":7266:7278   */\n      revert\n        /* \"#utility.yul\":7228:7280   */\n    tag_305:\n        /* \"#utility.yul\":7299:7328   */\n      tag_306\n        /* \"#utility.yul\":7318:7327   */\n      dup4\n        /* \"#utility.yul\":7299:7328   */\n      tag_220\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":7289:7328   */\n      swap2\n      pop\n        /* \"#utility.yul\":7347:7385   */\n      tag_307\n        /* \"#utility.yul\":7381:7383   */\n      0x20\n        /* \"#utility.yul\":7370:7379   */\n      dup5\n        /* \"#utility.yul\":7366:7384   */\n      add\n        /* \"#utility.yul\":7347:7385   */\n      tag_220\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":7337:7385   */\n      swap1\n      pop\n        /* \"#utility.yul\":7131:7391   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7396:8002   */\n    tag_51:\n        /* \"#utility.yul\":7500:7506   */\n      0x00\n        /* \"#utility.yul\":7508:7514   */\n      dup1\n        /* \"#utility.yul\":7516:7522   */\n      0x00\n        /* \"#utility.yul\":7524:7530   */\n      dup1\n        /* \"#utility.yul\":7532:7538   */\n      0x00\n        /* \"#utility.yul\":7585:7588   */\n      0xa0\n        /* \"#utility.yul\":7573:7582   */\n      dup7\n        /* \"#utility.yul\":7564:7571   */\n      dup9\n        /* \"#utility.yul\":7560:7583   */\n      sub\n        /* \"#utility.yul\":7556:7589   */\n      slt\n        /* \"#utility.yul\":7553:7606   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":7602:7603   */\n      0x00\n        /* \"#utility.yul\":7599:7600   */\n      dup1\n        /* \"#utility.yul\":7592:7604   */\n      revert\n        /* \"#utility.yul\":7553:7606   */\n    tag_309:\n        /* \"#utility.yul\":7625:7654   */\n      tag_310\n        /* \"#utility.yul\":7644:7653   */\n      dup7\n        /* \"#utility.yul\":7625:7654   */\n      tag_220\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":7615:7654   */\n      swap5\n      pop\n        /* \"#utility.yul\":7673:7711   */\n      tag_311\n        /* \"#utility.yul\":7707:7709   */\n      0x20\n        /* \"#utility.yul\":7696:7705   */\n      dup8\n        /* \"#utility.yul\":7692:7710   */\n      add\n        /* \"#utility.yul\":7673:7711   */\n      tag_220\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":7663:7711   */\n      swap4\n      pop\n        /* \"#utility.yul\":7758:7760   */\n      0x40\n        /* \"#utility.yul\":7747:7756   */\n      dup7\n        /* \"#utility.yul\":7743:7761   */\n      add\n        /* \"#utility.yul\":7730:7762   */\n      calldataload\n        /* \"#utility.yul\":7720:7762   */\n      swap3\n      pop\n        /* \"#utility.yul\":7809:7811   */\n      0x60\n        /* \"#utility.yul\":7798:7807   */\n      dup7\n        /* \"#utility.yul\":7794:7812   */\n      add\n        /* \"#utility.yul\":7781:7813   */\n      calldataload\n        /* \"#utility.yul\":7771:7813   */\n      swap2\n      pop\n        /* \"#utility.yul\":7864:7867   */\n      0x80\n        /* \"#utility.yul\":7853:7862   */\n      dup7\n        /* \"#utility.yul\":7849:7868   */\n      add\n        /* \"#utility.yul\":7836:7869   */\n      calldataload\n        /* \"#utility.yul\":7892:7910   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7884:7890   */\n      dup2\n        /* \"#utility.yul\":7881:7911   */\n      gt\n        /* \"#utility.yul\":7878:7928   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":7924:7925   */\n      0x00\n        /* \"#utility.yul\":7921:7922   */\n      dup1\n        /* \"#utility.yul\":7914:7926   */\n      revert\n        /* \"#utility.yul\":7878:7928   */\n    tag_312:\n        /* \"#utility.yul\":7947:7996   */\n      tag_280\n        /* \"#utility.yul\":7988:7995   */\n      dup9\n        /* \"#utility.yul\":7979:7985   */\n      dup3\n        /* \"#utility.yul\":7968:7977   */\n      dup10\n        /* \"#utility.yul\":7964:7986   */\n      add\n        /* \"#utility.yul\":7947:7996   */\n      tag_226\n      jump\t// in\n        /* \"#utility.yul\":8418:8798   */\n    tag_64:\n        /* \"#utility.yul\":8497:8498   */\n      0x01\n        /* \"#utility.yul\":8493:8505   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8540:8552   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8561:8622   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":8615:8619   */\n      0x7f\n        /* \"#utility.yul\":8607:8613   */\n      dup3\n        /* \"#utility.yul\":8603:8620   */\n      and\n        /* \"#utility.yul\":8593:8620   */\n      swap2\n      pop\n        /* \"#utility.yul\":8561:8622   */\n    tag_316:\n        /* \"#utility.yul\":8668:8670   */\n      0x20\n        /* \"#utility.yul\":8660:8666   */\n      dup3\n        /* \"#utility.yul\":8657:8671   */\n      lt\n        /* \"#utility.yul\":8637:8655   */\n      dup2\n        /* \"#utility.yul\":8634:8672   */\n      sub\n        /* \"#utility.yul\":8631:8792   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":8714:8724   */\n      0x4e487b71\n        /* \"#utility.yul\":8709:8712   */\n      0xe0\n        /* \"#utility.yul\":8705:8725   */\n      shl\n        /* \"#utility.yul\":8702:8703   */\n      0x00\n        /* \"#utility.yul\":8695:8726   */\n      mstore\n        /* \"#utility.yul\":8749:8753   */\n      0x22\n        /* \"#utility.yul\":8746:8747   */\n      0x04\n        /* \"#utility.yul\":8739:8754   */\n      mstore\n        /* \"#utility.yul\":8777:8781   */\n      0x24\n        /* \"#utility.yul\":8774:8775   */\n      0x00\n        /* \"#utility.yul\":8767:8782   */\n      revert\n        /* \"#utility.yul\":8631:8792   */\n    tag_317:\n      pop\n        /* \"#utility.yul\":8418:8798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8803:9213   */\n    tag_77:\n        /* \"#utility.yul\":9005:9007   */\n      0x20\n        /* \"#utility.yul\":8987:9008   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9044:9046   */\n      0x2e\n        /* \"#utility.yul\":9024:9042   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9017:9047   */\n      mstore\n        /* \"#utility.yul\":9083:9117   */\n      0x455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e\n        /* \"#utility.yul\":9078:9080   */\n      0x40\n        /* \"#utility.yul\":9063:9081   */\n      dup3\n      add\n        /* \"#utility.yul\":9056:9118   */\n      mstore\n      shl(0x92, 0x195c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":9149:9151   */\n      0x60\n        /* \"#utility.yul\":9134:9152   */\n      dup3\n      add\n        /* \"#utility.yul\":9127:9171   */\n      mstore\n        /* \"#utility.yul\":9203:9206   */\n      0x80\n        /* \"#utility.yul\":9188:9207   */\n      add\n      swap1\n        /* \"#utility.yul\":8803:9213   */\n      jump\t// out\n        /* \"#utility.yul\":9628:9755   */\n    tag_94:\n        /* \"#utility.yul\":9689:9699   */\n      0x4e487b71\n        /* \"#utility.yul\":9684:9687   */\n      0xe0\n        /* \"#utility.yul\":9680:9700   */\n      shl\n        /* \"#utility.yul\":9677:9678   */\n      0x00\n        /* \"#utility.yul\":9670:9701   */\n      mstore\n        /* \"#utility.yul\":9720:9724   */\n      0x32\n        /* \"#utility.yul\":9717:9718   */\n      0x04\n        /* \"#utility.yul\":9710:9725   */\n      mstore\n        /* \"#utility.yul\":9744:9748   */\n      0x24\n        /* \"#utility.yul\":9741:9742   */\n      0x00\n        /* \"#utility.yul\":9734:9749   */\n      revert\n        /* \"#utility.yul\":9760:9887   */\n    tag_228:\n        /* \"#utility.yul\":9821:9831   */\n      0x4e487b71\n        /* \"#utility.yul\":9816:9819   */\n      0xe0\n        /* \"#utility.yul\":9812:9832   */\n      shl\n        /* \"#utility.yul\":9809:9810   */\n      0x00\n        /* \"#utility.yul\":9802:9833   */\n      mstore\n        /* \"#utility.yul\":9852:9856   */\n      0x11\n        /* \"#utility.yul\":9849:9850   */\n      0x04\n        /* \"#utility.yul\":9842:9857   */\n      mstore\n        /* \"#utility.yul\":9876:9880   */\n      0x24\n        /* \"#utility.yul\":9873:9874   */\n      0x00\n        /* \"#utility.yul\":9866:9881   */\n      revert\n        /* \"#utility.yul\":9892:10027   */\n    tag_100:\n        /* \"#utility.yul\":9931:9934   */\n      0x00\n        /* \"#utility.yul\":9952:9969   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":9949:9992   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":9972:9990   */\n      tag_324\n      tag_228\n      jump\t// in\n    tag_324:\n      pop\n        /* \"#utility.yul\":10019:10020   */\n      0x01\n        /* \"#utility.yul\":10008:10021   */\n      add\n      swap1\n        /* \"#utility.yul\":9892:10027   */\n      jump\t// out\n        /* \"#utility.yul\":10441:10842   */\n    tag_123:\n        /* \"#utility.yul\":10643:10645   */\n      0x20\n        /* \"#utility.yul\":10625:10646   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10682:10684   */\n      0x25\n        /* \"#utility.yul\":10662:10680   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10655:10685   */\n      mstore\n        /* \"#utility.yul\":10721:10755   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":10716:10718   */\n      0x40\n        /* \"#utility.yul\":10701:10719   */\n      dup3\n      add\n        /* \"#utility.yul\":10694:10756   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":10787:10789   */\n      0x60\n        /* \"#utility.yul\":10772:10790   */\n      dup3\n      add\n        /* \"#utility.yul\":10765:10800   */\n      mstore\n        /* \"#utility.yul\":10832:10835   */\n      0x80\n        /* \"#utility.yul\":10817:10836   */\n      add\n      swap1\n        /* \"#utility.yul\":10441:10842   */\n      jump\t// out\n        /* \"#utility.yul\":10847:11253   */\n    tag_136:\n        /* \"#utility.yul\":11049:11051   */\n      0x20\n        /* \"#utility.yul\":11031:11052   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11088:11090   */\n      0x2a\n        /* \"#utility.yul\":11068:11086   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11061:11091   */\n      mstore\n        /* \"#utility.yul\":11127:11161   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":11122:11124   */\n      0x40\n        /* \"#utility.yul\":11107:11125   */\n      dup3\n      add\n        /* \"#utility.yul\":11100:11162   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":11193:11195   */\n      0x60\n        /* \"#utility.yul\":11178:11196   */\n      dup3\n      add\n        /* \"#utility.yul\":11171:11211   */\n      mstore\n        /* \"#utility.yul\":11243:11246   */\n      0x80\n        /* \"#utility.yul\":11228:11247   */\n      add\n      swap1\n        /* \"#utility.yul\":10847:11253   */\n      jump\t// out\n        /* \"#utility.yul\":11258:11383   */\n    tag_138:\n        /* \"#utility.yul\":11323:11332   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":11344:11354   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":11341:11377   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":11357:11375   */\n      tag_53\n      tag_228\n      jump\t// in\n        /* \"#utility.yul\":11388:11853   */\n    tag_141:\n        /* \"#utility.yul\":11645:11647   */\n      0x40\n        /* \"#utility.yul\":11634:11643   */\n      dup2\n        /* \"#utility.yul\":11627:11648   */\n      mstore\n        /* \"#utility.yul\":11608:11612   */\n      0x00\n        /* \"#utility.yul\":11671:11727   */\n      tag_332\n        /* \"#utility.yul\":11723:11725   */\n      0x40\n        /* \"#utility.yul\":11712:11721   */\n      dup4\n        /* \"#utility.yul\":11708:11726   */\n      add\n        /* \"#utility.yul\":11700:11706   */\n      dup6\n        /* \"#utility.yul\":11671:11727   */\n      tag_227\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":11775:11784   */\n      dup3\n        /* \"#utility.yul\":11767:11773   */\n      dup2\n        /* \"#utility.yul\":11763:11785   */\n      sub\n        /* \"#utility.yul\":11758:11760   */\n      0x20\n        /* \"#utility.yul\":11747:11756   */\n      dup5\n        /* \"#utility.yul\":11743:11761   */\n      add\n        /* \"#utility.yul\":11736:11786   */\n      mstore\n        /* \"#utility.yul\":11803:11847   */\n      tag_333\n        /* \"#utility.yul\":11840:11846   */\n      dup2\n        /* \"#utility.yul\":11832:11838   */\n      dup6\n        /* \"#utility.yul\":11803:11847   */\n      tag_227\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":11795:11847   */\n      swap6\n        /* \"#utility.yul\":11388:11853   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12521:13348   */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12918:12933   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":12900:12934   */\n      dup3\n      mstore\n        /* \"#utility.yul\":12970:12985   */\n      dup6\n      and\n        /* \"#utility.yul\":12965:12967   */\n      0x20\n        /* \"#utility.yul\":12950:12968   */\n      dup3\n      add\n        /* \"#utility.yul\":12943:12986   */\n      mstore\n        /* \"#utility.yul\":12880:12883   */\n      0xa0\n        /* \"#utility.yul\":13017:13019   */\n      0x40\n        /* \"#utility.yul\":13002:13020   */\n      dup3\n      add\n        /* \"#utility.yul\":12995:13026   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12843:12847   */\n      0x00\n      swap1\n        /* \"#utility.yul\":13049:13106   */\n      tag_337\n      swap1\n        /* \"#utility.yul\":13086:13105   */\n      dup4\n      add\n        /* \"#utility.yul\":13078:13084   */\n      dup7\n        /* \"#utility.yul\":13049:13106   */\n      tag_227\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":13154:13163   */\n      dup3\n        /* \"#utility.yul\":13146:13152   */\n      dup2\n        /* \"#utility.yul\":13142:13164   */\n      sub\n        /* \"#utility.yul\":13137:13139   */\n      0x60\n        /* \"#utility.yul\":13126:13135   */\n      dup5\n        /* \"#utility.yul\":13122:13140   */\n      add\n        /* \"#utility.yul\":13115:13165   */\n      mstore\n        /* \"#utility.yul\":13188:13232   */\n      tag_338\n        /* \"#utility.yul\":13225:13231   */\n      dup2\n        /* \"#utility.yul\":13217:13223   */\n      dup7\n        /* \"#utility.yul\":13188:13232   */\n      tag_227\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":13174:13232   */\n      swap1\n      pop\n        /* \"#utility.yul\":13281:13290   */\n      dup3\n        /* \"#utility.yul\":13273:13279   */\n      dup2\n        /* \"#utility.yul\":13269:13291   */\n      sub\n        /* \"#utility.yul\":13263:13266   */\n      0x80\n        /* \"#utility.yul\":13252:13261   */\n      dup5\n        /* \"#utility.yul\":13248:13267   */\n      add\n        /* \"#utility.yul\":13241:13292   */\n      mstore\n        /* \"#utility.yul\":13309:13342   */\n      tag_339\n        /* \"#utility.yul\":13335:13341   */\n      dup2\n        /* \"#utility.yul\":13327:13333   */\n      dup6\n        /* \"#utility.yul\":13309:13342   */\n      tag_222\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":13301:13342   */\n      swap9\n        /* \"#utility.yul\":12521:13348   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13353:13602   */\n    tag_177:\n        /* \"#utility.yul\":13422:13428   */\n      0x00\n        /* \"#utility.yul\":13475:13477   */\n      0x20\n        /* \"#utility.yul\":13463:13472   */\n      dup3\n        /* \"#utility.yul\":13454:13461   */\n      dup5\n        /* \"#utility.yul\":13450:13473   */\n      sub\n        /* \"#utility.yul\":13446:13478   */\n      slt\n        /* \"#utility.yul\":13443:13495   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":13491:13492   */\n      0x00\n        /* \"#utility.yul\":13488:13489   */\n      dup1\n        /* \"#utility.yul\":13481:13493   */\n      revert\n        /* \"#utility.yul\":13443:13495   */\n    tag_341:\n        /* \"#utility.yul\":13523:13532   */\n      dup2\n        /* \"#utility.yul\":13517:13533   */\n      mload\n        /* \"#utility.yul\":13542:13572   */\n      tag_240\n        /* \"#utility.yul\":13566:13571   */\n      dup2\n        /* \"#utility.yul\":13542:13572   */\n      tag_221\n      jump\t// in\n        /* \"#utility.yul\":13607:13786   */\n    tag_183:\n        /* \"#utility.yul\":13642:13645   */\n      0x00\n        /* \"#utility.yul\":13684:13685   */\n      0x03\n        /* \"#utility.yul\":13666:13682   */\n      returndatasize\n        /* \"#utility.yul\":13663:13686   */\n      gt\n        /* \"#utility.yul\":13660:13780   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":13730:13731   */\n      0x04\n        /* \"#utility.yul\":13727:13728   */\n      0x00\n        /* \"#utility.yul\":13724:13725   */\n      dup1\n        /* \"#utility.yul\":13709:13732   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":13767:13768   */\n      0x00\n        /* \"#utility.yul\":13761:13769   */\n      mload\n        /* \"#utility.yul\":13756:13759   */\n      0xe0\n        /* \"#utility.yul\":13752:13770   */\n      shr\n        /* \"#utility.yul\":13660:13780   */\n    tag_344:\n        /* \"#utility.yul\":13607:13786   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":13791:14462   */\n    tag_185:\n        /* \"#utility.yul\":13830:13833   */\n      0x00\n        /* \"#utility.yul\":13872:13876   */\n      0x44\n        /* \"#utility.yul\":13854:13870   */\n      returndatasize\n        /* \"#utility.yul\":13851:13877   */\n      lt\n        /* \"#utility.yul\":13848:13887   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":13791:14462   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":13848:13887   */\n    tag_346:\n        /* \"#utility.yul\":13914:13916   */\n      0x40\n        /* \"#utility.yul\":13908:13917   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":13979:13995   */\n      returndatasize\n        /* \"#utility.yul\":13975:14000   */\n      dup2\n      add\n        /* \"#utility.yul\":13972:13973   */\n      0x04\n        /* \"#utility.yul\":13908:13917   */\n      dup4\n        /* \"#utility.yul\":13951:14001   */\n      returndatacopy\n        /* \"#utility.yul\":14030:14034   */\n      dup2\n        /* \"#utility.yul\":14024:14035   */\n      mload\n        /* \"#utility.yul\":14054:14070   */\n      returndatasize\n        /* \"#utility.yul\":14089:14107   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14160:14162   */\n      dup2\n        /* \"#utility.yul\":14153:14157   */\n      0x24\n        /* \"#utility.yul\":14145:14151   */\n      dup5\n        /* \"#utility.yul\":14141:14158   */\n      add\n        /* \"#utility.yul\":14138:14163   */\n      gt\n        /* \"#utility.yul\":14133:14135   */\n      dup2\n        /* \"#utility.yul\":14125:14131   */\n      dup5\n        /* \"#utility.yul\":14122:14136   */\n      gt\n        /* \"#utility.yul\":14119:14164   */\n      or\n        /* \"#utility.yul\":14116:14174   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":14167:14172   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13791:14462   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14116:14174   */\n    tag_347:\n        /* \"#utility.yul\":14204:14210   */\n      dup3\n        /* \"#utility.yul\":14198:14202   */\n      dup6\n        /* \"#utility.yul\":14194:14211   */\n      add\n        /* \"#utility.yul\":14183:14211   */\n      swap2\n      pop\n        /* \"#utility.yul\":14240:14243   */\n      dup2\n        /* \"#utility.yul\":14234:14244   */\n      mload\n        /* \"#utility.yul\":14267:14269   */\n      dup2\n        /* \"#utility.yul\":14259:14265   */\n      dup2\n        /* \"#utility.yul\":14256:14270   */\n      gt\n        /* \"#utility.yul\":14253:14280   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":14273:14278   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13791:14462   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14253:14280   */\n    tag_348:\n        /* \"#utility.yul\":14357:14359   */\n      dup5\n        /* \"#utility.yul\":14338:14354   */\n      returndatasize\n        /* \"#utility.yul\":14332:14336   */\n      dup8\n        /* \"#utility.yul\":14328:14355   */\n      add\n        /* \"#utility.yul\":14324:14360   */\n      add\n        /* \"#utility.yul\":14317:14321   */\n      0x20\n        /* \"#utility.yul\":14308:14314   */\n      dup3\n        /* \"#utility.yul\":14303:14306   */\n      dup6\n        /* \"#utility.yul\":14299:14315   */\n      add\n        /* \"#utility.yul\":14295:14322   */\n      add\n        /* \"#utility.yul\":14292:14361   */\n      gt\n        /* \"#utility.yul\":14289:14371   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":14364:14369   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13791:14462   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14289:14371   */\n    tag_349:\n        /* \"#utility.yul\":14380:14437   */\n      tag_350\n        /* \"#utility.yul\":14431:14435   */\n      0x20\n        /* \"#utility.yul\":14422:14428   */\n      dup3\n        /* \"#utility.yul\":14414:14420   */\n      dup7\n        /* \"#utility.yul\":14410:14429   */\n      add\n        /* \"#utility.yul\":14406:14436   */\n      add\n        /* \"#utility.yul\":14400:14404   */\n      dup8\n        /* \"#utility.yul\":14380:14437   */\n      tag_223\n      jump\t// in\n    tag_350:\n      pop\n        /* \"#utility.yul\":14453:14456   */\n      swap1\n      swap6\n        /* \"#utility.yul\":13791:14462   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14888:15292   */\n    tag_193:\n        /* \"#utility.yul\":15090:15092   */\n      0x20\n        /* \"#utility.yul\":15072:15093   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15129:15131   */\n      0x28\n        /* \"#utility.yul\":15109:15127   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15102:15132   */\n      mstore\n        /* \"#utility.yul\":15168:15202   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":15163:15165   */\n      0x40\n        /* \"#utility.yul\":15148:15166   */\n      dup3\n      add\n        /* \"#utility.yul\":15141:15203   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":15234:15236   */\n      0x60\n        /* \"#utility.yul\":15219:15237   */\n      dup3\n      add\n        /* \"#utility.yul\":15212:15250   */\n      mstore\n        /* \"#utility.yul\":15282:15285   */\n      0x80\n        /* \"#utility.yul\":15267:15286   */\n      add\n      swap1\n        /* \"#utility.yul\":14888:15292   */\n      jump\t// out\n        /* \"#utility.yul\":15297:15858   */\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15594:15609   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":15576:15610   */\n      dup3\n      mstore\n        /* \"#utility.yul\":15646:15661   */\n      dup6\n      and\n        /* \"#utility.yul\":15641:15643   */\n      0x20\n        /* \"#utility.yul\":15626:15644   */\n      dup3\n      add\n        /* \"#utility.yul\":15619:15662   */\n      mstore\n        /* \"#utility.yul\":15693:15695   */\n      0x40\n        /* \"#utility.yul\":15678:15696   */\n      dup2\n      add\n        /* \"#utility.yul\":15671:15705   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":15736:15738   */\n      0x60\n        /* \"#utility.yul\":15721:15739   */\n      dup2\n      add\n        /* \"#utility.yul\":15714:15748   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":15556:15559   */\n      0xa0\n        /* \"#utility.yul\":15779:15782   */\n      0x80\n        /* \"#utility.yul\":15764:15783   */\n      dup3\n      add\n        /* \"#utility.yul\":15757:15789   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15519:15523   */\n      0x00\n      swap1\n        /* \"#utility.yul\":15806:15852   */\n      tag_354\n      swap1\n        /* \"#utility.yul\":15832:15851   */\n      dup4\n      add\n        /* \"#utility.yul\":15824:15830   */\n      dup5\n        /* \"#utility.yul\":15806:15852   */\n      tag_222\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":15798:15852   */\n      swap8\n        /* \"#utility.yul\":15297:15858   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220be66432af40924a0b1d6e99a8eaa9c59b8d808d6c07536332543657ba02caf9b64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_704": {
									"entryPoint": null,
									"id": 704,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_1215": {
									"entryPoint": 69,
									"id": 1215,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 87,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3779:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "237:951:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "247:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "257:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "251:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "304:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "316:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "306:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "306:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "306:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "279:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "288:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "275:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "300:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:32:1"
															},
															"nodeType": "YulIf",
															"src": "268:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "329:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "343:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "333:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "368:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "386:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "390:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "394:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "378:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "372:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "423:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "432:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "435:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "425:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "425:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "425:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "411:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "419:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "408:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:14:1"
															},
															"nodeType": "YulIf",
															"src": "405:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "448:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "473:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "452:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "530:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "507:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "511:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "503:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "503:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "518:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:35:1"
															},
															"nodeType": "YulIf",
															"src": "489:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "553:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "569:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "563:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:9:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "557:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "595:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "597:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "597:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "597:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "587:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "591:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "584:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:10:1"
															},
															"nodeType": "YulIf",
															"src": "581:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "626:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "640:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "636:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:7:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "630:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "652:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "672:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "666:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "656:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "684:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "706:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "730:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "734:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "726:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "726:13:1"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "741:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "722:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "722:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "746:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "718:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "718:31:1"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "751:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "688:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "814:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "816:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "773:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "785:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "770:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "793:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "805:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "790:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "767:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:46:1"
															},
															"nodeType": "YulIf",
															"src": "764:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "852:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "856:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "845:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "891:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "876:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "940:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "949:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "952:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "942:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "942:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "942:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "917:2:1"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "921:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "913:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "913:11:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "926:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "909:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "909:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "931:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "906:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:33:1"
															},
															"nodeType": "YulIf",
															"src": "903:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "965:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "974:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "969:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1030:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1059:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1067:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1055:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1055:14:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1071:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1051:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1051:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1090:2:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1094:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1086:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1086:10:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1098:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1082:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1082:19:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1076:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1076:26:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1044:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1044:59:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1044:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "995:1:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "998:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "992:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1002:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1004:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1013:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1016:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1009:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1009:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1004:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "988:3:1",
																"statements": []
															},
															"src": "984:129:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1137:6:1"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "1145:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1133:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1133:15:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1150:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1129:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1155:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1122:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1166:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1176:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1166:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "146:1042:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1248:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1258:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1275:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1289:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1319:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1325:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1293:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1366:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1368:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1382:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1390:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1378:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1378:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1368:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1346:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1339:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1339:26:1"
															},
															"nodeType": "YulIf",
															"src": "1336:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1456:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1477:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1484:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1489:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1480:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1480:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1470:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1521:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1524:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1514:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1514:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1514:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1549:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1552:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1542:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1542:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1542:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1412:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1435:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1443:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1432:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1432:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1409:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:38:1"
															},
															"nodeType": "YulIf",
															"src": "1406:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1228:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1237:6:1",
														"type": ""
													}
												],
												"src": "1193:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1651:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1654:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1644:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1644:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1644:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1667:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1685:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1688:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "1675:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1675:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1667:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1617:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1625:4:1",
														"type": ""
													}
												],
												"src": "1578:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1785:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1818:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1832:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1842:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1836:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1863:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1867:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1856:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1856:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1856:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1886:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1908:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1912:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "1898:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1898:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "1890:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1930:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1953:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1963:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "1970:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1982:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1966:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1966:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1959:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1959:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1949:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1949:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "1934:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2024:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2026:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2041:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2026:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2006:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2018:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2003:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2003:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "2000:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2060:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2074:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2084:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2091:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2096:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2087:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2087:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2080:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2080:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2070:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2070:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2064:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2114:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2127:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2118:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2212:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2221:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2228:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2214:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2214:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2214:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2162:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2169:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2159:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2159:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2173:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2175:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2188:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2195:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2184:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2184:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2175:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2155:3:1",
																			"statements": []
																		},
																		"src": "2151:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "1801:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1806:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1798:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:11:1"
															},
															"nodeType": "YulIf",
															"src": "1795:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1757:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1764:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "1769:10:1",
														"type": ""
													}
												],
												"src": "1704:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2339:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2349:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2364:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2382:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2385:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2378:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2378:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2395:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2391:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2391:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2374:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2374:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2370:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2370:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2360:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2360:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2406:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2409:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2402:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2402:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2357:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2349:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2316:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2322:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2330:4:1",
														"type": ""
													}
												],
												"src": "2254:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2521:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2531:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2551:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2545:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2545:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2535:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2598:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2600:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2600:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2600:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2570:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2586:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2590:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2582:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2582:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2594:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2578:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2578:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2567:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2567:30:1"
															},
															"nodeType": "YulIf",
															"src": "2564:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2673:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2711:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2705:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2705:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "2679:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2679:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2719:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2629:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2629:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2629:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2735:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2752:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "2739:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2762:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2781:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "2766:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2794:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "2807:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "2794:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2864:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2878:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2897:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2909:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "2905:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2905:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2893:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2893:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "2882:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2926:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2970:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "2940:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2940:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "2930:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2988:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2997:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "2992:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3075:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3100:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3118:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3123:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3114:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3114:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3108:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3108:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3093:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3093:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3093:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3152:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3166:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3174:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3162:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3162:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3152:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3193:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3210:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3221:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3206:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3206:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3193:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3022:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3025:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3019:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3019:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3034:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3036:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3045:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3048:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3041:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3041:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3036:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3015:3:1",
																					"statements": []
																				},
																				"src": "3011:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3295:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3313:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3340:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3345:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3336:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3336:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3330:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3330:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3317:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3380:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3392:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3419:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3422:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3415:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3415:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3431:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3411:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3411:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3441:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3437:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3437:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3407:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3407:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3403:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3403:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3388:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3388:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3373:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3373:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3373:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3266:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3275:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3263:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3263:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3260:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3481:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3495:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3498:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3491:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3491:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3507:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3487:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3487:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3474:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3474:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3474:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2857:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2862:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3537:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3551:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3564:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3555:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3600:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3618:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3637:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3642:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3633:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3633:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3627:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3627:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3618:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3581:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3578:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3687:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3746:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "3753:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "3693:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3693:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3680:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3680:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3680:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3529:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2837:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2845:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2834:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2834:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "2827:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2506:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2512:3:1",
														"type": ""
													}
												],
												"src": "2425:1352:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        mstore(add(add(memPtr, _4), _1), 0)\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620015be380380620015be83398101604081905262000033916200006b565b6200003e8162000045565b506200028d565b6002620000538282620001c5565b5050565b634e487b7160e01b5f52604160045260245ffd5b5f60208083850312156200007d575f80fd5b82516001600160401b038082111562000094575f80fd5b818501915085601f830112620000a8575f80fd5b815181811115620000bd57620000bd62000057565b604051601f8201601f19908116603f01168101908382118183101715620000e857620000e862000057565b81604052828152888684870101111562000100575f80fd5b5f93505b8284101562000123578484018601518185018701529285019262000104565b5f86848301015280965050505050505092915050565b600181811c908216806200014e57607f821691505b6020821081036200016d57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620001c0575f81815260208120601f850160051c810160208610156200019b5750805b601f850160051c820191505b81811015620001bc57828155600101620001a7565b5050505b505050565b81516001600160401b03811115620001e157620001e162000057565b620001f981620001f2845462000139565b8462000173565b602080601f8311600181146200022f575f8415620002175750858301515b5f19600386901b1c1916600185901b178555620001bc565b5f85815260208120601f198616915b828110156200025f578886015182559484019460019091019084016200023e565b50858210156200027d57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b611323806200029b5f395ff3fe608060405234801561000f575f80fd5b5060043610610084575f3560e01c80634e1273f4116100585780634e1273f414610106578063a22cb46514610126578063e985e9c514610139578063f242432a14610174575f80fd5b8062fdd58e1461008857806301ffc9a7146100ae5780630e89341c146100d15780632eb2c2d6146100f1575b5f80fd5b61009b610096366004610b25565b610187565b6040519081526020015b60405180910390f35b6100c16100bc366004610b65565b61021e565b60405190151581526020016100a5565b6100e46100df366004610b87565b61026d565b6040516100a59190610be1565b6101046100ff366004610d35565b6102ff565b005b610119610114366004610dd8565b61034b565b6040516100a59190610ed6565b610104610134366004610ee8565b610473565b6100c1610147366004610f21565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b610104610182366004610f52565b610482565b5f6001600160a01b0383166101f65760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b505f818152602081815260408083206001600160a01b03861684529091529020545b92915050565b5f6001600160e01b03198216636cdb3d1360e11b148061024e57506001600160e01b031982166303a24d0760e21b145b8061021857506301ffc9a760e01b6001600160e01b0319831614610218565b60606002805461027c90610fb2565b80601f01602080910402602001604051908101604052809291908181526020018280546102a890610fb2565b80156102f35780601f106102ca576101008083540402835291602001916102f3565b820191905f5260205f20905b8154815290600101906020018083116102d657829003601f168201915b50505050509050919050565b6001600160a01b03851633148061031b575061031b8533610147565b6103375760405162461bcd60e51b81526004016101ed90610fea565b61034485858585856104c7565b5050505050565b606081518351146103b05760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101ed565b5f835167ffffffffffffffff8111156103cb576103cb610bf3565b6040519080825280602002602001820160405280156103f4578160200160208202803683370190505b5090505f5b845181101561046b5761043e85828151811061041757610417611038565b602002602001015185838151811061043157610431611038565b6020026020010151610187565b82828151811061045057610450611038565b602090810291909101015261046481611060565b90506103f9565b509392505050565b61047e33838361069f565b5050565b6001600160a01b03851633148061049e575061049e8533610147565b6104ba5760405162461bcd60e51b81526004016101ed90610fea565b610344858585858561077e565b81518351146105295760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101ed565b6001600160a01b03841661054f5760405162461bcd60e51b81526004016101ed90611078565b335f5b8451811015610631575f85828151811061056e5761056e611038565b602002602001015190505f85838151811061058b5761058b611038565b6020908102919091018101515f84815280835260408082206001600160a01b038e1683529093529190912054909150818110156105da5760405162461bcd60e51b81526004016101ed906110bd565b5f838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610616908490611107565b925050819055505050508061062a90611060565b9050610552565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161068192919061111a565b60405180910390a46106978187878787876108a4565b505050505050565b816001600160a01b0316836001600160a01b0316036107125760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101ed565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166107a45760405162461bcd60e51b81526004016101ed90611078565b335f6107af85610a07565b90505f6107bb85610a07565b90505f868152602081815260408083206001600160a01b038c168452909152902054858110156107fd5760405162461bcd60e51b81526004016101ed906110bd565b5f878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610839908490611107565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610899848a8a8a8a8a610a50565b505050505050505050565b6001600160a01b0384163b156106975760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906108e89089908990889088908890600401611147565b6020604051808303815f875af1925050508015610922575060408051601f3d908101601f1916820190925261091f918101906111a4565b60015b6109ce5761092e6111bf565b806308c379a00361096757506109426111d8565b8061094d5750610969565b8060405162461bcd60e51b81526004016101ed9190610be1565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101ed565b6001600160e01b0319811663bc197c8160e01b146109fe5760405162461bcd60e51b81526004016101ed90611261565b50505050505050565b6040805160018082528183019092526060915f91906020808301908036833701905050905082815f81518110610a3f57610a3f611038565b602090810291909101015292915050565b6001600160a01b0384163b156106975760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610a9490899089908890889088906004016112a9565b6020604051808303815f875af1925050508015610ace575060408051601f3d908101601f19168201909252610acb918101906111a4565b60015b610ada5761092e6111bf565b6001600160e01b0319811663f23a6e6160e01b146109fe5760405162461bcd60e51b81526004016101ed90611261565b80356001600160a01b0381168114610b20575f80fd5b919050565b5f8060408385031215610b36575f80fd5b610b3f83610b0a565b946020939093013593505050565b6001600160e01b031981168114610b62575f80fd5b50565b5f60208284031215610b75575f80fd5b8135610b8081610b4d565b9392505050565b5f60208284031215610b97575f80fd5b5035919050565b5f81518084525f5b81811015610bc257602081850181015186830182015201610ba6565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f610b806020830184610b9e565b634e487b7160e01b5f52604160045260245ffd5b601f8201601f1916810167ffffffffffffffff81118282101715610c2d57610c2d610bf3565b6040525050565b5f67ffffffffffffffff821115610c4d57610c4d610bf3565b5060051b60200190565b5f82601f830112610c66575f80fd5b81356020610c7382610c34565b604051610c808282610c07565b83815260059390931b8501820192828101915086841115610c9f575f80fd5b8286015b84811015610cba5780358352918301918301610ca3565b509695505050505050565b5f82601f830112610cd4575f80fd5b813567ffffffffffffffff811115610cee57610cee610bf3565b604051610d05601f8301601f191660200182610c07565b818152846020838601011115610d19575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f805f60a08688031215610d49575f80fd5b610d5286610b0a565b9450610d6060208701610b0a565b9350604086013567ffffffffffffffff80821115610d7c575f80fd5b610d8889838a01610c57565b94506060880135915080821115610d9d575f80fd5b610da989838a01610c57565b93506080880135915080821115610dbe575f80fd5b50610dcb88828901610cc5565b9150509295509295909350565b5f8060408385031215610de9575f80fd5b823567ffffffffffffffff80821115610e00575f80fd5b818501915085601f830112610e13575f80fd5b81356020610e2082610c34565b604051610e2d8282610c07565b83815260059390931b8501820192828101915089841115610e4c575f80fd5b948201945b83861015610e7157610e6286610b0a565b82529482019490820190610e51565b96505086013592505080821115610e86575f80fd5b50610e9385828601610c57565b9150509250929050565b5f8151808452602080850194508084015f5b83811015610ecb57815187529582019590820190600101610eaf565b509495945050505050565b602081525f610b806020830184610e9d565b5f8060408385031215610ef9575f80fd5b610f0283610b0a565b915060208301358015158114610f16575f80fd5b809150509250929050565b5f8060408385031215610f32575f80fd5b610f3b83610b0a565b9150610f4960208401610b0a565b90509250929050565b5f805f805f60a08688031215610f66575f80fd5b610f6f86610b0a565b9450610f7d60208701610b0a565b93506040860135925060608601359150608086013567ffffffffffffffff811115610fa6575f80fd5b610dcb88828901610cc5565b600181811c90821680610fc657607f821691505b602082108103610fe457634e487b7160e01b5f52602260045260245ffd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f600182016110715761107161104c565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b808201808211156102185761021861104c565b604081525f61112c6040830185610e9d565b828103602084015261113e8185610e9d565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190525f9061117290830186610e9d565b82810360608401526111848186610e9d565b905082810360808401526111988185610b9e565b98975050505050505050565b5f602082840312156111b4575f80fd5b8151610b8081610b4d565b5f60033d11156111d55760045f803e505f5160e01c5b90565b5f60443d10156111e55790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561121557505050505090565b828501915081518181111561122d5750505050505090565b843d87010160208285010111156112475750505050505090565b61125660208286010187610c07565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190525f906112e290830184610b9e565b97965050505050505056fea2646970667358221220be66432af40924a0b1d6e99a8eaa9c59b8d808d6c07536332543657ba02caf9b64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x15BE CODESIZE SUB DUP1 PUSH3 0x15BE DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x6B JUMP JUMPDEST PUSH3 0x3E DUP2 PUSH3 0x45 JUMP JUMPDEST POP PUSH3 0x28D JUMP JUMPDEST PUSH1 0x2 PUSH3 0x53 DUP3 DUP3 PUSH3 0x1C5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x7D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x94 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0xBD JUMPI PUSH3 0xBD PUSH3 0x57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xE8 JUMPI PUSH3 0xE8 PUSH3 0x57 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x100 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x123 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x104 JUMP JUMPDEST PUSH0 DUP7 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x14E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x16D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1C0 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x19B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1BC JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1A7 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1E1 JUMPI PUSH3 0x1E1 PUSH3 0x57 JUMP JUMPDEST PUSH3 0x1F9 DUP2 PUSH3 0x1F2 DUP5 SLOAD PUSH3 0x139 JUMP JUMPDEST DUP5 PUSH3 0x173 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x22F JUMPI PUSH0 DUP5 ISZERO PUSH3 0x217 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1BC JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x25F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x23E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x27D JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1323 DUP1 PUSH3 0x29B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x84 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x174 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9B PUSH2 0x96 CALLDATASIZE PUSH1 0x4 PUSH2 0xB25 JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA5 JUMP JUMPDEST PUSH2 0xE4 PUSH2 0xDF CALLDATASIZE PUSH1 0x4 PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x26D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0x104 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0xD35 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x119 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE8 JUMP JUMPDEST PUSH2 0x473 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0xF21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0xF52 JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x24E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x218 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x218 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x27C SWAP1 PUSH2 0xFB2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A8 SWAP1 PUSH2 0xFB2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x31B JUMPI POP PUSH2 0x31B DUP6 CALLER PUSH2 0x147 JUMP JUMPDEST PUSH2 0x337 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP1 PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x344 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4C7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1ED JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CB JUMPI PUSH2 0x3CB PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x46B JUMPI PUSH2 0x43E DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x417 JUMPI PUSH2 0x417 PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x431 JUMPI PUSH2 0x431 PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x187 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x464 DUP2 PUSH2 0x1060 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x47E CALLER DUP4 DUP4 PUSH2 0x69F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x49E JUMPI POP PUSH2 0x49E DUP6 CALLER PUSH2 0x147 JUMP JUMPDEST PUSH2 0x4BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP1 PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x344 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x77E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x529 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP1 PUSH2 0x1078 JUMP JUMPDEST CALLER PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x631 JUMPI PUSH0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x56E JUMPI PUSH2 0x56E PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x58B JUMPI PUSH2 0x58B PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x616 SWAP1 DUP5 SWAP1 PUSH2 0x1107 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x62A SWAP1 PUSH2 0x1060 JUMP JUMPDEST SWAP1 POP PUSH2 0x552 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x681 SWAP3 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x697 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x8A4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP1 PUSH2 0x1078 JUMP JUMPDEST CALLER PUSH0 PUSH2 0x7AF DUP6 PUSH2 0xA07 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x7BB DUP6 PUSH2 0xA07 JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x7FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x839 SWAP1 DUP5 SWAP1 PUSH2 0x1107 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x899 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xA50 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x8E8 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x922 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x91F SWAP2 DUP2 ADD SWAP1 PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9CE JUMPI PUSH2 0x92E PUSH2 0x11BF JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x967 JUMPI POP PUSH2 0x942 PUSH2 0x11D8 JUMP JUMPDEST DUP1 PUSH2 0x94D JUMPI POP PUSH2 0x969 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP1 PUSH2 0x1261 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xA3F JUMPI PUSH2 0xA3F PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xA94 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xACE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xACB SWAP2 DUP2 ADD SWAP1 PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xADA JUMPI PUSH2 0x92E PUSH2 0x11BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP1 PUSH2 0x1261 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB20 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB36 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3F DUP4 PUSH2 0xB0A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB62 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB75 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB80 DUP2 PUSH2 0xB4D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBA6 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xB80 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB9E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC2D JUMPI PUSH2 0xC2D PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4D PUSH2 0xBF3 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC66 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xC73 DUP3 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC80 DUP3 DUP3 PUSH2 0xC07 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xC9F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCBA JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xCA3 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCEE JUMPI PUSH2 0xCEE PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD05 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xC07 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD19 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD49 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD52 DUP7 PUSH2 0xB0A JUMP JUMPDEST SWAP5 POP PUSH2 0xD60 PUSH1 0x20 DUP8 ADD PUSH2 0xB0A JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD7C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD88 DUP10 DUP4 DUP11 ADD PUSH2 0xC57 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD9D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDA9 DUP10 DUP4 DUP11 ADD PUSH2 0xC57 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDBE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDCB DUP9 DUP3 DUP10 ADD PUSH2 0xCC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE00 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE13 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE20 DUP3 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2D DUP3 DUP3 PUSH2 0xC07 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xE4C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xE71 JUMPI PUSH2 0xE62 DUP7 PUSH2 0xB0A JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xE51 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xE86 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE93 DUP6 DUP3 DUP7 ADD PUSH2 0xC57 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xECB JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xEAF JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xB80 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE9D JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF02 DUP4 PUSH2 0xB0A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF16 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF32 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF3B DUP4 PUSH2 0xB0A JUMP JUMPDEST SWAP2 POP PUSH2 0xF49 PUSH1 0x20 DUP5 ADD PUSH2 0xB0A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF66 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF6F DUP7 PUSH2 0xB0A JUMP JUMPDEST SWAP5 POP PUSH2 0xF7D PUSH1 0x20 DUP8 ADD PUSH2 0xB0A JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDCB DUP9 DUP3 DUP10 ADD PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFC6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFE4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1071 JUMPI PUSH2 0x1071 PUSH2 0x104C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x218 JUMPI PUSH2 0x218 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x112C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xE9D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x113E DUP2 DUP6 PUSH2 0xE9D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1172 SWAP1 DUP4 ADD DUP7 PUSH2 0xE9D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1184 DUP2 DUP7 PUSH2 0xE9D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1198 DUP2 DUP6 PUSH2 0xB9E JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB80 DUP2 PUSH2 0xB4D JUMP JUMPDEST PUSH0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x11D5 JUMPI PUSH1 0x4 PUSH0 DUP1 RETURNDATACOPY POP PUSH0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x11E5 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1215 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x122D JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1247 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1256 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xC07 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x12E2 SWAP1 DUP4 ADD DUP5 PUSH2 0xB9E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH7 0x432AF40924A0B1 0xD6 0xE9 SWAP11 DUP15 0xAA SWAP13 MSIZE 0xB8 0xD8 ADDMOD 0xD6 0xC0 PUSH22 0x36332543657BA02CAF9B64736F6C6343000814003300 ",
							"sourceMap": "22336:16539:0:-:0;;;22873:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22915:13;22923:4;22915:7;:13::i;:::-;22873:62;22336:16539;;29915:86;29981:4;:13;29988:6;29981:4;:13;:::i;:::-;;29915:86;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1042;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:1;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:1;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1155:1;1150:2;1145;1137:6;1133:15;1129:24;1122:35;1176:6;1166:16;;;;;;;;146:1042;;;;:::o;1193:380::-;1272:1;1268:12;;;;1315;;;1336:61;;1390:4;1382:6;1378:17;1368:27;;1336:61;1443:2;1435:6;1432:14;1412:18;1409:38;1406:161;;1489:10;1484:3;1480:20;1477:1;1470:31;1524:4;1521:1;1514:15;1552:4;1549:1;1542:15;1406:161;;1193:380;;;:::o;1704:545::-;1806:2;1801:3;1798:11;1795:448;;;1842:1;1867:5;1863:2;1856:17;1912:4;1908:2;1898:19;1982:2;1970:10;1966:19;1963:1;1959:27;1953:4;1949:38;2018:4;2006:10;2003:20;2000:47;;;-1:-1:-1;2041:4:1;2000:47;2096:2;2091:3;2087:12;2084:1;2080:20;2074:4;2070:31;2060:41;;2151:82;2169:2;2162:5;2159:13;2151:82;;;2214:17;;;2195:1;2184:13;2151:82;;;2155:3;;;1795:448;1704:545;;;:::o;2425:1352::-;2545:10;;-1:-1:-1;;;;;2567:30:1;;2564:56;;;2600:18;;:::i;:::-;2629:97;2719:6;2679:38;2711:4;2705:11;2679:38;:::i;:::-;2673:4;2629:97;:::i;:::-;2781:4;;2845:2;2834:14;;2862:1;2857:663;;;;3564:1;3581:6;3578:89;;;-1:-1:-1;3633:19:1;;;3627:26;3578:89;-1:-1:-1;;2382:1:1;2378:11;;;2374:24;2370:29;2360:40;2406:1;2402:11;;;2357:57;3680:81;;2827:944;;2857:663;1651:1;1644:14;;;1688:4;1675:18;;-1:-1:-1;;2893:20:1;;;3011:236;3025:7;3022:1;3019:14;3011:236;;;3114:19;;;3108:26;3093:42;;3206:27;;;;3174:1;3162:14;;;;3041:19;;3011:236;;;3015:3;3275:6;3266:7;3263:19;3260:201;;;3336:19;;;3330:26;-1:-1:-1;;3419:1:1;3415:14;;;3431:3;3411:24;3407:37;3403:42;3388:58;3373:74;;3260:201;-1:-1:-1;;;;;3507:1:1;3491:14;;;3487:22;3474:36;;-1:-1:-1;2425:1352:1:o;:::-;22336:16539:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1725": {
									"entryPoint": null,
									"id": 1725,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1881": {
									"entryPoint": 2567,
									"id": 1881,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1706": {
									"entryPoint": null,
									"id": 1706,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1853": {
									"entryPoint": 2212,
									"id": 1853,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1788": {
									"entryPoint": 2640,
									"id": 1788,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_1204": {
									"entryPoint": 1223,
									"id": 1204,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_1069": {
									"entryPoint": 1918,
									"id": 1069,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1687": {
									"entryPoint": 1695,
									"id": 1687,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_839": {
									"entryPoint": 843,
									"id": 839,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_775": {
									"entryPoint": 391,
									"id": 775,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_874": {
									"entryPoint": null,
									"id": 874,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_149": {
									"entryPoint": null,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_952": {
									"entryPoint": 767,
									"id": 952,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_912": {
									"entryPoint": 1154,
									"id": 912,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_856": {
									"entryPoint": 1139,
									"id": 856,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_493": {
									"entryPoint": null,
									"id": 493,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_735": {
									"entryPoint": 542,
									"id": 735,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_747": {
									"entryPoint": 621,
									"id": 747,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 3922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 3741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 2974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4423,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4777,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4378,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4172,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4152,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3059,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4543,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 2893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15860:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:1"
															},
															"nodeType": "YulIf",
															"src": "289:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:1",
														"type": ""
													}
												],
												"src": "192:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:1",
														"type": ""
													}
												],
												"src": "451:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:1"
															},
															"nodeType": "YulIf",
															"src": "687:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:1",
														"type": ""
													}
												],
												"src": "633:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:1"
															},
															"nodeType": "YulIf",
															"src": "848:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:1",
														"type": ""
													}
												],
												"src": "769:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:1",
														"type": ""
													}
												],
												"src": "1019:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1327:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:32:1"
															},
															"nodeType": "YulIf",
															"src": "1291:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1352:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1258:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:1",
														"type": ""
													}
												],
												"src": "1211:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:373:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:110:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:1",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1560:21:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1562:17:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:1",
																"statements": []
															},
															"src": "1538:162:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1724:3:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1729:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1720:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1720:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1738:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1716:27:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1745:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1709:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1756:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1771:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1784:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1792:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1780:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1780:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1801:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1797:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1797:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1776:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1776:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1767:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1763:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1423:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1430:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1438:3:1",
														"type": ""
													}
												],
												"src": "1396:423:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1945:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1962:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1955:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1985:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2011:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2034:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2019:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1993:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1993:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1985:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1914:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1925:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1936:4:1",
														"type": ""
													}
												],
												"src": "1824:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2081:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2098:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2105:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2110:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2101:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2091:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2091:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2091:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2138:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2141:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2131:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2131:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2162:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2165:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2155:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2049:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:202:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2238:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2260:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2276:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2282:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2272:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2272:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2291:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2287:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2287:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2268:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2268:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2256:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2242:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2371:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2373:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2373:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2373:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2314:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2326:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2311:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2311:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2350:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2362:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2347:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2347:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2308:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:62:1"
															},
															"nodeType": "YulIf",
															"src": "2305:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2409:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2413:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2402:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2210:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2218:4:1",
														"type": ""
													}
												],
												"src": "2181:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2504:114:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2548:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2550:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2550:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2550:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2520:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2528:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2517:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:30:1"
															},
															"nodeType": "YulIf",
															"src": "2514:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2579:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2595:1:1",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2591:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2591:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2607:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2587:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:25:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2579:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2484:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2495:4:1",
														"type": ""
													}
												],
												"src": "2435:183:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2687:660:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2736:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2745:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2748:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2738:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2738:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2738:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2715:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2723:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2711:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2711:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2730:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2707:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2707:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:35:1"
															},
															"nodeType": "YulIf",
															"src": "2697:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2761:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2784:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2771:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2771:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2765:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2800:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2810:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2804:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2823:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2873:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2833:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:43:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2827:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2885:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2899:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2889:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2937:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2945:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2917:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2917:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2917:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2957:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2968:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2961:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2990:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2998:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2983:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2983:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3010:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3021:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3029:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3017:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3017:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3010:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3041:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3063:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3075:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3078:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3071:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3071:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3059:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3059:23:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3084:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3055:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:32:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3045:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3115:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3124:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3127:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3117:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3117:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3117:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3102:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3110:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3099:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3099:15:1"
															},
															"nodeType": "YulIf",
															"src": "3096:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3140:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3163:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3151:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3151:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3144:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3231:86:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3252:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3270:3:1"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3257:12:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3257:17:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3245:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3245:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3245:30:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3288:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3299:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3304:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3295:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3295:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3288:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3186:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3191:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3183:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3183:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3199:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3201:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3212:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3217:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3208:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3208:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3201:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3179:3:1",
																"statements": []
															},
															"src": "3175:142:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3326:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3335:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3326:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2661:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2669:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2677:5:1",
														"type": ""
													}
												],
												"src": "2623:724:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3404:503:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3453:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3462:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3465:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3455:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3455:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3455:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3432:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3440:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3428:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3428:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3447:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3424:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3417:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3417:35:1"
															},
															"nodeType": "YulIf",
															"src": "3414:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3478:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3501:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3488:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3488:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3482:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3547:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3549:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3549:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3549:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3523:2:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3527:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3520:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3520:26:1"
															},
															"nodeType": "YulIf",
															"src": "3517:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3578:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3598:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3592:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3592:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3582:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3630:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3650:2:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3654:4:1",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3646:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3646:13:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3665:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3661:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3661:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3642:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3642:27:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3671:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3638:38:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3610:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:67:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3693:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3701:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3686:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3752:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3761:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3764:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3754:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3754:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3754:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3727:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3735:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3723:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3723:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3740:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3719:26:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3747:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3716:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3716:35:1"
															},
															"nodeType": "YulIf",
															"src": "3713:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3794:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3802:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3790:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3813:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3821:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3809:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3809:17:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3828:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3777:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3777:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3777:54:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3855:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3863:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3851:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3851:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3868:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3847:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3847:26:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3875:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3840:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3840:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3840:37:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3886:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3895:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3886:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3378:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3386:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3394:5:1",
														"type": ""
													}
												],
												"src": "3352:555:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4109:746:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4156:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4165:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4168:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4158:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4158:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4158:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4130:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4139:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4126:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4126:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4151:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:33:1"
															},
															"nodeType": "YulIf",
															"src": "4119:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4181:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4210:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4191:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4191:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4181:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4229:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4262:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4273:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4258:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4239:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4239:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4229:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4286:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4317:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4328:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4313:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4300:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4300:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4290:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4341:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4351:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4345:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4396:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4405:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4408:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4398:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4398:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4398:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4384:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4392:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4381:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4381:14:1"
															},
															"nodeType": "YulIf",
															"src": "4378:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4421:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4464:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4475:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4460:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4460:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4484:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4431:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4431:61:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4421:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4501:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4534:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4545:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4530:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4530:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4517:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4517:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4505:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4578:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4587:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4590:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4580:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4580:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4580:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4564:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4574:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4561:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4561:16:1"
															},
															"nodeType": "YulIf",
															"src": "4558:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4603:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4646:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4657:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4642:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4642:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4668:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4613:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:63:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4685:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4718:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4729:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4714:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4701:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4701:33:1"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4689:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4763:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4772:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4775:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4765:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4765:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4765:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4749:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4759:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4746:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4746:16:1"
															},
															"nodeType": "YulIf",
															"src": "4743:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4788:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4819:9:1"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4830:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4815:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4841:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4798:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4798:51:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4788:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4043:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4054:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4066:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4074:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4082:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4090:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4098:6:1",
														"type": ""
													}
												],
												"src": "3912:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4997:1071:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5043:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5052:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5055:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5045:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5045:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5045:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5018:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5027:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5014:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5014:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5039:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5010:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5010:32:1"
															},
															"nodeType": "YulIf",
															"src": "5007:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5068:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5095:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5082:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5082:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5072:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5114:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5124:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5118:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5171:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5171:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5157:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5165:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5154:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5154:14:1"
															},
															"nodeType": "YulIf",
															"src": "5151:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5194:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5208:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5219:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5204:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5198:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5274:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5283:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5286:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5276:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5276:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5276:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5253:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5257:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5249:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5249:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5264:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5245:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5245:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5238:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5238:35:1"
															},
															"nodeType": "YulIf",
															"src": "5235:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5299:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5322:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5309:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5303:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5334:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5344:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5338:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5357:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5407:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5367:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:43:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5361:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5419:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5439:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5433:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5433:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5423:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5471:6:1"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "5479:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5451:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5451:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5451:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5491:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5502:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5495:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5524:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5532:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5517:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5517:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5517:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5544:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5555:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5563:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5551:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5544:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5575:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5597:2:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5605:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5608:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5601:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5601:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5593:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5593:19:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5614:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5589:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5589:28:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5579:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5649:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5658:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5661:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5651:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5651:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5651:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5632:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5640:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5629:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5629:19:1"
															},
															"nodeType": "YulIf",
															"src": "5626:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5674:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5689:2:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5693:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5685:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5685:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5678:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5761:92:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5782:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5806:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5787:18:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5787:23:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5775:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5775:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5775:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5824:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5835:3:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5840:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5831:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5831:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5824:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5716:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5721:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5713:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5713:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5729:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5731:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5742:3:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5747:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5738:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5738:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5731:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5709:3:1",
																"statements": []
															},
															"src": "5705:148:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5862:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5872:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5862:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5887:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5920:9:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5931:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5916:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5903:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5903:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5891:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5964:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5973:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5976:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5966:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5966:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5966:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5950:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5960:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5947:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5947:16:1"
															},
															"nodeType": "YulIf",
															"src": "5944:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5989:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6032:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6043:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6028:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6028:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6054:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5999:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5999:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5989:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4955:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4966:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4978:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4986:6:1",
														"type": ""
													}
												],
												"src": "4860:1208:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6134:374:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6144:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6164:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6158:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6158:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6148:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6186:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6191:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6179:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6207:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6217:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6211:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6230:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6241:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6246:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6237:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6237:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6230:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6258:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6276:5:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6283:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6272:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:14:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6262:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6295:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6304:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6299:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6363:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6384:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6395:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6389:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6389:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6377:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6377:26:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6377:26:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6416:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6427:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6432:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6423:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6423:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6416:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6448:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6462:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6470:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6458:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6458:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6448:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6325:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6328:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6322:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6322:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6336:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6338:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6347:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6350:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6343:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6343:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6338:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6318:3:1",
																"statements": []
															},
															"src": "6314:169:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6492:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6499:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6492:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6111:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6118:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6126:3:1",
														"type": ""
													}
												],
												"src": "6073:435:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6664:110:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6681:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6674:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6674:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6704:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6753:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6764:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6749:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6749:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6712:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6712:56:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6704:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6633:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6655:4:1",
														"type": ""
													}
												],
												"src": "6513:261:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6863:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6909:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6918:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6921:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6911:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6911:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6911:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6884:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6893:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6880:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6880:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6876:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6876:32:1"
															},
															"nodeType": "YulIf",
															"src": "6873:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6934:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6963:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6944:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6934:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6982:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7012:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7023:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7008:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7008:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6995:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6995:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6986:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7080:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7089:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7092:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7082:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7082:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7082:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7049:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7070:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7063:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7063:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7056:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7056:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7046:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7046:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7039:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7039:40:1"
															},
															"nodeType": "YulIf",
															"src": "7036:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7105:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7115:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7105:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6821:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6832:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6844:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6852:6:1",
														"type": ""
													}
												],
												"src": "6779:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7218:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7264:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7273:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7276:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7266:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7266:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7266:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7260:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7231:32:1"
															},
															"nodeType": "YulIf",
															"src": "7228:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7289:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7318:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7299:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7299:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7289:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7337:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7370:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7381:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7366:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7366:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7347:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7347:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7337:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7176:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7187:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7199:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7207:6:1",
														"type": ""
													}
												],
												"src": "7131:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7543:459:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7590:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7599:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7602:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7592:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7592:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7592:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7564:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7573:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7560:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7585:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7556:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7556:33:1"
															},
															"nodeType": "YulIf",
															"src": "7553:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7615:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7644:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7625:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7625:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7615:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7663:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7696:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7707:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7692:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7692:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7673:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7673:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7663:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7720:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7747:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7758:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7730:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7730:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7720:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7771:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7798:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7809:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7794:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7794:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7781:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7781:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7771:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7822:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7853:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7864:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7849:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7836:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7836:33:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7826:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7912:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7921:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7924:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7914:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7914:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7914:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7884:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7892:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7881:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7881:30:1"
															},
															"nodeType": "YulIf",
															"src": "7878:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7937:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7968:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7979:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7964:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7988:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7947:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7947:49:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7937:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7477:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7488:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7500:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7508:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7516:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7524:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7532:6:1",
														"type": ""
													}
												],
												"src": "7396:606:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8181:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8198:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8209:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8191:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8191:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8232:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8243:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8228:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8248:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8221:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8221:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8271:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8282:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8267:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8267:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8287:34:1",
																		"type": "",
																		"value": "ERC1155: address zero is not a v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8260:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8260:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8260:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8342:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8353:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8338:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8338:18:1"
																	},
																	{
																		"hexValue": "616c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8358:12:1",
																		"type": "",
																		"value": "alid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8331:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8331:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8380:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8392:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8403:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8388:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8388:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8380:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8158:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8172:4:1",
														"type": ""
													}
												],
												"src": "8007:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8473:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8483:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8497:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8500:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8493:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8483:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8514:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8544:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8550:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8540:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8540:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8518:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8591:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8593:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8607:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8615:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8603:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8603:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8593:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8571:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8564:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8564:26:1"
															},
															"nodeType": "YulIf",
															"src": "8561:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8681:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8702:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8709:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8714:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8705:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8705:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8695:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8695:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8695:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8746:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8749:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8739:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8739:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8774:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8777:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8767:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8767:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8767:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8637:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8660:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8668:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8657:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8657:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8634:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8634:38:1"
															},
															"nodeType": "YulIf",
															"src": "8631:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8453:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8462:6:1",
														"type": ""
													}
												],
												"src": "8418:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8977:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8994:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9005:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8987:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8987:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8987:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9028:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9039:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9024:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9024:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9044:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9017:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9017:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9017:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9067:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9078:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9063:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9063:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9083:34:1",
																		"type": "",
																		"value": "ERC1155: caller is not token own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9056:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9056:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9138:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9149:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9134:18:1"
																	},
																	{
																		"hexValue": "6572206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9154:16:1",
																		"type": "",
																		"value": "er or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9127:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9127:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9180:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9192:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9203:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9188:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9188:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9180:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8954:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8968:4:1",
														"type": ""
													}
												],
												"src": "8803:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9392:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9409:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9420:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9402:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9402:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9402:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9443:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9454:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9439:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9439:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9459:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9432:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9432:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9432:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9482:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9493:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9478:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9478:18:1"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9498:34:1",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9471:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9471:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9471:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9553:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9564:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9549:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9549:18:1"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9569:11:1",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9542:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9542:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9542:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9590:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9602:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9613:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9598:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9598:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9590:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9369:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9383:4:1",
														"type": ""
													}
												],
												"src": "9218:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9660:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9677:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9684:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9689:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9680:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9680:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9670:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9670:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9717:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9720:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9710:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9710:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9741:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9744:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9734:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9734:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9734:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9628:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9792:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9809:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9816:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9821:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9812:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9812:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9802:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9802:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9802:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9849:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9852:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9842:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9842:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9842:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9873:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9876:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9866:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9866:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9866:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9760:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9939:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9970:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9972:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9972:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9972:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9955:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9966:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9962:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9962:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9952:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9952:17:1"
															},
															"nodeType": "YulIf",
															"src": "9949:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10001:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10012:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10019:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10008:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10008:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10001:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9921:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9931:3:1",
														"type": ""
													}
												],
												"src": "9892:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10206:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10223:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10234:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10216:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10216:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10216:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10257:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10268:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10253:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10253:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10273:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10246:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10246:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10246:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10296:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10307:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10292:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10292:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10312:34:1",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10285:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10285:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10285:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10367:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10378:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10363:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10363:18:1"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10383:10:1",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10356:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10356:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10356:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10403:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10415:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10426:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10411:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10411:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10403:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10183:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10197:4:1",
														"type": ""
													}
												],
												"src": "10032:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10615:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10632:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10643:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10625:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10625:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10625:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10666:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10677:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10662:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10682:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10655:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10655:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10705:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10716:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10701:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10701:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10721:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10694:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10694:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10694:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10776:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10787:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10772:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10772:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10792:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10765:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10765:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10765:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10809:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10821:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10832:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10817:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10817:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10809:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10592:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10606:4:1",
														"type": ""
													}
												],
												"src": "10441:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11021:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11038:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11049:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11031:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11031:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11031:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11072:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11083:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11068:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11068:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11088:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11061:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11061:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11061:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11111:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11122:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11107:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11107:18:1"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11127:34:1",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11100:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11100:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11182:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11193:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11178:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11178:18:1"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11198:12:1",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11171:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11171:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11171:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11220:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11232:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11243:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11228:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11228:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11220:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10998:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11012:4:1",
														"type": ""
													}
												],
												"src": "10847:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11306:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11316:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11327:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11330:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11323:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11323:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11316:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11355:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11357:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11357:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11357:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11347:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "11350:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11344:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11344:10:1"
															},
															"nodeType": "YulIf",
															"src": "11341:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11289:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11292:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11298:3:1",
														"type": ""
													}
												],
												"src": "11258:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11617:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11634:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11645:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11627:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11627:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11657:70:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11700:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11712:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11723:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11708:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11708:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11671:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11671:56:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11661:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11747:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11758:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11743:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11743:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "11767:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11775:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11763:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11763:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11736:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11736:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11736:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11795:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11832:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "11840:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11803:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11803:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11795:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11578:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11589:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11597:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11608:4:1",
														"type": ""
													}
												],
												"src": "11388:465:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12032:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12049:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12060:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12042:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12042:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12042:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12083:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12094:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12079:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12079:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12099:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12072:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12072:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12072:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12122:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12133:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12118:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12118:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12138:34:1",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12111:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12111:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12111:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12193:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12204:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12189:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12189:18:1"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12209:11:1",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12182:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12182:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12230:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12242:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12253:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12238:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12238:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12230:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12009:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12023:4:1",
														"type": ""
													}
												],
												"src": "11858:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12397:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12407:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12419:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12430:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12415:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12415:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12407:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12449:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12460:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12442:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12442:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12442:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12487:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12498:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12483:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12483:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12503:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12476:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12476:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12476:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12358:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12369:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12377:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12388:4:1",
														"type": ""
													}
												],
												"src": "12268:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12852:496:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12862:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12880:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12885:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12876:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12876:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12889:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12872:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12872:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12866:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12907:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12922:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12930:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12918:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12918:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12900:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12900:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12900:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12954:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12965:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12950:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12950:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12974:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12982:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12970:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12970:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12943:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12943:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12943:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13006:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13017:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13002:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13002:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13022:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12995:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12995:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12995:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13035:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13078:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13090:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13101:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13086:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13086:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13049:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13049:57:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "13039:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13126:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13137:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13122:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13122:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "13146:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13154:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13142:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13142:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13115:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13115:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13115:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13174:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13217:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13225:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13188:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13188:44:1"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "13178:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13252:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13263:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13248:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13248:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "13273:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13281:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13269:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13269:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13241:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13241:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13241:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13301:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13327:6:1"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "13335:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "13309:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13309:33:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13301:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12789:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "12800:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12808:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12816:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12824:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12832:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12843:4:1",
														"type": ""
													}
												],
												"src": "12521:827:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13433:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13479:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13488:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13491:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13481:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13481:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13481:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13454:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13463:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13450:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13475:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13446:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13446:32:1"
															},
															"nodeType": "YulIf",
															"src": "13443:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13504:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13523:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13517:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13517:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13508:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13566:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "13542:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13542:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13542:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13581:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13591:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "13581:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13399:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13410:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13422:6:1",
														"type": ""
													}
												],
												"src": "13353:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13650:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13695:85:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13724:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13730:1:1",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "13709:14:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13709:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13709:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13745:25:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13756:3:1",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13767:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13761:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13761:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "13752:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13752:18:1"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "13745:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "13666:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13666:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13684:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13663:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13663:23:1"
															},
															"nodeType": "YulIf",
															"src": "13660:120:1"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "13642:3:1",
														"type": ""
													}
												],
												"src": "13607:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13838:624:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13878:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "13880:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "13854:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13854:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13872:4:1",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13851:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13851:26:1"
															},
															"nodeType": "YulIf",
															"src": "13848:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13896:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13914:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13908:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13908:9:1"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "13900:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13926:16:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13940:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "13936:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13936:6:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13930:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "13966:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13972:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "13979:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13979:16:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13997:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13975:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13975:25:1"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "13951:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13951:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13951:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14010:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14030:4:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14024:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14024:11:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "14014:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14044:26:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "14054:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14054:16:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "14048:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14079:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14089:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "14083:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14165:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14167:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14125:6:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "14133:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14122:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14122:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14145:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14153:4:1",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14141:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14141:17:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14160:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14138:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14138:25:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14119:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14119:45:1"
															},
															"nodeType": "YulIf",
															"src": "14116:58:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14183:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14198:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14204:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14194:17:1"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "14187:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14220:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "14240:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14234:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14234:10:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14224:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14271:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14273:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14259:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "14267:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14256:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14256:14:1"
															},
															"nodeType": "YulIf",
															"src": "14253:27:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14362:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14364:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "14303:3:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14308:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14299:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14299:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14317:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14295:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14295:27:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "14332:4:1"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "14338:14:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14338:16:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14328:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14328:27:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14357:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14324:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14324:36:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14292:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14292:69:1"
															},
															"nodeType": "YulIf",
															"src": "14289:82:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14400:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14414:6:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14422:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14410:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14410:19:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14431:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14406:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14406:30:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "14380:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14380:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14380:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14446:10:1",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "14453:3:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14446:3:1"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13830:3:1",
														"type": ""
													}
												],
												"src": "13791:671:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14641:242:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14658:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14669:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14651:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14651:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14651:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14692:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14703:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14688:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14688:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14708:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14681:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14681:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14681:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14731:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14742:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14727:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14727:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14747:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to non-ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14720:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14720:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14720:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14802:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14813:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14798:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14798:18:1"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14818:22:1",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14791:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14791:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14791:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14850:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14862:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14873:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14858:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14858:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14850:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14618:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14632:4:1",
														"type": ""
													}
												],
												"src": "14467:416:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15062:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15079:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15090:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15072:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15072:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15072:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15113:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15124:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15109:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15109:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15129:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15102:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15102:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15102:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15152:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15163:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15148:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15148:18:1"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15168:34:1",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15141:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15141:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15141:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15223:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15234:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15219:18:1"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15239:10:1",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15212:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15212:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15212:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15259:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15271:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15282:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15267:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15267:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15259:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15039:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15053:4:1",
														"type": ""
													}
												],
												"src": "14888:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15528:330:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15538:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15556:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15561:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15552:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15552:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15565:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15548:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15548:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15542:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15583:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15598:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15606:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15594:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15594:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15576:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15576:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15576:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15630:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15641:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15626:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15626:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "15650:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15658:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15646:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15646:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15619:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15619:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15619:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15682:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15693:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15678:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15678:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15698:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15671:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15671:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15671:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15725:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15736:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15721:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15721:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15741:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15714:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15714:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15714:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15768:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15779:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15764:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15764:19:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15785:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15757:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15757:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15757:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15798:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "15824:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15836:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15847:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15832:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15832:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "15806:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15806:46:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15798:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15465:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15476:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15484:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15492:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15500:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15508:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15519:4:1",
														"type": ""
													}
												],
												"src": "15297:561:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610084575f3560e01c80634e1273f4116100585780634e1273f414610106578063a22cb46514610126578063e985e9c514610139578063f242432a14610174575f80fd5b8062fdd58e1461008857806301ffc9a7146100ae5780630e89341c146100d15780632eb2c2d6146100f1575b5f80fd5b61009b610096366004610b25565b610187565b6040519081526020015b60405180910390f35b6100c16100bc366004610b65565b61021e565b60405190151581526020016100a5565b6100e46100df366004610b87565b61026d565b6040516100a59190610be1565b6101046100ff366004610d35565b6102ff565b005b610119610114366004610dd8565b61034b565b6040516100a59190610ed6565b610104610134366004610ee8565b610473565b6100c1610147366004610f21565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b610104610182366004610f52565b610482565b5f6001600160a01b0383166101f65760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b505f818152602081815260408083206001600160a01b03861684529091529020545b92915050565b5f6001600160e01b03198216636cdb3d1360e11b148061024e57506001600160e01b031982166303a24d0760e21b145b8061021857506301ffc9a760e01b6001600160e01b0319831614610218565b60606002805461027c90610fb2565b80601f01602080910402602001604051908101604052809291908181526020018280546102a890610fb2565b80156102f35780601f106102ca576101008083540402835291602001916102f3565b820191905f5260205f20905b8154815290600101906020018083116102d657829003601f168201915b50505050509050919050565b6001600160a01b03851633148061031b575061031b8533610147565b6103375760405162461bcd60e51b81526004016101ed90610fea565b61034485858585856104c7565b5050505050565b606081518351146103b05760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101ed565b5f835167ffffffffffffffff8111156103cb576103cb610bf3565b6040519080825280602002602001820160405280156103f4578160200160208202803683370190505b5090505f5b845181101561046b5761043e85828151811061041757610417611038565b602002602001015185838151811061043157610431611038565b6020026020010151610187565b82828151811061045057610450611038565b602090810291909101015261046481611060565b90506103f9565b509392505050565b61047e33838361069f565b5050565b6001600160a01b03851633148061049e575061049e8533610147565b6104ba5760405162461bcd60e51b81526004016101ed90610fea565b610344858585858561077e565b81518351146105295760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101ed565b6001600160a01b03841661054f5760405162461bcd60e51b81526004016101ed90611078565b335f5b8451811015610631575f85828151811061056e5761056e611038565b602002602001015190505f85838151811061058b5761058b611038565b6020908102919091018101515f84815280835260408082206001600160a01b038e1683529093529190912054909150818110156105da5760405162461bcd60e51b81526004016101ed906110bd565b5f838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610616908490611107565b925050819055505050508061062a90611060565b9050610552565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161068192919061111a565b60405180910390a46106978187878787876108a4565b505050505050565b816001600160a01b0316836001600160a01b0316036107125760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101ed565b6001600160a01b038381165f81815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166107a45760405162461bcd60e51b81526004016101ed90611078565b335f6107af85610a07565b90505f6107bb85610a07565b90505f868152602081815260408083206001600160a01b038c168452909152902054858110156107fd5760405162461bcd60e51b81526004016101ed906110bd565b5f878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610839908490611107565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610899848a8a8a8a8a610a50565b505050505050505050565b6001600160a01b0384163b156106975760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906108e89089908990889088908890600401611147565b6020604051808303815f875af1925050508015610922575060408051601f3d908101601f1916820190925261091f918101906111a4565b60015b6109ce5761092e6111bf565b806308c379a00361096757506109426111d8565b8061094d5750610969565b8060405162461bcd60e51b81526004016101ed9190610be1565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101ed565b6001600160e01b0319811663bc197c8160e01b146109fe5760405162461bcd60e51b81526004016101ed90611261565b50505050505050565b6040805160018082528183019092526060915f91906020808301908036833701905050905082815f81518110610a3f57610a3f611038565b602090810291909101015292915050565b6001600160a01b0384163b156106975760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610a9490899089908890889088906004016112a9565b6020604051808303815f875af1925050508015610ace575060408051601f3d908101601f19168201909252610acb918101906111a4565b60015b610ada5761092e6111bf565b6001600160e01b0319811663f23a6e6160e01b146109fe5760405162461bcd60e51b81526004016101ed90611261565b80356001600160a01b0381168114610b20575f80fd5b919050565b5f8060408385031215610b36575f80fd5b610b3f83610b0a565b946020939093013593505050565b6001600160e01b031981168114610b62575f80fd5b50565b5f60208284031215610b75575f80fd5b8135610b8081610b4d565b9392505050565b5f60208284031215610b97575f80fd5b5035919050565b5f81518084525f5b81811015610bc257602081850181015186830182015201610ba6565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f610b806020830184610b9e565b634e487b7160e01b5f52604160045260245ffd5b601f8201601f1916810167ffffffffffffffff81118282101715610c2d57610c2d610bf3565b6040525050565b5f67ffffffffffffffff821115610c4d57610c4d610bf3565b5060051b60200190565b5f82601f830112610c66575f80fd5b81356020610c7382610c34565b604051610c808282610c07565b83815260059390931b8501820192828101915086841115610c9f575f80fd5b8286015b84811015610cba5780358352918301918301610ca3565b509695505050505050565b5f82601f830112610cd4575f80fd5b813567ffffffffffffffff811115610cee57610cee610bf3565b604051610d05601f8301601f191660200182610c07565b818152846020838601011115610d19575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f805f60a08688031215610d49575f80fd5b610d5286610b0a565b9450610d6060208701610b0a565b9350604086013567ffffffffffffffff80821115610d7c575f80fd5b610d8889838a01610c57565b94506060880135915080821115610d9d575f80fd5b610da989838a01610c57565b93506080880135915080821115610dbe575f80fd5b50610dcb88828901610cc5565b9150509295509295909350565b5f8060408385031215610de9575f80fd5b823567ffffffffffffffff80821115610e00575f80fd5b818501915085601f830112610e13575f80fd5b81356020610e2082610c34565b604051610e2d8282610c07565b83815260059390931b8501820192828101915089841115610e4c575f80fd5b948201945b83861015610e7157610e6286610b0a565b82529482019490820190610e51565b96505086013592505080821115610e86575f80fd5b50610e9385828601610c57565b9150509250929050565b5f8151808452602080850194508084015f5b83811015610ecb57815187529582019590820190600101610eaf565b509495945050505050565b602081525f610b806020830184610e9d565b5f8060408385031215610ef9575f80fd5b610f0283610b0a565b915060208301358015158114610f16575f80fd5b809150509250929050565b5f8060408385031215610f32575f80fd5b610f3b83610b0a565b9150610f4960208401610b0a565b90509250929050565b5f805f805f60a08688031215610f66575f80fd5b610f6f86610b0a565b9450610f7d60208701610b0a565b93506040860135925060608601359150608086013567ffffffffffffffff811115610fa6575f80fd5b610dcb88828901610cc5565b600181811c90821680610fc657607f821691505b602082108103610fe457634e487b7160e01b5f52602260045260245ffd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f600182016110715761107161104c565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b808201808211156102185761021861104c565b604081525f61112c6040830185610e9d565b828103602084015261113e8185610e9d565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190525f9061117290830186610e9d565b82810360608401526111848186610e9d565b905082810360808401526111988185610b9e565b98975050505050505050565b5f602082840312156111b4575f80fd5b8151610b8081610b4d565b5f60033d11156111d55760045f803e505f5160e01c5b90565b5f60443d10156111e55790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561121557505050505090565b828501915081518181111561122d5750505050505090565b843d87010160208285010111156112475750505050505090565b61125660208286010187610c07565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190525f906112e290830184610b9e565b97965050505050505056fea2646970667358221220be66432af40924a0b1d6e99a8eaa9c59b8d808d6c07536332543657ba02caf9b64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x84 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x174 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9B PUSH2 0x96 CALLDATASIZE PUSH1 0x4 PUSH2 0xB25 JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA5 JUMP JUMPDEST PUSH2 0xE4 PUSH2 0xDF CALLDATASIZE PUSH1 0x4 PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x26D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0x104 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0xD35 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x119 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE8 JUMP JUMPDEST PUSH2 0x473 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0xF21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0xF52 JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x24E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x218 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x218 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x27C SWAP1 PUSH2 0xFB2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A8 SWAP1 PUSH2 0xFB2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x31B JUMPI POP PUSH2 0x31B DUP6 CALLER PUSH2 0x147 JUMP JUMPDEST PUSH2 0x337 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP1 PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x344 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4C7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1ED JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CB JUMPI PUSH2 0x3CB PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x46B JUMPI PUSH2 0x43E DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x417 JUMPI PUSH2 0x417 PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x431 JUMPI PUSH2 0x431 PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x187 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x464 DUP2 PUSH2 0x1060 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x47E CALLER DUP4 DUP4 PUSH2 0x69F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x49E JUMPI POP PUSH2 0x49E DUP6 CALLER PUSH2 0x147 JUMP JUMPDEST PUSH2 0x4BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP1 PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x344 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x77E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x529 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP1 PUSH2 0x1078 JUMP JUMPDEST CALLER PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x631 JUMPI PUSH0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x56E JUMPI PUSH2 0x56E PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x58B JUMPI PUSH2 0x58B PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x616 SWAP1 DUP5 SWAP1 PUSH2 0x1107 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x62A SWAP1 PUSH2 0x1060 JUMP JUMPDEST SWAP1 POP PUSH2 0x552 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x681 SWAP3 SWAP2 SWAP1 PUSH2 0x111A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x697 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x8A4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP1 PUSH2 0x1078 JUMP JUMPDEST CALLER PUSH0 PUSH2 0x7AF DUP6 PUSH2 0xA07 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x7BB DUP6 PUSH2 0xA07 JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x7FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x839 SWAP1 DUP5 SWAP1 PUSH2 0x1107 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x899 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xA50 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x8E8 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x922 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x91F SWAP2 DUP2 ADD SWAP1 PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9CE JUMPI PUSH2 0x92E PUSH2 0x11BF JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x967 JUMPI POP PUSH2 0x942 PUSH2 0x11D8 JUMP JUMPDEST DUP1 PUSH2 0x94D JUMPI POP PUSH2 0x969 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP1 PUSH2 0x1261 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xA3F JUMPI PUSH2 0xA3F PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xA94 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xACE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xACB SWAP2 DUP2 ADD SWAP1 PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xADA JUMPI PUSH2 0x92E PUSH2 0x11BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ED SWAP1 PUSH2 0x1261 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB20 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB36 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3F DUP4 PUSH2 0xB0A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB62 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB75 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB80 DUP2 PUSH2 0xB4D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB97 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBA6 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xB80 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB9E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC2D JUMPI PUSH2 0xC2D PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4D PUSH2 0xBF3 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC66 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xC73 DUP3 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC80 DUP3 DUP3 PUSH2 0xC07 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xC9F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCBA JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xCA3 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCEE JUMPI PUSH2 0xCEE PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD05 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xC07 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD19 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD49 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD52 DUP7 PUSH2 0xB0A JUMP JUMPDEST SWAP5 POP PUSH2 0xD60 PUSH1 0x20 DUP8 ADD PUSH2 0xB0A JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD7C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD88 DUP10 DUP4 DUP11 ADD PUSH2 0xC57 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD9D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDA9 DUP10 DUP4 DUP11 ADD PUSH2 0xC57 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDBE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDCB DUP9 DUP3 DUP10 ADD PUSH2 0xCC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDE9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE00 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE13 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE20 DUP3 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2D DUP3 DUP3 PUSH2 0xC07 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xE4C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xE71 JUMPI PUSH2 0xE62 DUP7 PUSH2 0xB0A JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xE51 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xE86 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE93 DUP6 DUP3 DUP7 ADD PUSH2 0xC57 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xECB JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xEAF JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xB80 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE9D JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF02 DUP4 PUSH2 0xB0A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF16 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF32 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF3B DUP4 PUSH2 0xB0A JUMP JUMPDEST SWAP2 POP PUSH2 0xF49 PUSH1 0x20 DUP5 ADD PUSH2 0xB0A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF66 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF6F DUP7 PUSH2 0xB0A JUMP JUMPDEST SWAP5 POP PUSH2 0xF7D PUSH1 0x20 DUP8 ADD PUSH2 0xB0A JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDCB DUP9 DUP3 DUP10 ADD PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFC6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFE4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1071 JUMPI PUSH2 0x1071 PUSH2 0x104C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x218 JUMPI PUSH2 0x218 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x112C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xE9D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x113E DUP2 DUP6 PUSH2 0xE9D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1172 SWAP1 DUP4 ADD DUP7 PUSH2 0xE9D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1184 DUP2 DUP7 PUSH2 0xE9D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1198 DUP2 DUP6 PUSH2 0xB9E JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB80 DUP2 PUSH2 0xB4D JUMP JUMPDEST PUSH0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x11D5 JUMPI PUSH1 0x4 PUSH0 DUP1 RETURNDATACOPY POP PUSH0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x11E5 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1215 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x122D JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1247 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1256 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xC07 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x12E2 SWAP1 DUP4 ADD DUP5 PUSH2 0xB9E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH7 0x432AF40924A0B1 0xD6 0xE9 SWAP11 DUP15 0xAA SWAP13 MSIZE 0xB8 0xD8 ADDMOD 0xD6 0xC0 PUSH22 0x36332543657BA02CAF9B64736F6C6343000814003300 ",
							"sourceMap": "22336:16539:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23951:227;;;;;;:::i;:::-;;:::i;:::-;;;597:25:1;;;585:2;570:18;23951:227:0;;;;;;;;23002:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:1;;1177:22;1159:41;;1147:2;1132:18;23002:305:0;1019:187:1;23706:103:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;25808:426::-;;;;;;:::i;:::-;;:::i;:::-;;24335:486;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;24889:153::-;;;;;;:::i;:::-;;:::i;25109:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;25231:27:0;;;25208:4;25231:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;25109:166;25342:394;;;;;;:::i;:::-;;:::i;23951:227::-;24037:7;-1:-1:-1;;;;;24064:21:0;;24056:76;;;;-1:-1:-1;;;24056:76:0;;8209:2:1;24056:76:0;;;8191:21:1;8248:2;8228:18;;;8221:30;8287:34;8267:18;;;8260:62;-1:-1:-1;;;8338:18:1;;;8331:40;8388:19;;24056:76:0;;;;;;;;;-1:-1:-1;24149:9:0;:13;;;;;;;;;;;-1:-1:-1;;;;;24149:22:0;;;;;;;;;;23951:227;;;;;:::o;23002:305::-;23104:4;-1:-1:-1;;;;;;23139:41:0;;-1:-1:-1;;;23139:41:0;;:109;;-1:-1:-1;;;;;;;23196:52:0;;-1:-1:-1;;;23196:52:0;23139:109;:161;;;-1:-1:-1;;;;;;;;;;14697:40:0;;;23264:36;14589:155;23706:103;23766:13;23798:4;23791:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23706:103;;;:::o;25808:426::-;-1:-1:-1;;;;;26033:20:0;;741:10;26033:20;;:60;;-1:-1:-1;26057:36:0;26074:4;741:10;25109:166;:::i;26057:36::-;26012:153;;;;-1:-1:-1;;;26012:153:0;;;;;;;:::i;:::-;26175:52;26198:4;26204:2;26208:3;26213:7;26222:4;26175:22;:52::i;:::-;25808:426;;;;;:::o;24335:486::-;24468:16;24523:3;:10;24504:8;:15;:29;24496:83;;;;-1:-1:-1;;;24496:83:0;;9420:2:1;24496:83:0;;;9402:21:1;9459:2;9439:18;;;9432:30;9498:34;9478:18;;;9471:62;-1:-1:-1;;;9549:18:1;;;9542:39;9598:19;;24496:83:0;9218:405:1;24496:83:0;24590:30;24637:8;:15;24623:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24623:30:0;;24590:63;;24669:9;24664:120;24688:8;:15;24684:1;:19;24664:120;;;24743:30;24753:8;24762:1;24753:11;;;;;;;;:::i;:::-;;;;;;;24766:3;24770:1;24766:6;;;;;;;;:::i;:::-;;;;;;;24743:9;:30::i;:::-;24724:13;24738:1;24724:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;24705:3;;;:::i;:::-;;;24664:120;;;-1:-1:-1;24801:13:0;24335:486;-1:-1:-1;;;24335:486:0:o;24889:153::-;24983:52;741:10;25016:8;25026;24983:18;:52::i;:::-;24889:153;;:::o;25342:394::-;-1:-1:-1;;;;;25542:20:0;;741:10;25542:20;;:60;;-1:-1:-1;25566:36:0;25583:4;741:10;25109:166;:::i;25566:36::-;25521:153;;;;-1:-1:-1;;;25521:153:0;;;;;;;:::i;:::-;25684:45;25702:4;25708:2;25712;25716:6;25724:4;25684:17;:45::i;27977:1115::-;28197:7;:14;28183:3;:10;:28;28175:81;;;;-1:-1:-1;;;28175:81:0;;10234:2:1;28175:81:0;;;10216:21:1;10273:2;10253:18;;;10246:30;10312:34;10292:18;;;10285:62;-1:-1:-1;;;10363:18:1;;;10356:38;10411:19;;28175:81:0;10032:404:1;28175:81:0;-1:-1:-1;;;;;28274:16:0;;28266:66;;;;-1:-1:-1;;;28266:66:0;;;;;;;:::i;:::-;741:10;28343:16;28456:411;28480:3;:10;28476:1;:14;28456:411;;;28511:10;28524:3;28528:1;28524:6;;;;;;;;:::i;:::-;;;;;;;28511:19;;28544:14;28561:7;28569:1;28561:10;;;;;;;;:::i;:::-;;;;;;;;;;;;28586:19;28608:13;;;;;;;;;;-1:-1:-1;;;;;28608:19:0;;;;;;;;;;;;28561:10;;-1:-1:-1;28649:21:0;;;;28641:76;;;;-1:-1:-1;;;28641:76:0;;;;;;;:::i;:::-;28759:9;:13;;;;;;;;;;;-1:-1:-1;;;;;28759:19:0;;;;;;;;;;28781:20;;;28759:42;;28829:17;;;;;;;:27;;28781:20;;28759:9;28829:27;;28781:20;;28829:27;:::i;:::-;;;;;;;;28497:370;;;28492:3;;;;:::i;:::-;;;28456:411;;;;28912:2;-1:-1:-1;;;;;28882:47:0;28906:4;-1:-1:-1;;;;;28882:47:0;28896:8;-1:-1:-1;;;;;28882:47:0;;28916:3;28921:7;28882:47;;;;;;;:::i;:::-;;;;;;;;29010:75;29046:8;29056:4;29062:2;29066:3;29071:7;29080:4;29010:35;:75::i;:::-;28165:927;27977:1115;;;;;:::o;34556:293::-;34676:8;-1:-1:-1;;;;;34667:17:0;:5;-1:-1:-1;;;;;34667:17:0;;34659:71;;;;-1:-1:-1;;;34659:71:0;;12060:2:1;34659:71:0;;;12042:21:1;12099:2;12079:18;;;12072:30;12138:34;12118:18;;;12111:62;-1:-1:-1;;;12189:18:1;;;12182:39;12238:19;;34659:71:0;11858:405:1;34659:71:0;-1:-1:-1;;;;;34740:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;34740:46:0;;;;;;;;;;34801:41;;1159::1;;;34801::0;;1132:18:1;34801:41:0;;;;;;;34556:293;;;:::o;26684:947::-;-1:-1:-1;;;;;26865:16:0;;26857:66;;;;-1:-1:-1;;;26857:66:0;;;;;;;:::i;:::-;741:10;26934:16;26998:21;27016:2;26998:17;:21::i;:::-;26975:44;;27029:24;27056:25;27074:6;27056:17;:25::i;:::-;27029:52;;27163:19;27185:13;;;;;;;;;;;-1:-1:-1;;;;;27185:19:0;;;;;;;;;;27222:21;;;;27214:76;;;;-1:-1:-1;;;27214:76:0;;;;;;;:::i;:::-;27324:9;:13;;;;;;;;;;;-1:-1:-1;;;;;27324:19:0;;;;;;;;;;27346:20;;;27324:42;;27386:17;;;;;;;:27;;27346:20;;27324:9;27386:27;;27346:20;;27386:27;:::i;:::-;;;;-1:-1:-1;;27429:46:0;;;12442:25:1;;;12498:2;12483:18;;12476:34;;;-1:-1:-1;;;;;27429:46:0;;;;;;;;;;;;;;12415:18:1;27429:46:0;;;;;;;27556:68;27587:8;27597:4;27603:2;27607;27611:6;27619:4;27556:30;:68::i;:::-;26847:784;;;;26684:947;;;;;:::o;37882:792::-;-1:-1:-1;;;;;38114:13:0;;5198:19;:23;38110:558;;38149:79;;-1:-1:-1;;;38149:79:0;;-1:-1:-1;;;;;38149:43:0;;;;;:79;;38193:8;;38203:4;;38209:3;;38214:7;;38223:4;;38149:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38149:79:0;;;;;;;;-1:-1:-1;;38149:79:0;;;;;;;;;;;;:::i;:::-;;;38145:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;38534:6;38527:14;;-1:-1:-1;;;38527:14:0;;;;;;;;:::i;38145:513::-;;;38581:62;;-1:-1:-1;;;38581:62:0;;14669:2:1;38581:62:0;;;14651:21:1;14708:2;14688:18;;;14681:30;14747:34;14727:18;;;14720:62;-1:-1:-1;;;14798:18:1;;;14791:50;14858:19;;38581:62:0;14467:416:1;38145:513:0;-1:-1:-1;;;;;;38307:60:0;;-1:-1:-1;;;38307:60:0;38303:157;;38391:50;;-1:-1:-1;;;38391:50:0;;;;;;;:::i;38303:157::-;38229:245;37882:792;;;;;;:::o;38680:193::-;38799:16;;;38813:1;38799:16;;;;;;;;;38746;;38774:22;;38799:16;;;;;;;;;;;;-1:-1:-1;38799:16:0;38774:41;;38836:7;38825:5;38831:1;38825:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;38861:5;38680:193;-1:-1:-1;;38680:193:0:o;37151:725::-;-1:-1:-1;;;;;37358:13:0;;5198:19;:23;37354:516;;37393:72;;-1:-1:-1;;;37393:72:0;;-1:-1:-1;;;;;37393:38:0;;;;;:72;;37432:8;;37442:4;;37448:2;;37452:6;;37460:4;;37393:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;37393:72:0;;;;;;;;-1:-1:-1;;37393:72:0;;;;;;;;;;;;:::i;:::-;;;37389:471;;;;:::i;:::-;-1:-1:-1;;;;;;37514:55:0;;-1:-1:-1;;;37514:55:0;37510:152;;37593:50;;-1:-1:-1;;;37593:50:0;;;;;;;:::i;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:1:o;633:131::-;-1:-1:-1;;;;;;707:32:1;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:1:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:1;;1211:180;-1:-1:-1;1211:180:1:o;1396:423::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1542:3;1745:1;1738:4;1729:6;1724:3;1720:16;1716:27;1709:38;1808:4;1801:2;1797:7;1792:2;1784:6;1780:15;1776:29;1771:3;1767:39;1763:50;1756:57;;;1396:423;;;;:::o;1824:220::-;1973:2;1962:9;1955:21;1936:4;1993:45;2034:2;2023:9;2019:18;2011:6;1993:45;:::i;2049:127::-;2110:10;2105:3;2101:20;2098:1;2091:31;2141:4;2138:1;2131:15;2165:4;2162:1;2155:15;2181:249;2291:2;2272:13;;-1:-1:-1;;2268:27:1;2256:40;;2326:18;2311:34;;2347:22;;;2308:62;2305:88;;;2373:18;;:::i;:::-;2409:2;2402:22;-1:-1:-1;;2181:249:1:o;2435:183::-;2495:4;2528:18;2520:6;2517:30;2514:56;;;2550:18;;:::i;:::-;-1:-1:-1;2595:1:1;2591:14;2607:4;2587:25;;2435:183::o;2623:724::-;2677:5;2730:3;2723:4;2715:6;2711:17;2707:27;2697:55;;2748:1;2745;2738:12;2697:55;2784:6;2771:20;2810:4;2833:43;2873:2;2833:43;:::i;:::-;2905:2;2899:9;2917:31;2945:2;2937:6;2917:31;:::i;:::-;2983:18;;;3075:1;3071:10;;;;3059:23;;3055:32;;;3017:15;;;;-1:-1:-1;3099:15:1;;;3096:35;;;3127:1;3124;3117:12;3096:35;3163:2;3155:6;3151:15;3175:142;3191:6;3186:3;3183:15;3175:142;;;3257:17;;3245:30;;3295:12;;;;3208;;3175:142;;;-1:-1:-1;3335:6:1;2623:724;-1:-1:-1;;;;;;2623:724:1:o;3352:555::-;3394:5;3447:3;3440:4;3432:6;3428:17;3424:27;3414:55;;3465:1;3462;3455:12;3414:55;3501:6;3488:20;3527:18;3523:2;3520:26;3517:52;;;3549:18;;:::i;:::-;3598:2;3592:9;3610:67;3665:2;3646:13;;-1:-1:-1;;3642:27:1;3671:4;3638:38;3592:9;3610:67;:::i;:::-;3701:2;3693:6;3686:18;3747:3;3740:4;3735:2;3727:6;3723:15;3719:26;3716:35;3713:55;;;3764:1;3761;3754:12;3713:55;3828:2;3821:4;3813:6;3809:17;3802:4;3794:6;3790:17;3777:54;3875:1;3851:15;;;3868:4;3847:26;3840:37;;;;3855:6;3352:555;-1:-1:-1;;;3352:555:1:o;3912:943::-;4066:6;4074;4082;4090;4098;4151:3;4139:9;4130:7;4126:23;4122:33;4119:53;;;4168:1;4165;4158:12;4119:53;4191:29;4210:9;4191:29;:::i;:::-;4181:39;;4239:38;4273:2;4262:9;4258:18;4239:38;:::i;:::-;4229:48;;4328:2;4317:9;4313:18;4300:32;4351:18;4392:2;4384:6;4381:14;4378:34;;;4408:1;4405;4398:12;4378:34;4431:61;4484:7;4475:6;4464:9;4460:22;4431:61;:::i;:::-;4421:71;;4545:2;4534:9;4530:18;4517:32;4501:48;;4574:2;4564:8;4561:16;4558:36;;;4590:1;4587;4580:12;4558:36;4613:63;4668:7;4657:8;4646:9;4642:24;4613:63;:::i;:::-;4603:73;;4729:3;4718:9;4714:19;4701:33;4685:49;;4759:2;4749:8;4746:16;4743:36;;;4775:1;4772;4765:12;4743:36;;4798:51;4841:7;4830:8;4819:9;4815:24;4798:51;:::i;:::-;4788:61;;;3912:943;;;;;;;;:::o;4860:1208::-;4978:6;4986;5039:2;5027:9;5018:7;5014:23;5010:32;5007:52;;;5055:1;5052;5045:12;5007:52;5095:9;5082:23;5124:18;5165:2;5157:6;5154:14;5151:34;;;5181:1;5178;5171:12;5151:34;5219:6;5208:9;5204:22;5194:32;;5264:7;5257:4;5253:2;5249:13;5245:27;5235:55;;5286:1;5283;5276:12;5235:55;5322:2;5309:16;5344:4;5367:43;5407:2;5367:43;:::i;:::-;5439:2;5433:9;5451:31;5479:2;5471:6;5451:31;:::i;:::-;5517:18;;;5605:1;5601:10;;;;5593:19;;5589:28;;;5551:15;;;;-1:-1:-1;5629:19:1;;;5626:39;;;5661:1;5658;5651:12;5626:39;5685:11;;;;5705:148;5721:6;5716:3;5713:15;5705:148;;;5787:23;5806:3;5787:23;:::i;:::-;5775:36;;5738:12;;;;5831;;;;5705:148;;;5872:6;-1:-1:-1;;5916:18:1;;5903:32;;-1:-1:-1;;5947:16:1;;;5944:36;;;5976:1;5973;5966:12;5944:36;;5999:63;6054:7;6043:8;6032:9;6028:24;5999:63;:::i;:::-;5989:73;;;4860:1208;;;;;:::o;6073:435::-;6126:3;6164:5;6158:12;6191:6;6186:3;6179:19;6217:4;6246:2;6241:3;6237:12;6230:19;;6283:2;6276:5;6272:14;6304:1;6314:169;6328:6;6325:1;6322:13;6314:169;;;6389:13;;6377:26;;6423:12;;;;6458:15;;;;6350:1;6343:9;6314:169;;;-1:-1:-1;6499:3:1;;6073:435;-1:-1:-1;;;;;6073:435:1:o;6513:261::-;6692:2;6681:9;6674:21;6655:4;6712:56;6764:2;6753:9;6749:18;6741:6;6712:56;:::i;6779:347::-;6844:6;6852;6905:2;6893:9;6884:7;6880:23;6876:32;6873:52;;;6921:1;6918;6911:12;6873:52;6944:29;6963:9;6944:29;:::i;:::-;6934:39;;7023:2;7012:9;7008:18;6995:32;7070:5;7063:13;7056:21;7049:5;7046:32;7036:60;;7092:1;7089;7082:12;7036:60;7115:5;7105:15;;;6779:347;;;;;:::o;7131:260::-;7199:6;7207;7260:2;7248:9;7239:7;7235:23;7231:32;7228:52;;;7276:1;7273;7266:12;7228:52;7299:29;7318:9;7299:29;:::i;:::-;7289:39;;7347:38;7381:2;7370:9;7366:18;7347:38;:::i;:::-;7337:48;;7131:260;;;;;:::o;7396:606::-;7500:6;7508;7516;7524;7532;7585:3;7573:9;7564:7;7560:23;7556:33;7553:53;;;7602:1;7599;7592:12;7553:53;7625:29;7644:9;7625:29;:::i;:::-;7615:39;;7673:38;7707:2;7696:9;7692:18;7673:38;:::i;:::-;7663:48;;7758:2;7747:9;7743:18;7730:32;7720:42;;7809:2;7798:9;7794:18;7781:32;7771:42;;7864:3;7853:9;7849:19;7836:33;7892:18;7884:6;7881:30;7878:50;;;7924:1;7921;7914:12;7878:50;7947:49;7988:7;7979:6;7968:9;7964:22;7947:49;:::i;8418:380::-;8497:1;8493:12;;;;8540;;;8561:61;;8615:4;8607:6;8603:17;8593:27;;8561:61;8668:2;8660:6;8657:14;8637:18;8634:38;8631:161;;8714:10;8709:3;8705:20;8702:1;8695:31;8749:4;8746:1;8739:15;8777:4;8774:1;8767:15;8631:161;;8418:380;;;:::o;8803:410::-;9005:2;8987:21;;;9044:2;9024:18;;;9017:30;9083:34;9078:2;9063:18;;9056:62;-1:-1:-1;;;9149:2:1;9134:18;;9127:44;9203:3;9188:19;;8803:410::o;9628:127::-;9689:10;9684:3;9680:20;9677:1;9670:31;9720:4;9717:1;9710:15;9744:4;9741:1;9734:15;9760:127;9821:10;9816:3;9812:20;9809:1;9802:31;9852:4;9849:1;9842:15;9876:4;9873:1;9866:15;9892:135;9931:3;9952:17;;;9949:43;;9972:18;;:::i;:::-;-1:-1:-1;10019:1:1;10008:13;;9892:135::o;10441:401::-;10643:2;10625:21;;;10682:2;10662:18;;;10655:30;10721:34;10716:2;10701:18;;10694:62;-1:-1:-1;;;10787:2:1;10772:18;;10765:35;10832:3;10817:19;;10441:401::o;10847:406::-;11049:2;11031:21;;;11088:2;11068:18;;;11061:30;11127:34;11122:2;11107:18;;11100:62;-1:-1:-1;;;11193:2:1;11178:18;;11171:40;11243:3;11228:19;;10847:406::o;11258:125::-;11323:9;;;11344:10;;;11341:36;;;11357:18;;:::i;11388:465::-;11645:2;11634:9;11627:21;11608:4;11671:56;11723:2;11712:9;11708:18;11700:6;11671:56;:::i;:::-;11775:9;11767:6;11763:22;11758:2;11747:9;11743:18;11736:50;11803:44;11840:6;11832;11803:44;:::i;:::-;11795:52;11388:465;-1:-1:-1;;;;;11388:465:1:o;12521:827::-;-1:-1:-1;;;;;12918:15:1;;;12900:34;;12970:15;;12965:2;12950:18;;12943:43;12880:3;13017:2;13002:18;;12995:31;;;12843:4;;13049:57;;13086:19;;13078:6;13049:57;:::i;:::-;13154:9;13146:6;13142:22;13137:2;13126:9;13122:18;13115:50;13188:44;13225:6;13217;13188:44;:::i;:::-;13174:58;;13281:9;13273:6;13269:22;13263:3;13252:9;13248:19;13241:51;13309:33;13335:6;13327;13309:33;:::i;:::-;13301:41;12521:827;-1:-1:-1;;;;;;;;12521:827:1:o;13353:249::-;13422:6;13475:2;13463:9;13454:7;13450:23;13446:32;13443:52;;;13491:1;13488;13481:12;13443:52;13523:9;13517:16;13542:30;13566:5;13542:30;:::i;13607:179::-;13642:3;13684:1;13666:16;13663:23;13660:120;;;13730:1;13727;13724;13709:23;-1:-1:-1;13767:1:1;13761:8;13756:3;13752:18;13660:120;13607:179;:::o;13791:671::-;13830:3;13872:4;13854:16;13851:26;13848:39;;;13791:671;:::o;13848:39::-;13914:2;13908:9;-1:-1:-1;;13979:16:1;13975:25;;13972:1;13908:9;13951:50;14030:4;14024:11;14054:16;14089:18;14160:2;14153:4;14145:6;14141:17;14138:25;14133:2;14125:6;14122:14;14119:45;14116:58;;;14167:5;;;;;13791:671;:::o;14116:58::-;14204:6;14198:4;14194:17;14183:28;;14240:3;14234:10;14267:2;14259:6;14256:14;14253:27;;;14273:5;;;;;;13791:671;:::o;14253:27::-;14357:2;14338:16;14332:4;14328:27;14324:36;14317:4;14308:6;14303:3;14299:16;14295:27;14292:69;14289:82;;;14364:5;;;;;;13791:671;:::o;14289:82::-;14380:57;14431:4;14422:6;14414;14410:19;14406:30;14400:4;14380:57;:::i;:::-;-1:-1:-1;14453:3:1;;13791:671;-1:-1:-1;;;;;13791:671:1:o;14888:404::-;15090:2;15072:21;;;15129:2;15109:18;;;15102:30;15168:34;15163:2;15148:18;;15141:62;-1:-1:-1;;;15234:2:1;15219:18;;15212:38;15282:3;15267:19;;14888:404::o;15297:561::-;-1:-1:-1;;;;;15594:15:1;;;15576:34;;15646:15;;15641:2;15626:18;;15619:43;15693:2;15678:18;;15671:34;;;15736:2;15721:18;;15714:34;;;15556:3;15779;15764:19;;15757:32;;;15519:4;;15806:46;;15832:19;;15824:6;15806:46;:::i;:::-;15798:54;15297:561;-1:-1:-1;;;;;;;15297:561:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "979800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2673",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26702",
								"supportsInterface(bytes4)": "552",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22336,
									"end": 38875,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22336,
									"end": 38875,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22336,
									"end": 38875,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 22873,
									"end": 22935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22915,
									"end": 22928,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 22923,
									"end": 22927,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22915,
									"end": 22922,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 22915,
									"end": 22928,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22915,
									"end": 22928,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 22915,
									"end": 22928,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22873,
									"end": 22935,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22336,
									"end": 38875,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 22336,
									"end": 38875,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29915,
									"end": 30001,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 29915,
									"end": 30001,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29981,
									"end": 29985,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 29981,
									"end": 29994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 29988,
									"end": 29994,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29981,
									"end": 29985,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29981,
									"end": 29994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 29981,
									"end": 29994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29981,
									"end": 29994,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 29981,
									"end": 29994,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29981,
									"end": 29994,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29915,
									"end": 30001,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29915,
									"end": 30001,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 259,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 302,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 288,
									"end": 297,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 279,
									"end": 286,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 275,
									"end": 298,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 271,
									"end": 303,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 268,
									"end": 320,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 268,
									"end": 320,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 314,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 306,
									"end": 318,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 268,
									"end": 320,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 343,
									"end": 359,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 343,
									"end": 359,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 405,
									"end": 439,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 405,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 433,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 425,
									"end": 437,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 405,
									"end": 439,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 448,
									"end": 480,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 448,
									"end": 480,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 518,
									"end": 525,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 511,
									"end": 515,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 507,
									"end": 509,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 503,
									"end": 516,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 499,
									"end": 526,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 489,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 540,
									"end": 541,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 538,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 530,
									"end": 542,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 489,
									"end": 544,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 569,
									"end": 571,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 563,
									"end": 572,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 591,
									"end": 593,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 587,
									"end": 589,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 584,
									"end": 594,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 581,
									"end": 617,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 581,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 581,
									"end": 617,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 597,
									"end": 615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 597,
									"end": 615,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 675,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 726,
									"end": 739,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 726,
									"end": 739,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 746,
									"end": 748,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 714,
									"end": 754,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 702,
									"end": 755,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 702,
									"end": 755,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 702,
									"end": 755,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 790,
									"end": 812,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 767,
									"end": 813,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 764,
									"end": 836,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 764,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 764,
									"end": 836,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 816,
									"end": 834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 816,
									"end": 834,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 856,
									"end": 866,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 852,
									"end": 854,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 845,
									"end": 867,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 891,
									"end": 893,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 883,
									"end": 889,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 876,
									"end": 894,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 931,
									"end": 938,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 926,
									"end": 928,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 921,
									"end": 923,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 917,
									"end": 919,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 913,
									"end": 924,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 909,
									"end": 929,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 906,
									"end": 939,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 903,
									"end": 956,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 903,
									"end": 956,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 952,
									"end": 953,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 950,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 942,
									"end": 954,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 903,
									"end": 956,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 974,
									"end": 975,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 975,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 965,
									"end": 975,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 995,
									"end": 996,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1076,
									"end": 1102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1044,
									"end": 1103,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1147,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1137,
									"end": 1143,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1133,
									"end": 1148,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1129,
									"end": 1153,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1157,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1182,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1573,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1193,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1273,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1268,
									"end": 1280,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1268,
									"end": 1280,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1268,
									"end": 1280,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1268,
									"end": 1280,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1327,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1327,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1327,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1336,
									"end": 1397,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1336,
									"end": 1397,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1394,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1382,
									"end": 1388,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 1395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1395,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1395,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1336,
									"end": 1397,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1336,
									"end": 1397,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1443,
									"end": 1445,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1435,
									"end": 1441,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1432,
									"end": 1446,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1412,
									"end": 1430,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1409,
									"end": 1447,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1406,
									"end": 1567,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1406,
									"end": 1567,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1489,
									"end": 1499,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1484,
									"end": 1487,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1480,
									"end": 1500,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1478,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1470,
									"end": 1501,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1528,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1521,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1514,
									"end": 1529,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1556,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1549,
									"end": 1550,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1542,
									"end": 1557,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1406,
									"end": 1567,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1406,
									"end": 1567,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1406,
									"end": 1567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1573,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1573,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1573,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1704,
									"end": 2249,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1704,
									"end": 2249,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1808,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1801,
									"end": 1804,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1798,
									"end": 1809,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1795,
									"end": 2243,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1795,
									"end": 2243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1795,
									"end": 2243,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1867,
									"end": 1872,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1863,
									"end": 1865,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1856,
									"end": 1873,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1912,
									"end": 1916,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1908,
									"end": 1910,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 1917,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1982,
									"end": 1984,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1970,
									"end": 1980,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 1985,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 1964,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1959,
									"end": 1986,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1953,
									"end": 1957,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1949,
									"end": 1987,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2018,
									"end": 2022,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2006,
									"end": 2016,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2003,
									"end": 2023,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2000,
									"end": 2047,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2000,
									"end": 2047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2000,
									"end": 2047,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2041,
									"end": 2045,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2000,
									"end": 2047,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2000,
									"end": 2047,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2096,
									"end": 2098,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2091,
									"end": 2094,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2087,
									"end": 2099,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2084,
									"end": 2085,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2080,
									"end": 2100,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2074,
									"end": 2078,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2070,
									"end": 2101,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2060,
									"end": 2101,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2060,
									"end": 2101,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2169,
									"end": 2171,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2162,
									"end": 2167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2172,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2214,
									"end": 2231,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2214,
									"end": 2231,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2214,
									"end": 2231,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2195,
									"end": 2196,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2184,
									"end": 2197,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1795,
									"end": 2243,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1795,
									"end": 2243,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1704,
									"end": 2249,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1704,
									"end": 2249,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1704,
									"end": 2249,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1704,
									"end": 2249,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 3777,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2425,
									"end": 3777,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2545,
									"end": 2555,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2545,
									"end": 2555,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2567,
									"end": 2597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2567,
									"end": 2597,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2564,
									"end": 2620,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2564,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2564,
									"end": 2620,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2600,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2600,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2600,
									"end": 2618,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2600,
									"end": 2618,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2600,
									"end": 2618,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2629,
									"end": 2726,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2719,
									"end": 2725,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2717,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2711,
									"end": 2715,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2717,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2679,
									"end": 2717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2717,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2679,
									"end": 2717,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2673,
									"end": 2677,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2629,
									"end": 2726,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2629,
									"end": 2726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2629,
									"end": 2726,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2629,
									"end": 2726,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2781,
									"end": 2785,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2781,
									"end": 2785,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2845,
									"end": 2847,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2834,
									"end": 2848,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2834,
									"end": 2848,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2862,
									"end": 2863,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3564,
									"end": 3565,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3581,
									"end": 3587,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3578,
									"end": 3667,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3578,
									"end": 3667,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3578,
									"end": 3667,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3633,
									"end": 3652,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3633,
									"end": 3652,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3633,
									"end": 3652,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3627,
									"end": 3653,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3578,
									"end": 3667,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3578,
									"end": 3667,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2382,
									"end": 2383,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2378,
									"end": 2389,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2389,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2389,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2374,
									"end": 2398,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2370,
									"end": 2399,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2400,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2406,
									"end": 2407,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2402,
									"end": 2413,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2402,
									"end": 2413,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2402,
									"end": 2413,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2357,
									"end": 2414,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3680,
									"end": 3761,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3680,
									"end": 3761,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2827,
									"end": 3771,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2827,
									"end": 3771,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1652,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1644,
									"end": 1658,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1644,
									"end": 1658,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1644,
									"end": 1658,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1692,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1675,
									"end": 1693,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1675,
									"end": 1693,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2893,
									"end": 2913,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2893,
									"end": 2913,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2893,
									"end": 2913,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3025,
									"end": 3032,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3114,
									"end": 3133,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3114,
									"end": 3133,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3114,
									"end": 3133,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3108,
									"end": 3134,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3093,
									"end": 3135,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3093,
									"end": 3135,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3206,
									"end": 3233,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3206,
									"end": 3233,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3206,
									"end": 3233,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3206,
									"end": 3233,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3174,
									"end": 3175,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3162,
									"end": 3176,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3176,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3176,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3176,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3041,
									"end": 3060,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3041,
									"end": 3060,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3015,
									"end": 3018,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3275,
									"end": 3281,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3266,
									"end": 3273,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3263,
									"end": 3282,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3260,
									"end": 3461,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3260,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3260,
									"end": 3461,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3355,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3355,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3355,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3330,
									"end": 3356,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3419,
									"end": 3420,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3415,
									"end": 3429,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3415,
									"end": 3429,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3415,
									"end": 3429,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3431,
									"end": 3434,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3411,
									"end": 3435,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3407,
									"end": 3444,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3403,
									"end": 3445,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3388,
									"end": 3446,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3373,
									"end": 3447,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3373,
									"end": 3447,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3260,
									"end": 3461,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3260,
									"end": 3461,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3507,
									"end": 3508,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3491,
									"end": 3505,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3491,
									"end": 3505,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3491,
									"end": 3505,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3487,
									"end": 3509,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3474,
									"end": 3510,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3474,
									"end": 3510,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2425,
									"end": 3777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 3777,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2425,
									"end": 3777,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 22336,
									"end": 38875,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22336,
									"end": 38875,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22336,
									"end": 38875,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22336,
									"end": 38875,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22336,
									"end": 38875,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22336,
									"end": 38875,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22336,
									"end": 38875,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be66432af40924a0b1d6e99a8eaa9c59b8d808d6c07536332543657ba02caf9b64736f6c63430008140033",
									".code": [
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22336,
											"end": 38875,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 23951,
											"end": 24178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23951,
											"end": 24178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23002,
											"end": 23307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 23002,
											"end": 23307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23706,
											"end": 23809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 23706,
											"end": 23809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 23706,
											"end": 23809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25808,
											"end": 26234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25808,
											"end": 26234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 24335,
											"end": 24821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 24335,
											"end": 24821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 24335,
											"end": 24821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 24889,
											"end": 25042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 24889,
											"end": 25042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 25109,
											"end": 25275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25208,
											"end": 25212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25249,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25231,
											"end": 25268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 25342,
											"end": 25736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 25342,
											"end": 25736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24064,
											"end": 24085,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24064,
											"end": 24085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8191,
											"end": 8212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8248,
											"end": 8250,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 8228,
											"end": 8246,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8228,
											"end": 8246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8221,
											"end": 8251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2061646472657373207A65726F206973206E6F7420612076"
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8331,
											"end": 8371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8388,
											"end": 8407,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8388,
											"end": 8407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 24056,
											"end": 24132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24149,
											"end": 24158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24162,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23951,
											"end": 24178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 23002,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23104,
											"end": 23108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23139,
											"end": 23180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23139,
											"end": 23180,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 23139,
											"end": 23248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23196,
											"end": 23248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23196,
											"end": 23248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23196,
											"end": 23248,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23248,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 23139,
											"end": 23248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23139,
											"end": 23300,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14697,
											"end": 14737,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14697,
											"end": 14737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14697,
											"end": 14737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23264,
											"end": 23300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14589,
											"end": 14744,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23766,
											"end": 23779,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23798,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23791,
											"end": 23802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23791,
											"end": 23802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23791,
											"end": 23802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23706,
											"end": 23809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26033,
											"end": 26053,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26033,
											"end": 26053,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26033,
											"end": 26053,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26033,
											"end": 26053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26033,
											"end": 26093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 26033,
											"end": 26093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26057,
											"end": 26093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 26074,
											"end": 26078,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 25109,
											"end": 25275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26057,
											"end": 26093,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 26057,
											"end": 26093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 26012,
											"end": 26165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 26012,
											"end": 26165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26175,
											"end": 26227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 26198,
											"end": 26202,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26204,
											"end": 26206,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26208,
											"end": 26211,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26213,
											"end": 26220,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26222,
											"end": 26226,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26175,
											"end": 26197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 26175,
											"end": 26227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26175,
											"end": 26227,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 26175,
											"end": 26227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25808,
											"end": 26234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24468,
											"end": 24484,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24523,
											"end": 24526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24523,
											"end": 24533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24504,
											"end": 24512,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24504,
											"end": 24519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24504,
											"end": 24533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9420,
											"end": 9422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9402,
											"end": 9423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9459,
											"end": 9461,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 9439,
											"end": 9457,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9439,
											"end": 9457,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9439,
											"end": 9457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9498,
											"end": 9532,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 9478,
											"end": 9496,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9478,
											"end": 9496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9471,
											"end": 9533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9549,
											"end": 9567,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9549,
											"end": 9567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9598,
											"end": 9617,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9598,
											"end": 9617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9218,
											"end": 9623,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 24496,
											"end": 24579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24590,
											"end": 24620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24637,
											"end": 24645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24637,
											"end": 24652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 24623,
											"end": 24653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24623,
											"end": 24653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24590,
											"end": 24653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24590,
											"end": 24653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24688,
											"end": 24696,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24688,
											"end": 24703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24684,
											"end": 24703,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24743,
											"end": 24773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 24753,
											"end": 24761,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24762,
											"end": 24763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 24753,
											"end": 24764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24769,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24770,
											"end": 24771,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 24766,
											"end": 24772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24766,
											"end": 24772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24743,
											"end": 24752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24743,
											"end": 24773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24743,
											"end": 24773,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 24743,
											"end": 24773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24737,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24738,
											"end": 24739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 24724,
											"end": 24740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24724,
											"end": 24773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24705,
											"end": 24708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 24705,
											"end": 24708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24705,
											"end": 24708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24705,
											"end": 24708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24705,
											"end": 24708,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 24705,
											"end": 24708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24705,
											"end": 24708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24705,
											"end": 24708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 24664,
											"end": 24784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24801,
											"end": 24814,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24335,
											"end": 24821,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24335,
											"end": 24821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24983,
											"end": 25035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25016,
											"end": 25024,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25026,
											"end": 25034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24983,
											"end": 25001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 24983,
											"end": 25035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24983,
											"end": 25035,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 24983,
											"end": 25035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24889,
											"end": 25042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24889,
											"end": 25042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 25342,
											"end": 25736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25542,
											"end": 25562,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25542,
											"end": 25562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25542,
											"end": 25562,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25542,
											"end": 25562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25542,
											"end": 25602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 25542,
											"end": 25602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25566,
											"end": 25602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 25583,
											"end": 25587,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25109,
											"end": 25275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 25109,
											"end": 25275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 25602,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 25566,
											"end": 25602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 25521,
											"end": 25674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 25521,
											"end": 25674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25684,
											"end": 25729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 25702,
											"end": 25706,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25708,
											"end": 25710,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25712,
											"end": 25714,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25716,
											"end": 25722,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25724,
											"end": 25728,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25684,
											"end": 25701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 25684,
											"end": 25729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 29092,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 27977,
											"end": 29092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28197,
											"end": 28211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28183,
											"end": 28186,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28183,
											"end": 28193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28183,
											"end": 28211,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10234,
											"end": 10236,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10216,
											"end": 10237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10273,
											"end": 10275,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10253,
											"end": 10271,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10253,
											"end": 10271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10253,
											"end": 10271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10246,
											"end": 10276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10346,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 10292,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10292,
											"end": 10310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10292,
											"end": 10310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10285,
											"end": 10347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10356,
											"end": 10394,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10430,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10411,
											"end": 10430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10032,
											"end": 10436,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 28175,
											"end": 28256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28274,
											"end": 28290,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28274,
											"end": 28290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 28266,
											"end": 28332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 28266,
											"end": 28332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28343,
											"end": 28359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28480,
											"end": 28483,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28480,
											"end": 28490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28476,
											"end": 28477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28476,
											"end": 28490,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28511,
											"end": 28521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28524,
											"end": 28527,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28528,
											"end": 28529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28524,
											"end": 28530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 28530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28511,
											"end": 28530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28511,
											"end": 28530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28544,
											"end": 28558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28561,
											"end": 28568,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28561,
											"end": 28571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28586,
											"end": 28605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28621,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28649,
											"end": 28670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28649,
											"end": 28670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28649,
											"end": 28670,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28649,
											"end": 28670,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 28641,
											"end": 28717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 28641,
											"end": 28717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28772,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28778,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 28801,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 28801,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 28801,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28801,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28846,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28846,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 28801,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 28801,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 28801,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28781,
											"end": 28801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 28829,
											"end": 28856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28497,
											"end": 28867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28497,
											"end": 28867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28497,
											"end": 28867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28492,
											"end": 28495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28492,
											"end": 28495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 28492,
											"end": 28495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28492,
											"end": 28495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28492,
											"end": 28495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28492,
											"end": 28495,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 28492,
											"end": 28495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28492,
											"end": 28495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28492,
											"end": 28495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28456,
											"end": 28867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28912,
											"end": 28914,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28906,
											"end": 28910,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28896,
											"end": 28904,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 28916,
											"end": 28919,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28921,
											"end": 28928,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 28882,
											"end": 28929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28882,
											"end": 28929,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 29010,
											"end": 29085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 29046,
											"end": 29054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29056,
											"end": 29060,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29062,
											"end": 29064,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29066,
											"end": 29069,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29071,
											"end": 29078,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29080,
											"end": 29084,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29010,
											"end": 29045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 29010,
											"end": 29085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29010,
											"end": 29085,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 29010,
											"end": 29085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28165,
											"end": 29092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 29092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 29092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 29092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 29092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 29092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 29092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34556,
											"end": 34849,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 34556,
											"end": 34849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34676,
											"end": 34684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34667,
											"end": 34684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34672,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34667,
											"end": 34684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34667,
											"end": 34684,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12060,
											"end": 12062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12099,
											"end": 12101,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 12079,
											"end": 12097,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12079,
											"end": 12097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12079,
											"end": 12097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12072,
											"end": 12102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12138,
											"end": 12172,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 12118,
											"end": 12136,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12118,
											"end": 12136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12118,
											"end": 12136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12111,
											"end": 12173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12189,
											"end": 12207,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12189,
											"end": 12207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12189,
											"end": 12207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12182,
											"end": 12221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12238,
											"end": 12257,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12238,
											"end": 12257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11858,
											"end": 12263,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 34659,
											"end": 34730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34758,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34765,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34775,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34786,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34801,
											"end": 34842,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 34556,
											"end": 34849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34556,
											"end": 34849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34556,
											"end": 34849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34556,
											"end": 34849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26684,
											"end": 27631,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 26684,
											"end": 27631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26865,
											"end": 26881,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26865,
											"end": 26881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 26857,
											"end": 26923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 26857,
											"end": 26923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26934,
											"end": 26950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26998,
											"end": 27019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 27016,
											"end": 27018,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 26998,
											"end": 27019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26998,
											"end": 27019,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 26998,
											"end": 27019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26975,
											"end": 27019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26975,
											"end": 27019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27029,
											"end": 27053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27056,
											"end": 27081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 27074,
											"end": 27080,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27056,
											"end": 27073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 27056,
											"end": 27081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27056,
											"end": 27081,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 27056,
											"end": 27081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27029,
											"end": 27081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27029,
											"end": 27081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27163,
											"end": 27182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27198,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27204,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27222,
											"end": 27243,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27222,
											"end": 27243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27222,
											"end": 27243,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27222,
											"end": 27243,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 27214,
											"end": 27290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 27214,
											"end": 27290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27337,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27343,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27346,
											"end": 27366,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 27346,
											"end": 27366,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27346,
											"end": 27366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27366,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27403,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27403,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27346,
											"end": 27366,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 27346,
											"end": 27366,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27324,
											"end": 27333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27346,
											"end": 27366,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27346,
											"end": 27366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 27386,
											"end": 27413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27386,
											"end": 27413,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12442,
											"end": 12467,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12442,
											"end": 12467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12442,
											"end": 12467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12498,
											"end": 12500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12483,
											"end": 12501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12483,
											"end": 12501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12476,
											"end": 12510,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12476,
											"end": 12510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12476,
											"end": 12510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12415,
											"end": 12433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27429,
											"end": 27475,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 27556,
											"end": 27624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 27587,
											"end": 27595,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27597,
											"end": 27601,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27605,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 27607,
											"end": 27609,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 27611,
											"end": 27617,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 27619,
											"end": 27623,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 27556,
											"end": 27586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 27556,
											"end": 27624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27556,
											"end": 27624,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 27556,
											"end": 27624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26847,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26684,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26684,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26684,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26684,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26684,
											"end": 27631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26684,
											"end": 27631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37882,
											"end": 38674,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 37882,
											"end": 38674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38114,
											"end": 38127,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38114,
											"end": 38127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5217,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 38110,
											"end": 38668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38149,
											"end": 38192,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38192,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 38149,
											"end": 38192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38193,
											"end": 38201,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 38193,
											"end": 38201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38203,
											"end": 38207,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 38203,
											"end": 38207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38209,
											"end": 38212,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 38209,
											"end": 38212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38214,
											"end": 38221,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 38214,
											"end": 38221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38223,
											"end": 38227,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 38223,
											"end": 38227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 38149,
											"end": 38228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 38149,
											"end": 38228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 38149,
											"end": 38228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 38145,
											"end": 38658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 38145,
											"end": 38658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38534,
											"end": 38540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38527,
											"end": 38541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 38527,
											"end": 38541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38581,
											"end": 38643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38581,
											"end": 38643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38581,
											"end": 38643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38581,
											"end": 38643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14671,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38581,
											"end": 38643,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38581,
											"end": 38643,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38581,
											"end": 38643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14708,
											"end": 14710,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 14688,
											"end": 14706,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14688,
											"end": 14706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14688,
											"end": 14706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14681,
											"end": 14711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14747,
											"end": 14781,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2D45524331313535"
										},
										{
											"begin": 14727,
											"end": 14745,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14727,
											"end": 14745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14727,
											"end": 14745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 14782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14798,
											"end": 14816,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14798,
											"end": 14816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14798,
											"end": 14816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14858,
											"end": 14877,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14858,
											"end": 14877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38581,
											"end": 38643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14467,
											"end": 14883,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 38145,
											"end": 38658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 38307,
											"end": 38367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38307,
											"end": 38367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38307,
											"end": 38367,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38303,
											"end": 38460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 38303,
											"end": 38460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38391,
											"end": 38441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 38391,
											"end": 38441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38303,
											"end": 38460,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 38303,
											"end": 38460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38229,
											"end": 38474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37882,
											"end": 38674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37882,
											"end": 38674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37882,
											"end": 38674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37882,
											"end": 38674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37882,
											"end": 38674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37882,
											"end": 38674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37882,
											"end": 38674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38680,
											"end": 38873,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 38680,
											"end": 38873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 38814,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38746,
											"end": 38762,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 38746,
											"end": 38762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38774,
											"end": 38796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38774,
											"end": 38796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38799,
											"end": 38815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38774,
											"end": 38815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38774,
											"end": 38815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38836,
											"end": 38843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38831,
											"end": 38832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 38825,
											"end": 38833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38825,
											"end": 38843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38861,
											"end": 38866,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38680,
											"end": 38873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38680,
											"end": 38873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37151,
											"end": 37876,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 37151,
											"end": 37876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37358,
											"end": 37371,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37358,
											"end": 37371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5217,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37354,
											"end": 37870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 37354,
											"end": 37870,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37393,
											"end": 37431,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37431,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 37393,
											"end": 37431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37432,
											"end": 37440,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 37432,
											"end": 37440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37442,
											"end": 37446,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 37442,
											"end": 37446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37450,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37448,
											"end": 37450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37452,
											"end": 37458,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37452,
											"end": 37458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37464,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37460,
											"end": 37464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 37393,
											"end": 37465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 37393,
											"end": 37465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 37393,
											"end": 37465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37389,
											"end": 37860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 37389,
											"end": 37860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37389,
											"end": 37860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 37389,
											"end": 37860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 37389,
											"end": 37860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37389,
											"end": 37860,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 37389,
											"end": 37860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 37514,
											"end": 37569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37514,
											"end": 37569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37514,
											"end": 37569,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37510,
											"end": 37662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 37510,
											"end": 37662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37593,
											"end": 37643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 37593,
											"end": 37643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 687,
											"end": 758,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 954,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1742,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1727,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1804,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1805,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 1993,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2176,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2049,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2101,
											"end": 2121,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2138,
											"end": 2139,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2430,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2181,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2293,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2272,
											"end": 2285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2268,
											"end": 2295,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2311,
											"end": 2345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2345,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2370,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2373,
											"end": 2391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2411,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2181,
											"end": 2430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2618,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2435,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2546,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2547,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2587,
											"end": 2612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2734,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2750,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2791,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2873,
											"end": 2875,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2833,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2899,
											"end": 2908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2945,
											"end": 2947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2917,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3129,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3197,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3198,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3274,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3275,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3220,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3341,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2623,
											"end": 3347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3432,
											"end": 3438,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3451,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3466,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3467,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3508,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3545,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3523,
											"end": 3525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3546,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3549,
											"end": 3567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3598,
											"end": 3600,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3601,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3665,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3646,
											"end": 3659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3676,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3610,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3750,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3733,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3719,
											"end": 3745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3751,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3761,
											"end": 3762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3825,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3819,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3794,
											"end": 3800,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3831,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3872,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3847,
											"end": 3873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3861,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3352,
											"end": 3907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4151,
											"end": 4154,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4139,
											"end": 4148,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4126,
											"end": 4149,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4155,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4210,
											"end": 4219,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4191,
											"end": 4220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4181,
											"end": 4220,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4181,
											"end": 4220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4273,
											"end": 4275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4262,
											"end": 4271,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4239,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4277,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4330,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4317,
											"end": 4326,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4332,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4369,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4395,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4405,
											"end": 4406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4484,
											"end": 4491,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4481,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4473,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4431,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4492,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4545,
											"end": 4547,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4534,
											"end": 4543,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4549,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4564,
											"end": 4572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4577,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4580,
											"end": 4592,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4668,
											"end": 4675,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4665,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4655,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4613,
											"end": 4676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4676,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4732,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4718,
											"end": 4727,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4701,
											"end": 4734,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4762,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4777,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4841,
											"end": 4848,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 4838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4828,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4815,
											"end": 4839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 4798,
											"end": 4849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4978,
											"end": 4984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 4992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5041,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5027,
											"end": 5036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5025,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5037,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5010,
											"end": 5042,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5057,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5104,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5082,
											"end": 5105,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5142,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5165,
											"end": 5167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5168,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5183,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5271,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5261,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5253,
											"end": 5255,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5272,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5284,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5288,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5309,
											"end": 5325,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 5348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5407,
											"end": 5409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 5367,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5433,
											"end": 5442,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5479,
											"end": 5481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 5477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 5451,
											"end": 5482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5605,
											"end": 5606,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5593,
											"end": 5612,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5593,
											"end": 5612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5629,
											"end": 5648,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5648,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5648,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5663,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5721,
											"end": 5727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5719,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5728,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 5806,
											"end": 5809,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5787,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5878,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5935,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5935,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5947,
											"end": 5963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5963,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 5977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5973,
											"end": 5974,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5966,
											"end": 5978,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 6054,
											"end": 6061,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6043,
											"end": 6051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6032,
											"end": 6041,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6028,
											"end": 6052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 5999,
											"end": 6062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 6062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 6062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 6062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6508,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 6073,
											"end": 6508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6191,
											"end": 6197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6189,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6246,
											"end": 6248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6241,
											"end": 6244,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6249,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6283,
											"end": 6285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6281,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6328,
											"end": 6334,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6325,
											"end": 6326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6322,
											"end": 6335,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6403,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6343,
											"end": 6352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6499,
											"end": 6502,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6502,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6508,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6073,
											"end": 6508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6774,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 6513,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6692,
											"end": 6694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6681,
											"end": 6690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6655,
											"end": 6659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6764,
											"end": 6766,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6753,
											"end": 6762,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6747,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 6712,
											"end": 6768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6852,
											"end": 6858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6893,
											"end": 6902,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6884,
											"end": 6891,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6903,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 6908,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 6922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6918,
											"end": 6919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6923,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 6963,
											"end": 6972,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6944,
											"end": 6973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6973,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7023,
											"end": 7025,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7012,
											"end": 7021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6995,
											"end": 7027,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7070,
											"end": 7075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7063,
											"end": 7076,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7077,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7049,
											"end": 7054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7078,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7089,
											"end": 7090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7094,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7115,
											"end": 7120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7199,
											"end": 7205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7207,
											"end": 7213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7260,
											"end": 7262,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7257,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7246,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7235,
											"end": 7258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7278,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 7318,
											"end": 7327,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 7299,
											"end": 7328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7381,
											"end": 7383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7370,
											"end": 7379,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7366,
											"end": 7384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 7347,
											"end": 7385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 8002,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7396,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7508,
											"end": 7514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7524,
											"end": 7530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 7588,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7573,
											"end": 7582,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7564,
											"end": 7571,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7583,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7556,
											"end": 7589,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7592,
											"end": 7604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7644,
											"end": 7653,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 7625,
											"end": 7654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7654,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 7707,
											"end": 7709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7696,
											"end": 7705,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 7673,
											"end": 7711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7663,
											"end": 7711,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7663,
											"end": 7711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7747,
											"end": 7756,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7743,
											"end": 7761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7730,
											"end": 7762,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7762,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7809,
											"end": 7811,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7798,
											"end": 7807,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7813,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7849,
											"end": 7868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7884,
											"end": 7890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7881,
											"end": 7911,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7924,
											"end": 7925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7921,
											"end": 7922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7914,
											"end": 7926,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7947,
											"end": 7996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 7988,
											"end": 7995,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7979,
											"end": 7985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7968,
											"end": 7977,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7947,
											"end": 7996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 7947,
											"end": 7996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8418,
											"end": 8798,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8418,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8497,
											"end": 8498,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8493,
											"end": 8505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8505,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8540,
											"end": 8552,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8540,
											"end": 8552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8540,
											"end": 8552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 8561,
											"end": 8622,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8615,
											"end": 8619,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 8607,
											"end": 8613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8603,
											"end": 8620,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8620,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8622,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 8561,
											"end": 8622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8668,
											"end": 8670,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8660,
											"end": 8666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8657,
											"end": 8671,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8637,
											"end": 8655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8631,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8631,
											"end": 8792,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 8724,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8709,
											"end": 8712,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8702,
											"end": 8703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8695,
											"end": 8726,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8749,
											"end": 8753,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8746,
											"end": 8747,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8739,
											"end": 8754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8777,
											"end": 8781,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8774,
											"end": 8775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8767,
											"end": 8782,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8631,
											"end": 8792,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8631,
											"end": 8792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8631,
											"end": 8792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8418,
											"end": 8798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8418,
											"end": 8798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8418,
											"end": 8798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8418,
											"end": 8798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8803,
											"end": 9213,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 8803,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9005,
											"end": 9007,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9044,
											"end": 9046,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 9024,
											"end": 9042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9024,
											"end": 9042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9024,
											"end": 9042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9017,
											"end": 9047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9083,
											"end": 9117,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E"
										},
										{
											"begin": 9078,
											"end": 9080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9056,
											"end": 9118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9149,
											"end": 9151,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9134,
											"end": 9152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9134,
											"end": 9152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9127,
											"end": 9171,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9203,
											"end": 9206,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9188,
											"end": 9207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8803,
											"end": 9213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9628,
											"end": 9755,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 9628,
											"end": 9755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9689,
											"end": 9699,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 9684,
											"end": 9687,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9680,
											"end": 9700,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9677,
											"end": 9678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9670,
											"end": 9701,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9720,
											"end": 9724,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9717,
											"end": 9718,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9710,
											"end": 9725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9744,
											"end": 9748,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9741,
											"end": 9742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9734,
											"end": 9749,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9760,
											"end": 9887,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 9760,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9821,
											"end": 9831,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 9816,
											"end": 9819,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9812,
											"end": 9832,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9802,
											"end": 9833,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9852,
											"end": 9856,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 9849,
											"end": 9850,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9842,
											"end": 9857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9880,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9873,
											"end": 9874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9866,
											"end": 9881,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 10027,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9892,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9952,
											"end": 9969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9952,
											"end": 9969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9952,
											"end": 9969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 9949,
											"end": 9992,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 9972,
											"end": 9990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10019,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10008,
											"end": 10021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10008,
											"end": 10021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 10027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10842,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 10441,
											"end": 10842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10643,
											"end": 10645,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10625,
											"end": 10646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10682,
											"end": 10684,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10655,
											"end": 10685,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10721,
											"end": 10755,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 10716,
											"end": 10718,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10756,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10787,
											"end": 10789,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10772,
											"end": 10790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10772,
											"end": 10790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10765,
											"end": 10800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10835,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10817,
											"end": 10836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 11253,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 10847,
											"end": 11253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11049,
											"end": 11051,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11031,
											"end": 11052,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11031,
											"end": 11052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11031,
											"end": 11052,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11088,
											"end": 11090,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11061,
											"end": 11091,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11127,
											"end": 11161,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 11122,
											"end": 11124,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11100,
											"end": 11162,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11193,
											"end": 11195,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11178,
											"end": 11196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11171,
											"end": 11211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11246,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11228,
											"end": 11247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11228,
											"end": 11247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 11253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11258,
											"end": 11383,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 11258,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11344,
											"end": 11354,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11344,
											"end": 11354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11344,
											"end": 11354,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11341,
											"end": 11377,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11341,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 11341,
											"end": 11377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11357,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 11357,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 11357,
											"end": 11375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11388,
											"end": 11853,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 11388,
											"end": 11853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11645,
											"end": 11647,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11634,
											"end": 11643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11627,
											"end": 11648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11608,
											"end": 11612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11671,
											"end": 11727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 11723,
											"end": 11725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11712,
											"end": 11721,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11708,
											"end": 11726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11700,
											"end": 11706,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11671,
											"end": 11727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 11671,
											"end": 11727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11671,
											"end": 11727,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 11671,
											"end": 11727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11775,
											"end": 11784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11767,
											"end": 11773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11763,
											"end": 11785,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11758,
											"end": 11760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11747,
											"end": 11756,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11736,
											"end": 11786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11803,
											"end": 11847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 11840,
											"end": 11846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11832,
											"end": 11838,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11803,
											"end": 11847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 11803,
											"end": 11847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11803,
											"end": 11847,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 11803,
											"end": 11847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11847,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 11388,
											"end": 11853,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11388,
											"end": 11853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12521,
											"end": 13348,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 12521,
											"end": 13348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12918,
											"end": 12933,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12918,
											"end": 12933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12918,
											"end": 12933,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12900,
											"end": 12934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12900,
											"end": 12934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12970,
											"end": 12985,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12970,
											"end": 12985,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12965,
											"end": 12967,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12943,
											"end": 12986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12880,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 13017,
											"end": 13019,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13002,
											"end": 13020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13002,
											"end": 13020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12995,
											"end": 13026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12995,
											"end": 13026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12995,
											"end": 13026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12843,
											"end": 12847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12843,
											"end": 12847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13049,
											"end": 13106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 13049,
											"end": 13106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13086,
											"end": 13105,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13086,
											"end": 13105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13078,
											"end": 13084,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13049,
											"end": 13106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 13049,
											"end": 13106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13049,
											"end": 13106,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 13049,
											"end": 13106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13154,
											"end": 13163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13142,
											"end": 13164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13137,
											"end": 13139,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13126,
											"end": 13135,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13122,
											"end": 13140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13115,
											"end": 13165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 13225,
											"end": 13231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13223,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 13188,
											"end": 13232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13232,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 13188,
											"end": 13232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13174,
											"end": 13232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13174,
											"end": 13232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13281,
											"end": 13290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13269,
											"end": 13291,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13263,
											"end": 13266,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13252,
											"end": 13261,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13248,
											"end": 13267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13241,
											"end": 13292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13309,
											"end": 13342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 13335,
											"end": 13341,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13327,
											"end": 13333,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13309,
											"end": 13342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 13309,
											"end": 13342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13309,
											"end": 13342,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 13309,
											"end": 13342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13301,
											"end": 13342,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 12521,
											"end": 13348,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12521,
											"end": 13348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13353,
											"end": 13602,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 13353,
											"end": 13602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13422,
											"end": 13428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13475,
											"end": 13477,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13463,
											"end": 13472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13454,
											"end": 13461,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13450,
											"end": 13473,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13446,
											"end": 13478,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13443,
											"end": 13495,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13443,
											"end": 13495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 13443,
											"end": 13495,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13491,
											"end": 13492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13488,
											"end": 13489,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13493,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13443,
											"end": 13495,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 13443,
											"end": 13495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13523,
											"end": 13532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13517,
											"end": 13533,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13542,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 13566,
											"end": 13571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13542,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 13542,
											"end": 13572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13607,
											"end": 13786,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 13607,
											"end": 13786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13642,
											"end": 13645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13684,
											"end": 13685,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 13666,
											"end": 13682,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 13663,
											"end": 13686,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13660,
											"end": 13780,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13660,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 13660,
											"end": 13780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13730,
											"end": 13731,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13727,
											"end": 13728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13724,
											"end": 13725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13709,
											"end": 13732,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13767,
											"end": 13768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13761,
											"end": 13769,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13756,
											"end": 13759,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 13752,
											"end": 13770,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 13660,
											"end": 13780,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 13660,
											"end": 13780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13607,
											"end": 13786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13607,
											"end": 13786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 13791,
											"end": 14462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13830,
											"end": 13833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13872,
											"end": 13876,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13854,
											"end": 13870,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 13851,
											"end": 13877,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13848,
											"end": 13887,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13848,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 13848,
											"end": 13887,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13848,
											"end": 13887,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 13848,
											"end": 13887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13914,
											"end": 13916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13908,
											"end": 13917,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13979,
											"end": 13995,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 13975,
											"end": 14000,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13975,
											"end": 14000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13972,
											"end": 13973,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13908,
											"end": 13917,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13951,
											"end": 14001,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14024,
											"end": 14035,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14070,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14089,
											"end": 14107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14160,
											"end": 14162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14153,
											"end": 14157,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14145,
											"end": 14151,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14141,
											"end": 14158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14138,
											"end": 14163,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14133,
											"end": 14135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14131,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14122,
											"end": 14136,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14119,
											"end": 14164,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 14116,
											"end": 14174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14116,
											"end": 14174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 14116,
											"end": 14174,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14167,
											"end": 14172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14167,
											"end": 14172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14167,
											"end": 14172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14167,
											"end": 14172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14167,
											"end": 14172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14116,
											"end": 14174,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 14116,
											"end": 14174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14204,
											"end": 14210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14198,
											"end": 14202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14194,
											"end": 14211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14183,
											"end": 14211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14183,
											"end": 14211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14240,
											"end": 14243,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14244,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14267,
											"end": 14269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14259,
											"end": 14265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14256,
											"end": 14270,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14253,
											"end": 14280,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14253,
											"end": 14280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14253,
											"end": 14280,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14253,
											"end": 14280,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14253,
											"end": 14280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14357,
											"end": 14359,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14338,
											"end": 14354,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14332,
											"end": 14336,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14328,
											"end": 14355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14324,
											"end": 14360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14317,
											"end": 14321,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14308,
											"end": 14314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14303,
											"end": 14306,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14299,
											"end": 14315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14295,
											"end": 14322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14361,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14289,
											"end": 14371,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14289,
											"end": 14371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 14289,
											"end": 14371,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14289,
											"end": 14371,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 14289,
											"end": 14371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14380,
											"end": 14437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 14431,
											"end": 14435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14422,
											"end": 14428,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14414,
											"end": 14420,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14410,
											"end": 14429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14406,
											"end": 14436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14400,
											"end": 14404,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14380,
											"end": 14437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 14380,
											"end": 14437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14380,
											"end": 14437,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 14380,
											"end": 14437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14453,
											"end": 14456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14453,
											"end": 14456,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13791,
											"end": 14462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14888,
											"end": 15292,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 14888,
											"end": 15292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15090,
											"end": 15092,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15072,
											"end": 15093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15072,
											"end": 15093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15072,
											"end": 15093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15129,
											"end": 15131,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 15109,
											"end": 15127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15109,
											"end": 15127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15109,
											"end": 15127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15102,
											"end": 15132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15168,
											"end": 15202,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 15163,
											"end": 15165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15148,
											"end": 15166,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15148,
											"end": 15166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15141,
											"end": 15203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15234,
											"end": 15236,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15219,
											"end": 15237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15219,
											"end": 15237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15212,
											"end": 15250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15282,
											"end": 15285,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15267,
											"end": 15286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15267,
											"end": 15286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14888,
											"end": 15292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15297,
											"end": 15858,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 15297,
											"end": 15858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15594,
											"end": 15609,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15594,
											"end": 15609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15594,
											"end": 15609,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15576,
											"end": 15610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15576,
											"end": 15610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15646,
											"end": 15661,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15646,
											"end": 15661,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15641,
											"end": 15643,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15626,
											"end": 15644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15626,
											"end": 15644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15619,
											"end": 15662,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15678,
											"end": 15696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15678,
											"end": 15696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15671,
											"end": 15705,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15671,
											"end": 15705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15671,
											"end": 15705,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15736,
											"end": 15738,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15721,
											"end": 15739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15721,
											"end": 15739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15714,
											"end": 15748,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15714,
											"end": 15748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15714,
											"end": 15748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15556,
											"end": 15559,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 15779,
											"end": 15782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15764,
											"end": 15783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15764,
											"end": 15783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15757,
											"end": 15789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15757,
											"end": 15789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15757,
											"end": 15789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15519,
											"end": 15523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15519,
											"end": 15523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15806,
											"end": 15852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 15806,
											"end": 15852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15832,
											"end": 15851,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15832,
											"end": 15851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15824,
											"end": 15830,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15806,
											"end": 15852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 15806,
											"end": 15852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15806,
											"end": 15852,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 15806,
											"end": 15852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15798,
											"end": 15852,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 15297,
											"end": 15858,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15297,
											"end": 15858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/DTicket2_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTicket2_flattened.sol\":\"ERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTicket2_flattened.sol\":{\"keccak256\":\"0x0e5171726fbcef88c4fd8ad350fc221a51d0b45111501457fe01feae960104ac\",\"urls\":[\"bzz-raw://3972866374f9c10c710210df0c6eb470f5a7c097af6c15e9d7bd08bdbd309eb8\",\"dweb:/ipfs/QmWmbTsVDaPrP4t7yGkVFydubtRc4dnZxvtUDscQJ1hDo7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 685,
								"contract": "contracts/DTicket2_flattened.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 691,
								"contract": "contracts/DTicket2_flattened.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 693,
								"contract": "contracts/DTicket2_flattened.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTicket2_flattened.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTicket2_flattened.sol\":{\"keccak256\":\"0x0e5171726fbcef88c4fd8ad350fc221a51d0b45111501457fe01feae960104ac\",\"urls\":[\"bzz-raw://3972866374f9c10c710210df0c6eb470f5a7c097af6c15e9d7bd08bdbd309eb8\",\"dweb:/ipfs/QmWmbTsVDaPrP4t7yGkVFydubtRc4dnZxvtUDscQJ1hDo7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 685,
								"contract": "contracts/DTicket2_flattened.sol:ERC1155Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 691,
								"contract": "contracts/DTicket2_flattened.sol:ERC1155Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 693,
								"contract": "contracts/DTicket2_flattened.sol:ERC1155Burnable",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTicket2_flattened.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTicket2_flattened.sol\":{\"keccak256\":\"0x0e5171726fbcef88c4fd8ad350fc221a51d0b45111501457fe01feae960104ac\",\"urls\":[\"bzz-raw://3972866374f9c10c710210df0c6eb470f5a7c097af6c15e9d7bd08bdbd309eb8\",\"dweb:/ipfs/QmWmbTsVDaPrP4t7yGkVFydubtRc4dnZxvtUDscQJ1hDo7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTicket2_flattened.sol\":\"IERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTicket2_flattened.sol\":{\"keccak256\":\"0x0e5171726fbcef88c4fd8ad350fc221a51d0b45111501457fe01feae960104ac\",\"urls\":[\"bzz-raw://3972866374f9c10c710210df0c6eb470f5a7c097af6c15e9d7bd08bdbd309eb8\",\"dweb:/ipfs/QmWmbTsVDaPrP4t7yGkVFydubtRc4dnZxvtUDscQJ1hDo7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTicket2_flattened.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTicket2_flattened.sol\":{\"keccak256\":\"0x0e5171726fbcef88c4fd8ad350fc221a51d0b45111501457fe01feae960104ac\",\"urls\":[\"bzz-raw://3972866374f9c10c710210df0c6eb470f5a7c097af6c15e9d7bd08bdbd309eb8\",\"dweb:/ipfs/QmWmbTsVDaPrP4t7yGkVFydubtRc4dnZxvtUDscQJ1hDo7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTicket2_flattened.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTicket2_flattened.sol\":{\"keccak256\":\"0x0e5171726fbcef88c4fd8ad350fc221a51d0b45111501457fe01feae960104ac\",\"urls\":[\"bzz-raw://3972866374f9c10c710210df0c6eb470f5a7c097af6c15e9d7bd08bdbd309eb8\",\"dweb:/ipfs/QmWmbTsVDaPrP4t7yGkVFydubtRc4dnZxvtUDscQJ1hDo7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTicket2_flattened.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTicket2_flattened.sol\":{\"keccak256\":\"0x0e5171726fbcef88c4fd8ad350fc221a51d0b45111501457fe01feae960104ac\",\"urls\":[\"bzz-raw://3972866374f9c10c710210df0c6eb470f5a7c097af6c15e9d7bd08bdbd309eb8\",\"dweb:/ipfs/QmWmbTsVDaPrP4t7yGkVFydubtRc4dnZxvtUDscQJ1hDo7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTicket2_flattened.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTicket2_flattened.sol\":{\"keccak256\":\"0x0e5171726fbcef88c4fd8ad350fc221a51d0b45111501457fe01feae960104ac\",\"urls\":[\"bzz-raw://3972866374f9c10c710210df0c6eb470f5a7c097af6c15e9d7bd08bdbd309eb8\",\"dweb:/ipfs/QmWmbTsVDaPrP4t7yGkVFydubtRc4dnZxvtUDscQJ1hDo7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "contracts/DTicket2_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/DTicket2_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/DTicket2_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/DTicket2_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/DTicket2_flattened.sol",
					"exportedSymbols": {
						"Address": [
							461
						],
						"Context": [
							21
						],
						"DTicket": [
							2010
						],
						"ERC1155": [
							1882
						],
						"ERC1155Burnable": [
							1949
						],
						"ERC165": [
							494
						],
						"IERC1155": [
							653
						],
						"IERC1155MetadataURI": [
							666
						],
						"IERC1155Receiver": [
							533
						],
						"IERC165": [
							472
						],
						"Ownable": [
							132
						]
					},
					"id": 2011,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "133:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "648:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "724:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "741:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "745:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "741:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "734:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "671:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "681:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "715:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:9:0"
									},
									"scope": 21,
									"src": "662:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "831:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "848:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "852:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "848:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "841:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "773:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "781:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "815:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "815:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:16:0"
									},
									"scope": 21,
									"src": "764:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2011,
							"src": "630:235:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "991:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 24,
										"name": "Context",
										"nameLocations": [
											"1541:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1541:7:0"
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "1541:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "1017:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 132,
							"linearizedBaseContracts": [
								132,
								21
							],
							"name": "Ownable",
							"nameLocation": "1530:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1571:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 132,
									"src": "1555:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1555:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 33,
									"name": "OwnershipTransferred",
									"nameLocation": "1590:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1627:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1611:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1658:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1642:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1642:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1610:57:0"
									},
									"src": "1584:84:0"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "1784:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 38,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1813:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1813:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 37,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1794:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1794:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "1794:32:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1674:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 43,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1781:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1784:0:0"
									},
									"scope": 132,
									"src": "1770:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "1942:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 46,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1952:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1952:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1952:13:0"
											},
											{
												"id": 49,
												"nodeType": "PlaceholderStatement",
												"src": "1975:1:0"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1839:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 51,
									"name": "onlyOwner",
									"nameLocation": "1930:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1939:2:0"
									},
									"src": "1921:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2114:30:0",
										"statements": [
											{
												"expression": {
													"id": 57,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2131:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 56,
												"id": 58,
												"nodeType": "Return",
												"src": "2124:13:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "1989:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2068:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2073:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2105:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2104:9:0"
									},
									"scope": 132,
									"src": "2059:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "2262:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 65,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "2280:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2280:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 67,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2291:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2291:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2280:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2305:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2272:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2272:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2272:68:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2150:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2226:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2237:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2262:0:0"
									},
									"scope": 132,
									"src": "2217:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "2736:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2773:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2765:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 81,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2765:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2765:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 80,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "2746:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2746:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2746:30:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2353:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 78,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 77,
												"name": "onlyOwner",
												"nameLocations": [
													"2726:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "2726:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2726:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2691:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2708:2:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2736:0:0"
									},
									"scope": 132,
									"src": "2682:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "3002:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 97,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "3020:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3040:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 99,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3032:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 98,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3032:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3032:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3020:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3044:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3012:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "3012:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "3114:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 106,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "3095:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3095:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "3095:28:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "2789:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 94,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 93,
												"name": "onlyOwner",
												"nameLocations": [
													"2992:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "2992:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2992:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2941:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2967:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2959:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2958:18:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3002:0:0"
									},
									"scope": 132,
									"src": "2932:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3347:124:0",
										"statements": [
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3365:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "3357:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 117,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3357:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 120,
												"initialValue": {
													"id": 119,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "3376:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3357:25:0"
											},
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3392:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 122,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "3401:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3392:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "3392:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 126,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3445:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 127,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "3455:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 125,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "3424:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3424:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "EmitStatement",
												"src": "3419:45:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "3136:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3293:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3320:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3312:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3311:18:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3347:0:0"
									},
									"scope": 132,
									"src": "3284:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2011,
							"src": "1512:1961:0",
							"usedErrors": [],
							"usedEvents": [
								33
							]
						},
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "3597:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 134,
								"nodeType": "StructuredDocumentation",
								"src": "3622:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 461,
							"linearizedBaseContracts": [
								461
							],
							"name": "Address",
							"nameLocation": "3698:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "4974:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 142,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "5198:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5206:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5198:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5211:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5198:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5220:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5198:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 141,
												"id": 147,
												"nodeType": "Return",
												"src": "5191:30:0"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "3712:1191:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "4917:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4936:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "4928:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4927:17:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "4968:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4968:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4967:6:0"
									},
									"scope": 461,
									"src": "4908:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "6214:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 160,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6240:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$461",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$461",
																				"typeString": "library Address"
																			}
																		],
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6232:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 158,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6232:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6232:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6246:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "6232:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 163,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "6257:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6232:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6265:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6224:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6224:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "6224:73:0"
											},
											{
												"assignments": [
													169,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 169,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6314:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 182,
														"src": "6309:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 168,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6309:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 176,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6357:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 170,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "6327:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6337:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "6327:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 172,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "6349:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "6327:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6327:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6308:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 178,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "6378:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6387:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6370:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6370:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "6370:78:0"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "5234:904:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "6152:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6178:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "6162:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6162:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6197:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "6189:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6161:43:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6214:0:0"
									},
									"scope": 461,
									"src": "6143:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "7286:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 194,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "7325:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 195,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "7333:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7339:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7342:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 193,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															241,
															285
														],
														"referencedDeclaration": 285,
														"src": "7303:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7303:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 192,
												"id": 199,
												"nodeType": "Return",
												"src": "7296:79:0"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "6461:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "7206:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7227:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "7219:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7248:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "7235:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 187,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7235:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7218:35:0"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "7272:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 190,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7272:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7271:14:0"
									},
									"scope": 461,
									"src": "7197:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7751:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 214,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "7790:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 215,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "7798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7804:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 217,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "7807:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 213,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															241,
															285
														],
														"referencedDeclaration": 285,
														"src": "7768:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7768:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 212,
												"id": 219,
												"nodeType": "Return",
												"src": "7761:59:0"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "7388:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "7613:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7643:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "7635:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7672:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "7659:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 205,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7659:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7700:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "7686:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 207,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7686:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7625:93:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "7737:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 210,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7737:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7736:14:0"
									},
									"scope": 461,
									"src": "7604:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "8302:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 234,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "8341:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 235,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "8349:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 236,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "8355:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8362:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 233,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															241,
															285
														],
														"referencedDeclaration": 285,
														"src": "8319:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8319:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 232,
												"id": 239,
												"nodeType": "Return",
												"src": "8312:94:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "7833:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "8198:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8228:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "8220:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8220:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8249:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "8236:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8236:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8263:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "8255:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8219:50:0"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "8288:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8288:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8287:14:0"
									},
									"scope": 461,
									"src": "8189:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "8840:267:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 258,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8866:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$461",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$461",
																				"typeString": "library Address"
																			}
																		],
																		"id": 257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8858:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 256,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8858:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8858:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8872:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "8858:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 261,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "8883:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8858:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8890:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8850:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8850:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "8850:81:0"
											},
											{
												"assignments": [
													267,
													269
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8947:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "8942:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 266,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8942:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 269,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "8969:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "8956:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 268,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8956:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [
														{
															"id": 274,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "9009:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 270,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "8983:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8990:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "8983:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 272,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "9002:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8983:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8983:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8941:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 278,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "9058:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 279,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "9066:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 280,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "9075:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 281,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "9087:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 277,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "9031:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9031:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 254,
												"id": 283,
												"nodeType": "Return",
												"src": "9024:76:0"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "8419:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "8670:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8709:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8701:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8738:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8725:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8725:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8760:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8752:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8789:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8775:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 249,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8775:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8691:116:0"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8826:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 252,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8826:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8825:14:0"
									},
									"scope": 461,
									"src": "8661:446:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "9384:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 296,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "9420:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 297,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "9428:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9434:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 295,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															302,
															331
														],
														"referencedDeclaration": 331,
														"src": "9401:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9401:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 294,
												"id": 300,
												"nodeType": "Return",
												"src": "9394:80:0"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "9113:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "9293:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9320:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "9312:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9341:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "9328:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9328:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9311:35:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "9370:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 292,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9370:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9369:14:0"
									},
									"scope": 461,
									"src": "9284:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "9823:168:0",
										"statements": [
											{
												"assignments": [
													315,
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9839:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 330,
														"src": "9834:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 314,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9834:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "9861:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 330,
														"src": "9848:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 316,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9848:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 322,
												"initialValue": {
													"arguments": [
														{
															"id": 320,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "9893:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 318,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "9875:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9882:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "9875:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9875:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9833:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 324,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "9942:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 325,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "9950:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 326,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "9959:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 327,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "9971:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 323,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "9915:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9915:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 313,
												"id": 329,
												"nodeType": "Return",
												"src": "9908:76:0"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "9487:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "9674:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9710:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "9702:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9702:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9739:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "9726:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 306,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9726:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9767:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "9753:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 308,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9753:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9692:93:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "9809:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 311,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9809:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9808:14:0"
									},
									"scope": 461,
									"src": "9665:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "10267:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 342,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "10305:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 343,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "10313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10319:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 341,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															348,
															377
														],
														"referencedDeclaration": 377,
														"src": "10284:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10284:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 340,
												"id": 346,
												"nodeType": "Return",
												"src": "10277:84:0"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "9997:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "10179:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10208:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "10200:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "10216:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10216:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10199:35:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "10253:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10253:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10252:14:0"
									},
									"scope": 461,
									"src": "10170:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "10709:170:0",
										"statements": [
											{
												"assignments": [
													361,
													363
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10725:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 376,
														"src": "10720:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 360,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10720:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 363,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "10747:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 376,
														"src": "10734:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 362,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10734:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 368,
												"initialValue": {
													"arguments": [
														{
															"id": 366,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "10781:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 364,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "10761:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10768:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "10761:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10761:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10719:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 370,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "10830:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "10838:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 372,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "10847:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 373,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "10859:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 369,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "10803:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10803:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 359,
												"id": 375,
												"nodeType": "Return",
												"src": "10796:76:0"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "10374:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "10563:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10601:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "10593:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10630:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "10617:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 352,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10617:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10658:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "10644:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 354,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10644:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10583:93:0"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "10695:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 357,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10695:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10694:14:0"
									},
									"scope": 461,
									"src": "10554:325:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "11361:434:0",
										"statements": [
											{
												"condition": {
													"id": 391,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "11375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "11731:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 409,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "11753:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 410,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "11765:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 408,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "11745:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11745:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "ExpressionStatement",
															"src": "11745:33:0"
														}
													]
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "11371:418:0",
												"trueBody": {
													"id": 407,
													"nodeType": "Block",
													"src": "11384:341:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 392,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "11402:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11413:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "11402:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11423:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11402:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 404,
															"nodeType": "IfStatement",
															"src": "11398:286:0",
															"trueBody": {
																"id": 403,
																"nodeType": "Block",
																"src": "11426:258:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 398,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 380,
																							"src": "11628:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 397,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 149,
																						"src": "11617:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 399,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11617:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 400,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11637:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 396,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "11609:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11609:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 402,
																		"nodeType": "ExpressionStatement",
																		"src": "11609:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 405,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "11704:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 390,
															"id": 406,
															"nodeType": "Return",
															"src": "11697:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "10885:277:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "11176:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11220:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "11212:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "11241:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "11236:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 381,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11236:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "11271:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "11258:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11258:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11305:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "11291:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 385,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11291:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11202:121:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "11347:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11347:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11346:14:0"
									},
									"scope": 461,
									"src": "11167:628:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 439,
										"nodeType": "Block",
										"src": "12176:135:0",
										"statements": [
											{
												"condition": {
													"id": 428,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 419,
													"src": "12190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 437,
													"nodeType": "Block",
													"src": "12247:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 433,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "12269:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 434,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "12281:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 432,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "12261:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12261:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 436,
															"nodeType": "ExpressionStatement",
															"src": "12261:33:0"
														}
													]
												},
												"id": 438,
												"nodeType": "IfStatement",
												"src": "12186:119:0",
												"trueBody": {
													"id": 431,
													"nodeType": "Block",
													"src": "12199:42:0",
													"statements": [
														{
															"expression": {
																"id": 429,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "12220:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 427,
															"id": 430,
															"nodeType": "Return",
															"src": "12213:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "11801:210:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "12025:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "12056:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "12051:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 418,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12051:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "12086:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "12073:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 420,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12073:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12120:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "12106:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12106:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12041:97:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "12162:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 425,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12162:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12161:14:0"
									},
									"scope": 461,
									"src": "12016:295:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "12400:457:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 447,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "12476:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12487:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12476:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12496:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12476:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "12806:45:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 454,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "12827:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 453,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "12820:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12820:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 456,
															"nodeType": "ExpressionStatement",
															"src": "12820:20:0"
														}
													]
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "12472:379:0",
												"trueBody": {
													"id": 452,
													"nodeType": "Block",
													"src": "12499:301:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "12657:133:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12675:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "12704:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "12698:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12698:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "12679:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12743:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "12747:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12739:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12739:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "12760:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12732:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12732:44:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12732:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 442,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12704:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 442,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12747:10:0",
																	"valueSize": 1
																}
															],
															"id": 451,
															"nodeType": "InlineAssembly",
															"src": "12648:142:0"
														}
													]
												}
											}
										]
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "12326:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "12347:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "12334:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 441,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12334:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12373:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "12359:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 443,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12359:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12333:53:0"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12400:0:0"
									},
									"scope": 461,
									"src": "12317:540:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2011,
							"src": "3690:9169:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "12996:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 463,
								"nodeType": "StructuredDocumentation",
								"src": "13021:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 472,
							"linearizedBaseContracts": [
								472
							],
							"name": "IERC165",
							"nameLocation": "13311:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "13325:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "13679:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "13704:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "13697:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 465,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "13697:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13696:20:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "13740:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 468,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13740:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13739:6:0"
									},
									"scope": 472,
									"src": "13670:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2011,
							"src": "13301:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 473,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "13883:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 475,
										"name": "IERC165",
										"nameLocations": [
											"14514:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 472,
										"src": "14514:7:0"
									},
									"id": 476,
									"nodeType": "InheritanceSpecifier",
									"src": "14514:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 474,
								"nodeType": "StructuredDocumentation",
								"src": "13909:576:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 494,
							"linearizedBaseContracts": [
								494,
								472
							],
							"name": "ERC165",
							"nameLocation": "14504:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										471
									],
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "14680:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 485,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "14697:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 487,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "14717:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$472_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$472_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 486,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14712:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14712:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$472",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14726:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "14712:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "14697:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 484,
												"id": 491,
												"nodeType": "Return",
												"src": "14690:47:0"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "14528:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "14598:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 481,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14656:8:0"
									},
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "14623:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "14616:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 478,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "14616:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14615:20:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "14674:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 482,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14674:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14673:6:0"
									},
									"scope": 494,
									"src": "14589:155:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2011,
							"src": "14486:260:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 495,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "14904:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 497,
										"name": "IERC165",
										"nameLocations": [
											"15000:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 472,
										"src": "15000:7:0"
									},
									"id": 498,
									"nodeType": "InheritanceSpecifier",
									"src": "15000:7:0"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 496,
								"nodeType": "StructuredDocumentation",
								"src": "14930:39:0",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 533,
							"linearizedBaseContracts": [
								533,
								472
							],
							"name": "IERC1155Receiver",
							"nameLocation": "14980:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "15014:826:0",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "15854:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15889:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "15881:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15915:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "15907:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15937:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "15929:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15957:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "15949:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15987:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "15972:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 508,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15972:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15871:126:0"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "16016:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 511,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "16016:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16015:8:0"
									},
									"scope": 533,
									"src": "15845:179:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "16030:994:0",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "17038:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17078:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "17070:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17104:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "17096:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "17137:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "17118:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 520,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17118:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 521,
													"nodeType": "ArrayTypeName",
													"src": "17118:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "17169:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "17150:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 523,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17150:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 524,
													"nodeType": "ArrayTypeName",
													"src": "17150:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17200:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "17185:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17185:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17060:150:0"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "17229:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 529,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "17229:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17228:8:0"
									},
									"scope": 533,
									"src": "17029:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2011,
							"src": "14970:2269:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 534,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17381:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 536,
										"name": "IERC165",
										"nameLocations": [
											"17595:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 472,
										"src": "17595:7:0"
									},
									"id": 537,
									"nodeType": "InheritanceSpecifier",
									"src": "17595:7:0"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 535,
								"nodeType": "StructuredDocumentation",
								"src": "17407:165:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 653,
							"linearizedBaseContracts": [
								653,
								472
							],
							"name": "IERC1155",
							"nameLocation": "17583:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "17609:121:0",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 550,
									"name": "TransferSingle",
									"nameLocation": "17741:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17772:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "17756:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17798:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "17782:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17820:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "17804:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "17832:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "17824:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17844:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "17836:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17755:95:0"
									},
									"src": "17735:116:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "17857:144:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 565,
									"name": "TransferBatch",
									"nameLocation": "18012:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "18051:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "18035:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18085:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "18069:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18115:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "18099:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18099:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "18137:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "18127:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 558,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "18127:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 559,
													"nodeType": "ArrayTypeName",
													"src": "18127:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "18160:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "18150:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 561,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "18150:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 562,
													"nodeType": "ArrayTypeName",
													"src": "18150:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18025:147:0"
									},
									"src": "18006:167:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "18179:147:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 574,
									"name": "ApprovalForAll",
									"nameLocation": "18337:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18368:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "18352:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "18393:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "18377:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "18408:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "18403:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18403:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18351:66:0"
									},
									"src": "18331:87:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "18424:343:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 581,
									"name": "URI",
									"nameLocation": "18778:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18789:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "18782:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 576,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18782:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "18812:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "18796:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18781:34:0"
									},
									"src": "18772:44:0"
								},
								{
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "18822:173:0",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "19009:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19027:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "19019:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "19044:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "19036:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19018:29:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "19071:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19071:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19070:9:0"
									},
									"scope": 653,
									"src": "19000:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "19086:188:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "19288:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "19331:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "19312:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 593,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "19312:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 594,
													"nodeType": "ArrayTypeName",
													"src": "19312:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "19368:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "19349:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 596,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "19349:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 597,
													"nodeType": "ArrayTypeName",
													"src": "19349:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19302:75:0"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "19401:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 600,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "19401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 601,
													"nodeType": "ArrayTypeName",
													"src": "19401:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19400:18:0"
									},
									"scope": 653,
									"src": "19279:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "19425:248:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "19687:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "19713:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "19705:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "19728:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "19723:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 608,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19723:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19704:33:0"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19746:0:0"
									},
									"scope": 653,
									"src": "19678:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "19753:135:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "19902:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19927:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "19919:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "19944:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "19936:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19918:35:0"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "19977:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 619,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19977:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19976:6:0"
									},
									"scope": 653,
									"src": "19893:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "19989:556:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 636,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "20559:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20584:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "20576:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20598:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "20590:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20590:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "20610:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "20602:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "20622:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "20614:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "20645:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "20630:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 632,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20630:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20575:75:0"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20659:0:0"
									},
									"scope": 653,
									"src": "20550:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "20666:390:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 652,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "21070:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21109:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "21101:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21131:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "21123:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "21162:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "21143:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 642,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "21143:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 643,
													"nodeType": "ArrayTypeName",
													"src": "21143:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "21194:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "21175:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 645,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "21175:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 646,
													"nodeType": "ArrayTypeName",
													"src": "21175:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "21226:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "21211:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21211:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21091:145:0"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21245:0:0"
									},
									"scope": 653,
									"src": "21061:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2011,
							"src": "17573:3675:0",
							"usedErrors": [],
							"usedEvents": [
								550,
								565,
								574,
								581
							]
						},
						{
							"id": 654,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "21419:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 656,
										"name": "IERC1155",
										"nameLocations": [
											"21673:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 653,
										"src": "21673:8:0"
									},
									"id": 657,
									"nodeType": "InheritanceSpecifier",
									"src": "21673:8:0"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 655,
								"nodeType": "StructuredDocumentation",
								"src": "21445:194:0",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 666,
							"linearizedBaseContracts": [
								666,
								653,
								472
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "21650:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "21688:192:0",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "21894:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "21906:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "21898:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21897:12:0"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "21933:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 662,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21933:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21932:15:0"
									},
									"scope": 666,
									"src": "21885:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2011,
							"src": "21640:310:0",
							"usedErrors": [],
							"usedEvents": [
								550,
								565,
								574,
								581
							]
						},
						{
							"id": 667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "22090:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 669,
										"name": "Context",
										"nameLocations": [
											"22356:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "22356:7:0"
									},
									"id": 670,
									"nodeType": "InheritanceSpecifier",
									"src": "22356:7:0"
								},
								{
									"baseName": {
										"id": 671,
										"name": "ERC165",
										"nameLocations": [
											"22365:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "22365:6:0"
									},
									"id": 672,
									"nodeType": "InheritanceSpecifier",
									"src": "22365:6:0"
								},
								{
									"baseName": {
										"id": 673,
										"name": "IERC1155",
										"nameLocations": [
											"22373:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 653,
										"src": "22373:8:0"
									},
									"id": 674,
									"nodeType": "InheritanceSpecifier",
									"src": "22373:8:0"
								},
								{
									"baseName": {
										"id": 675,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"22383:19:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 666,
										"src": "22383:19:0"
									},
									"id": 676,
									"nodeType": "InheritanceSpecifier",
									"src": "22383:19:0"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 668,
								"nodeType": "StructuredDocumentation",
								"src": "22121:214:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1882,
							"linearizedBaseContracts": [
								1882,
								666,
								653,
								494,
								472,
								21
							],
							"name": "ERC1155",
							"nameLocation": "22345:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 679,
									"libraryName": {
										"id": 677,
										"name": "Address",
										"nameLocations": [
											"22415:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 461,
										"src": "22415:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "22409:26:0",
									"typeName": {
										"id": 678,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22427:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 685,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "22546:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "22490:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 684,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 680,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "22498:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "22490:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 683,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 681,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "22517:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "22509:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 682,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "22528:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 691,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "22665:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "22612:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 690,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 686,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "22620:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "22612:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 689,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 687,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "22639:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "22631:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 688,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "22650:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 693,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "22819:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "22804:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 692,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "22804:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "22905:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 700,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "22923:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 699,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "22915:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22915:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "22915:13:0"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "22830:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 704,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "22899:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "22885:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 695,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22885:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22884:20:0"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22905:0:0"
									},
									"scope": 1882,
									"src": "22873:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										471,
										493
									],
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "23110:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 715,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "23139:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 717,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 653,
																			"src": "23159:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$653_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$653_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 716,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "23154:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23154:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$653",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "23169:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "23154:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "23139:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 721,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "23196:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 723,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 666,
																			"src": "23216:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$666_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$666_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 722,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "23211:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23211:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$666",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "23237:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "23211:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "23196:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "23139:109:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 730,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "23288:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 728,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "23264:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1882_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23270:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 493,
															"src": "23264:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23264:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23139:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 714,
												"id": 733,
												"nodeType": "Return",
												"src": "23120:180:0"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "22941:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "23011:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 711,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 709,
												"name": "ERC165",
												"nameLocations": [
													"23078:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 494,
												"src": "23078:6:0"
											},
											{
												"id": 710,
												"name": "IERC165",
												"nameLocations": [
													"23086:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 472,
												"src": "23086:7:0"
											}
										],
										"src": "23069:25:0"
									},
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "23036:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "23029:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 706,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "23029:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23028:20:0"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "23104:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23104:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23103:6:0"
									},
									"scope": 1882,
									"src": "23002:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										665
									],
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "23781:28:0",
										"statements": [
											{
												"expression": {
													"id": 744,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 693,
													"src": "23798:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 743,
												"id": 745,
												"nodeType": "Return",
												"src": "23791:11:0"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "23313:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "23715:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 740,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23748:8:0"
									},
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "23719:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23718:9:0"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "23766:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23766:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23765:15:0"
									},
									"scope": 1882,
									"src": "23706:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										591
									],
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "24046:132:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 759,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "24064:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24083:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "24075:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 760,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "24075:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24075:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "24064:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24087:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															},
															"value": "ERC1155: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															}
														],
														"id": 758,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24056:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24056:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "24056:76:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 768,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "24149:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 770,
														"indexExpression": {
															"id": 769,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "24159:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "24149:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 772,
													"indexExpression": {
														"id": 771,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "24163:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24149:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 757,
												"id": 773,
												"nodeType": "Return",
												"src": "24142:29:0"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "23815:131:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "23960:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 754,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24019:8:0"
									},
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23978:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "23970:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "23995:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "23987:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23969:29:0"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "24037:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24036:9:0"
									},
									"scope": 1882,
									"src": "23951:227:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										604
									],
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "24486:335:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 790,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "24504:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "24513:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "24504:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 792,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "24523:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "24527:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "24523:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24504:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24535:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 789,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24496:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24496:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "24496:83:0"
											},
											{
												"assignments": [
													802
												],
												"declarations": [
													{
														"constant": false,
														"id": 802,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "24607:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 838,
														"src": "24590:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 800,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "24590:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 801,
															"nodeType": "ArrayTypeName",
															"src": "24590:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 806,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "24637:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24646:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "24637:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "24623:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 803,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "24627:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 804,
															"nodeType": "ArrayTypeName",
															"src": "24627:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24623:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24590:63:0"
											},
											{
												"body": {
													"id": 834,
													"nodeType": "Block",
													"src": "24710:74:0",
													"statements": [
														{
															"expression": {
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 821,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "24724:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 823,
																	"indexExpression": {
																		"id": 822,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "24738:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "24724:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 825,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 779,
																				"src": "24753:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 827,
																			"indexExpression": {
																				"id": 826,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 811,
																				"src": "24762:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "24753:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 828,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "24766:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 830,
																			"indexExpression": {
																				"id": 829,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 811,
																				"src": "24770:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "24766:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 824,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "24743:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24743:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24724:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 833,
															"nodeType": "ExpressionStatement",
															"src": "24724:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 814,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "24684:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 815,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "24688:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24697:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "24688:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24684:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 835,
												"initializationExpression": {
													"assignments": [
														811
													],
													"declarations": [
														{
															"constant": false,
															"id": 811,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "24677:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 835,
															"src": "24669:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 810,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "24669:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 813,
													"initialValue": {
														"hexValue": "30",
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24681:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "24669:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "24705:3:0",
														"subExpression": {
															"id": 818,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "24707:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 820,
													"nodeType": "ExpressionStatement",
													"src": "24705:3:0"
												},
												"nodeType": "ForStatement",
												"src": "24664:120:0"
											},
											{
												"expression": {
													"id": 836,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 802,
													"src": "24801:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 788,
												"id": 837,
												"nodeType": "Return",
												"src": "24794:20:0"
											}
										]
									},
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "24184:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "24344:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 784,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24450:8:0"
									},
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "24385:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "24368:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 777,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "24368:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 778,
													"nodeType": "ArrayTypeName",
													"src": "24368:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "24420:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "24403:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 780,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "24403:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 781,
													"nodeType": "ArrayTypeName",
													"src": "24403:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24358:71:0"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "24468:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 785,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "24468:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 786,
													"nodeType": "ArrayTypeName",
													"src": "24468:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24467:18:0"
									},
									"scope": 1882,
									"src": "24335:486:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										612
									],
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "24973:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 849,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "25002:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25002:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 851,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "25016:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 852,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "25026:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 848,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "24983:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24983:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "24983:52:0"
											}
										]
									},
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "24827:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "24898:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 846,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24964:8:0"
									},
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "24924:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "24916:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "24939:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "24934:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 843,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24934:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24915:33:0"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24973:0:0"
									},
									"scope": 1882,
									"src": "24889:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										622
									],
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "25214:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 867,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "25231:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 869,
														"indexExpression": {
															"id": 868,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "25250:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "25231:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 871,
													"indexExpression": {
														"id": 870,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "25259:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25231:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 866,
												"id": 872,
												"nodeType": "Return",
												"src": "25224:44:0"
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "25048:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "25118:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 863,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25190:8:0"
									},
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25143:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "25135:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25135:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "25160:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "25152:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25152:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25134:35:0"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "25208:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 864,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25208:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25207:6:0"
									},
									"scope": 1882,
									"src": "25109:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										636
									],
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "25511:225:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 890,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "25542:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 891,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "25550:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25550:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "25542:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 895,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "25583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 896,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "25589:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25589:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 894,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "25566:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25566:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "25542:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25616:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															},
															"value": "ERC1155: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															}
														],
														"id": 889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25521:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25521:153:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "25521:153:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "25702:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 905,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "25708:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 906,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "25712:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 907,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "25716:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 908,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "25724:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 903,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "25684:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25684:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "25684:45:0"
											}
										]
									},
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "25281:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "25351:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 887,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25502:8:0"
									},
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25385:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "25377:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25407:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "25399:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25399:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "25427:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "25419:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25447:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "25439:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "25476:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "25463:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25463:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25367:119:0"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25511:0:0"
									},
									"scope": 1882,
									"src": "25342:394:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										652
									],
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "26002:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 930,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "26033:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 931,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "26041:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26041:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "26033:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 935,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "26074:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 936,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "26080:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26080:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 934,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "26057:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26057:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "26033:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26107:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															},
															"value": "ERC1155: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															}
														],
														"id": 929,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26012:153:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "26012:153:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 944,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "26198:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "26204:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 946,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "26208:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 947,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "26213:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 948,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "26222:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 943,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "26175:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26175:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "26175:52:0"
											}
										]
									},
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "25742:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "25817:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 927,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25993:8:0"
									},
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25856:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "25848:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25878:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "25870:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25870:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "25907:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "25890:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 918,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "25890:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 919,
													"nodeType": "ArrayTypeName",
													"src": "25890:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "25937:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "25920:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 921,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "25920:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 922,
													"nodeType": "ArrayTypeName",
													"src": "25920:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "25967:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "25954:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 924,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25954:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25838:139:0"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26002:0:0"
									},
									"scope": 1882,
									"src": "25808:426:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "26847:784:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 967,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "26865:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26879:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26871:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 968,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "26871:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26871:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "26865:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26883:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 966,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26857:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26857:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "26857:66:0"
											},
											{
												"assignments": [
													977
												],
												"declarations": [
													{
														"constant": false,
														"id": 977,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "26942:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1068,
														"src": "26934:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 976,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "26934:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 978,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "26953:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26953:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26934:31:0"
											},
											{
												"assignments": [
													985
												],
												"declarations": [
													{
														"constant": false,
														"id": 985,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "26992:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1068,
														"src": "26975:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 983,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "26975:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 984,
															"nodeType": "ArrayTypeName",
															"src": "26975:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 989,
												"initialValue": {
													"arguments": [
														{
															"id": 987,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "27016:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 986,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1881,
														"src": "26998:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26998:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26975:44:0"
											},
											{
												"assignments": [
													994
												],
												"declarations": [
													{
														"constant": false,
														"id": 994,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "27046:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1068,
														"src": "27029:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 992,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "27029:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 993,
															"nodeType": "ArrayTypeName",
															"src": "27029:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 998,
												"initialValue": {
													"arguments": [
														{
															"id": 996,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "27074:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 995,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1881,
														"src": "27056:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27056:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27029:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1000,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "27113:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1001,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "27123:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "27129:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "27133:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1004,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "27138:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1005,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "27147:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 999,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "27092:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27092:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "27092:60:0"
											},
											{
												"assignments": [
													1009
												],
												"declarations": [
													{
														"constant": false,
														"id": 1009,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "27171:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1068,
														"src": "27163:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1008,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27163:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1015,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1010,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "27185:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1012,
														"indexExpression": {
															"id": 1011,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "27195:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "27185:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1014,
													"indexExpression": {
														"id": 1013,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "27199:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "27185:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27163:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1017,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "27222:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1018,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "27237:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27222:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27245:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 1016,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27214:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27214:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "27214:76:0"
											},
											{
												"id": 1033,
												"nodeType": "UncheckedBlock",
												"src": "27300:77:0",
												"statements": [
													{
														"expression": {
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1023,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "27324:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1026,
																	"indexExpression": {
																		"id": 1024,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "27334:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "27324:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1027,
																"indexExpression": {
																	"id": 1025,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "27338:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "27324:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1028,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1009,
																	"src": "27346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1029,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "27360:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27346:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27324:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1032,
														"nodeType": "ExpressionStatement",
														"src": "27324:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1034,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "27386:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1037,
															"indexExpression": {
																"id": 1035,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "27396:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "27386:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1038,
														"indexExpression": {
															"id": 1036,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "27400:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27386:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1039,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "27407:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27386:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "27386:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1043,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "27444:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "27454:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "27460:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "27464:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1047,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "27468:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1042,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "27429:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27429:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "EmitStatement",
												"src": "27424:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1051,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "27506:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "27516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1053,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "27522:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1054,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "27526:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1055,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "27531:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1056,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "27540:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1050,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "27486:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27486:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "27486:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1060,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "27587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1061,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "27597:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "27603:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "27607:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1064,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "27611:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1065,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "27619:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1059,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "27556:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27556:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "27556:68:0"
											}
										]
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "26240:439:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "26693:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26728:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "26720:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26750:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "26742:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "26770:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "26762:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26790:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "26782:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "26819:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "26806:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 962,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26806:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26710:119:0"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26847:0:0"
									},
									"scope": 1882,
									"src": "26684:947:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "28165:927:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1086,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "28183:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "28187:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "28183:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1088,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "28197:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "28205:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "28197:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28183:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28213:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1085,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28175:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28175:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "28175:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1095,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "28274:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28288:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28280:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1096,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28280:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28280:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28274:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28292:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 1094,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28266:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28266:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "28266:66:0"
											},
											{
												"assignments": [
													1105
												],
												"declarations": [
													{
														"constant": false,
														"id": 1105,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "28351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1203,
														"src": "28343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1104,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "28343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1108,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1106,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "28362:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28362:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28343:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1110,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "28406:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1111,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "28416:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1112,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "28422:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1113,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "28426:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1114,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "28431:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1115,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "28440:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1109,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "28385:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28385:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "28385:60:0"
											},
											{
												"body": {
													"id": 1175,
													"nodeType": "Block",
													"src": "28497:370:0",
													"statements": [
														{
															"assignments": [
																1130
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1130,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "28519:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1175,
																	"src": "28511:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1129,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "28511:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1134,
															"initialValue": {
																"baseExpression": {
																	"id": 1131,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "28524:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1133,
																"indexExpression": {
																	"id": 1132,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "28528:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "28524:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "28511:19:0"
														},
														{
															"assignments": [
																1136
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1136,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "28552:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1175,
																	"src": "28544:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1135,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "28544:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1140,
															"initialValue": {
																"baseExpression": {
																	"id": 1137,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "28561:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1139,
																"indexExpression": {
																	"id": 1138,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "28569:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "28561:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "28544:27:0"
														},
														{
															"assignments": [
																1142
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1142,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "28594:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1175,
																	"src": "28586:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1141,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "28586:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1148,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1143,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "28608:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1145,
																	"indexExpression": {
																		"id": 1144,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "28618:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "28608:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1147,
																"indexExpression": {
																	"id": 1146,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "28622:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "28608:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "28586:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1150,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1142,
																			"src": "28649:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1151,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1136,
																			"src": "28664:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "28649:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28672:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 1149,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "28641:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28641:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1155,
															"nodeType": "ExpressionStatement",
															"src": "28641:76:0"
														},
														{
															"id": 1166,
															"nodeType": "UncheckedBlock",
															"src": "28731:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1156,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 685,
																					"src": "28759:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1159,
																				"indexExpression": {
																					"id": 1157,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1130,
																					"src": "28769:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "28759:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1160,
																			"indexExpression": {
																				"id": 1158,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1072,
																				"src": "28773:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "28759:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1161,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1142,
																				"src": "28781:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1162,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1136,
																				"src": "28795:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28781:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "28759:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1165,
																	"nodeType": "ExpressionStatement",
																	"src": "28759:42:0"
																}
															]
														},
														{
															"expression": {
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1167,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 685,
																			"src": "28829:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1170,
																		"indexExpression": {
																			"id": 1168,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1130,
																			"src": "28839:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28829:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1171,
																	"indexExpression": {
																		"id": 1169,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1074,
																		"src": "28843:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "28829:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1172,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "28850:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28829:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1174,
															"nodeType": "ExpressionStatement",
															"src": "28829:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1122,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "28476:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1123,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "28480:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28484:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "28480:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28476:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1176,
												"initializationExpression": {
													"assignments": [
														1119
													],
													"declarations": [
														{
															"constant": false,
															"id": 1119,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "28469:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1176,
															"src": "28461:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1118,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "28461:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1121,
													"initialValue": {
														"hexValue": "30",
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28473:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "28461:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "28492:3:0",
														"subExpression": {
															"id": 1126,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "28494:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1128,
													"nodeType": "ExpressionStatement",
													"src": "28492:3:0"
												},
												"nodeType": "ForStatement",
												"src": "28456:411:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1178,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "28896:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1179,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "28906:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1180,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "28912:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1181,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "28916:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1182,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "28921:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1177,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "28882:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28882:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "EmitStatement",
												"src": "28877:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1186,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "28960:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1187,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "28970:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1188,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "28976:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1189,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "28980:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1190,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "28985:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1191,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "28994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1185,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "28940:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28940:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "28940:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1195,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "29046:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1196,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "29056:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1197,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "29062:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1198,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "29066:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1199,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "29071:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1200,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "29080:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1194,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "29010:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29010:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "29010:75:0"
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "27637:335:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "27986:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28026:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "28018:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28048:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "28040:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28040:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "28077:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "28060:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1075,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "28060:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1076,
													"nodeType": "ArrayTypeName",
													"src": "28060:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "28107:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "28090:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1078,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "28090:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1079,
													"nodeType": "ArrayTypeName",
													"src": "28090:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "28137:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "28124:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1081,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28124:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28008:139:0"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28165:0:0"
									},
									"scope": 1882,
									"src": "27977:1115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "29971:30:0",
										"statements": [
											{
												"expression": {
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1210,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "29981:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1211,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "29988:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "29981:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "29981:13:0"
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "29098:812:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "29924:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "29946:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "29932:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1206,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "29932:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29931:22:0"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29971:0:0"
									},
									"scope": 1882,
									"src": "29915:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "30465:580:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1228,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "30483:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "30489:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1229,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "30489:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30489:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "30483:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30501:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 1227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30475:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30475:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "30475:62:0"
											},
											{
												"assignments": [
													1238
												],
												"declarations": [
													{
														"constant": false,
														"id": 1238,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "30556:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "30548:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1237,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "30548:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1241,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1239,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "30567:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30567:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30548:31:0"
											},
											{
												"assignments": [
													1246
												],
												"declarations": [
													{
														"constant": false,
														"id": 1246,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "30606:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "30589:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1244,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "30589:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1245,
															"nodeType": "ArrayTypeName",
															"src": "30589:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1250,
												"initialValue": {
													"arguments": [
														{
															"id": 1248,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "30630:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1247,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1881,
														"src": "30612:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30612:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30589:44:0"
											},
											{
												"assignments": [
													1255
												],
												"declarations": [
													{
														"constant": false,
														"id": 1255,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "30660:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "30643:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1253,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "30643:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1254,
															"nodeType": "ArrayTypeName",
															"src": "30643:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1259,
												"initialValue": {
													"arguments": [
														{
															"id": 1257,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "30688:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1256,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1881,
														"src": "30670:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30670:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30643:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1261,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "30727:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30745:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30737:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1262,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30737:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30737:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1266,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "30749:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1267,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "30753:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1268,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "30758:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1269,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "30767:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1260,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "30706:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30706:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "30706:66:0"
											},
											{
												"expression": {
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1272,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "30783:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1275,
															"indexExpression": {
																"id": 1273,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "30793:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30783:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1276,
														"indexExpression": {
															"id": 1274,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "30797:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "30783:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1277,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "30804:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30783:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "30783:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1281,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "30840:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30858:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30850:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1282,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30850:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30850:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1286,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "30862:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1287,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "30866:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1288,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "30870:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1280,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "30825:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30825:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "EmitStatement",
												"src": "30820:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1292,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "30908:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30926:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30918:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1293,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30918:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30918:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1297,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "30930:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1298,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "30934:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1299,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "30939:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1300,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "30948:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1291,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "30888:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30888:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "30888:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1304,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "30995:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31013:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31005:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1305,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31005:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31005:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1309,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "31017:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1310,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "31021:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1311,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "31025:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1312,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "31033:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1303,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "30964:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30964:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "30964:74:0"
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "30007:362:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "30383:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30397:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "30389:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30389:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "30409:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "30401:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30421:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "30413:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "30442:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "30429:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30429:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30388:59:0"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30465:0:0"
									},
									"scope": 1882,
									"src": "30374:671:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "31589:637:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1331,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "31607:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31621:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "31613:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1332,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "31613:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31613:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "31607:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31625:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 1330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31599:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31599:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "31599:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1341,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "31679:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31683:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "31679:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1343,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1325,
																	"src": "31693:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31701:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "31693:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31679:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31709:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31671:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31671:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1348,
												"nodeType": "ExpressionStatement",
												"src": "31671:81:0"
											},
											{
												"assignments": [
													1350
												],
												"declarations": [
													{
														"constant": false,
														"id": 1350,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "31771:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1426,
														"src": "31763:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1349,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "31763:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1353,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1351,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "31782:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31782:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31763:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1355,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "31826:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31844:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31836:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1356,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31836:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31836:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1360,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "31848:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1361,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "31852:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1362,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "31857:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1363,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "31866:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1354,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "31805:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31805:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "31805:66:0"
											},
											{
												"body": {
													"id": 1389,
													"nodeType": "Block",
													"src": "31923:60:0",
													"statements": [
														{
															"expression": {
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1377,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 685,
																			"src": "31937:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1382,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1378,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1322,
																				"src": "31947:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1380,
																			"indexExpression": {
																				"id": 1379,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1367,
																				"src": "31951:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "31947:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "31937:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1383,
																	"indexExpression": {
																		"id": 1381,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1319,
																		"src": "31955:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "31937:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1384,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1325,
																		"src": "31962:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1386,
																	"indexExpression": {
																		"id": 1385,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1367,
																		"src": "31970:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "31962:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31937:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1388,
															"nodeType": "ExpressionStatement",
															"src": "31937:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1370,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "31902:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1371,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "31906:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31910:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "31906:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31902:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1390,
												"initializationExpression": {
													"assignments": [
														1367
													],
													"declarations": [
														{
															"constant": false,
															"id": 1367,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "31895:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1390,
															"src": "31887:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1366,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "31887:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1369,
													"initialValue": {
														"hexValue": "30",
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31899:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "31887:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "31918:3:0",
														"subExpression": {
															"id": 1374,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "31918:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1376,
													"nodeType": "ExpressionStatement",
													"src": "31918:3:0"
												},
												"nodeType": "ForStatement",
												"src": "31882:101:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1392,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "32012:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32030:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32022:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1393,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32022:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32022:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1397,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "32034:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1398,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "32038:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1399,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "32043:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1391,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "31998:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31998:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1401,
												"nodeType": "EmitStatement",
												"src": "31993:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1403,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "32082:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32100:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32092:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1404,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32092:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32092:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1408,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "32104:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1409,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "32108:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1410,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "32113:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1411,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "32122:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1402,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "32062:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32062:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "32062:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1415,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "32174:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32192:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32184:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1416,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32184:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32184:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1420,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "32196:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1421,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "32200:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1422,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "32205:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1423,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "32214:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1414,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "32138:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32138:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "32138:81:0"
											}
										]
									},
									"documentation": {
										"id": 1317,
										"nodeType": "StructuredDocumentation",
										"src": "31051:379:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "31444:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31472:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "31464:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "31501:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "31484:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1320,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "31484:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1321,
													"nodeType": "ArrayTypeName",
													"src": "31484:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "31531:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "31514:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1323,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "31514:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1324,
													"nodeType": "ArrayTypeName",
													"src": "31514:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "31561:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "31548:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "31548:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31454:117:0"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31589:0:0"
									},
									"scope": 1882,
									"src": "31435:791:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1531,
										"nodeType": "Block",
										"src": "32586:682:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1438,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "32604:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32620:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "32612:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1439,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "32612:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32612:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "32604:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32624:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32596:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32596:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "32596:66:0"
											},
											{
												"assignments": [
													1448
												],
												"declarations": [
													{
														"constant": false,
														"id": 1448,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "32681:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1531,
														"src": "32673:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1447,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "32673:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1451,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1449,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "32692:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32692:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32673:31:0"
											},
											{
												"assignments": [
													1456
												],
												"declarations": [
													{
														"constant": false,
														"id": 1456,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "32731:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1531,
														"src": "32714:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1454,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "32714:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1455,
															"nodeType": "ArrayTypeName",
															"src": "32714:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1460,
												"initialValue": {
													"arguments": [
														{
															"id": 1458,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "32755:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1457,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1881,
														"src": "32737:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32737:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32714:44:0"
											},
											{
												"assignments": [
													1465
												],
												"declarations": [
													{
														"constant": false,
														"id": 1465,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "32785:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1531,
														"src": "32768:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1463,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "32768:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1464,
															"nodeType": "ArrayTypeName",
															"src": "32768:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1469,
												"initialValue": {
													"arguments": [
														{
															"id": 1467,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "32813:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1466,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1881,
														"src": "32795:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32795:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32768:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1471,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "32852:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1472,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "32862:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32876:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32868:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1473,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32868:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32868:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1477,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "32880:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1478,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "32885:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32894:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1470,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "32831:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32831:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "32831:66:0"
											},
											{
												"assignments": [
													1483
												],
												"declarations": [
													{
														"constant": false,
														"id": 1483,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "32916:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1531,
														"src": "32908:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1482,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32908:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1489,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1484,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "32930:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1486,
														"indexExpression": {
															"id": 1485,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "32940:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32930:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1488,
													"indexExpression": {
														"id": 1487,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "32944:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32930:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32908:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1491,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "32967:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1492,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "32982:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32967:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32990:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 1490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32959:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32959:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1496,
												"nodeType": "ExpressionStatement",
												"src": "32959:70:0"
											},
											{
												"id": 1507,
												"nodeType": "UncheckedBlock",
												"src": "33039:77:0",
												"statements": [
													{
														"expression": {
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1497,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "33063:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1500,
																	"indexExpression": {
																		"id": 1498,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1432,
																		"src": "33073:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "33063:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1501,
																"indexExpression": {
																	"id": 1499,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1430,
																	"src": "33077:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "33063:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1502,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1483,
																	"src": "33085:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1503,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1434,
																	"src": "33099:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33085:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33063:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1506,
														"nodeType": "ExpressionStatement",
														"src": "33063:42:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1509,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "33146:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1510,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "33156:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33170:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33162:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1511,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33162:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33162:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1515,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "33174:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1516,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "33178:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1508,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "33131:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33131:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1518,
												"nodeType": "EmitStatement",
												"src": "33126:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1520,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "33216:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1521,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "33226:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33240:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33232:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33232:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33232:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1526,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "33244:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1527,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "33249:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33258:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1519,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "33196:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33196:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1530,
												"nodeType": "ExpressionStatement",
												"src": "33196:65:0"
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "32232:275:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "32521:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "32535:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "32527:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32527:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "32549:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "32541:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32561:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "32553:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32553:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32526:42:0"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32586:0:0"
									},
									"scope": 1882,
									"src": "32512:756:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "33606:814:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1545,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "33624:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33640:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "33632:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1546,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "33632:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33632:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "33624:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33644:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1544,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33616:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33616:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "33616:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1555,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "33700:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "33704:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "33700:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1557,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1541,
																	"src": "33714:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "33722:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "33714:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33700:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33730:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1554,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33692:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33692:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "33692:81:0"
											},
											{
												"assignments": [
													1564
												],
												"declarations": [
													{
														"constant": false,
														"id": 1564,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "33792:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1654,
														"src": "33784:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1563,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "33784:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1567,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1565,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "33803:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33803:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33784:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1569,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "33847:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1570,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "33857:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33871:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33863:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1571,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33863:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33863:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1575,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "33875:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1576,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "33880:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33889:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1568,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "33826:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33826:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "33826:66:0"
											},
											{
												"body": {
													"id": 1629,
													"nodeType": "Block",
													"src": "33944:323:0",
													"statements": [
														{
															"assignments": [
																1592
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1592,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "33966:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1629,
																	"src": "33958:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1591,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33958:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1596,
															"initialValue": {
																"baseExpression": {
																	"id": 1593,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "33971:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1595,
																"indexExpression": {
																	"id": 1594,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1581,
																	"src": "33975:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "33971:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33958:19:0"
														},
														{
															"assignments": [
																1598
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1598,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "33999:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1629,
																	"src": "33991:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1597,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33991:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1602,
															"initialValue": {
																"baseExpression": {
																	"id": 1599,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1541,
																	"src": "34008:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1601,
																"indexExpression": {
																	"id": 1600,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1581,
																	"src": "34016:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "34008:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33991:27:0"
														},
														{
															"assignments": [
																1604
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1604,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "34041:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1629,
																	"src": "34033:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1603,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "34033:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1610,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1605,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "34055:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1607,
																	"indexExpression": {
																		"id": 1606,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1592,
																		"src": "34065:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "34055:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1609,
																"indexExpression": {
																	"id": 1608,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "34069:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "34055:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "34033:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1612,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "34096:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1613,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1598,
																			"src": "34111:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34096:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34119:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1611,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "34088:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34088:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1617,
															"nodeType": "ExpressionStatement",
															"src": "34088:70:0"
														},
														{
															"id": 1628,
															"nodeType": "UncheckedBlock",
															"src": "34172:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 1626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1618,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 685,
																					"src": "34200:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1621,
																				"indexExpression": {
																					"id": 1619,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1592,
																					"src": "34210:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "34200:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1622,
																			"indexExpression": {
																				"id": 1620,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1535,
																				"src": "34214:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "34200:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1623,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1604,
																				"src": "34222:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1624,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1598,
																				"src": "34236:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "34222:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34200:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1627,
																	"nodeType": "ExpressionStatement",
																	"src": "34200:42:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1584,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "33923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1585,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "33927:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33931:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "33927:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33923:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1630,
												"initializationExpression": {
													"assignments": [
														1581
													],
													"declarations": [
														{
															"constant": false,
															"id": 1581,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "33916:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1630,
															"src": "33908:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1580,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "33908:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1583,
													"initialValue": {
														"hexValue": "30",
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "33908:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "33939:3:0",
														"subExpression": {
															"id": 1588,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "33939:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1590,
													"nodeType": "ExpressionStatement",
													"src": "33939:3:0"
												},
												"nodeType": "ForStatement",
												"src": "33903:364:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1632,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "34296:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1633,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "34306:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34320:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34312:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1634,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34312:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34312:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1638,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "34324:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1639,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "34329:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1631,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "34282:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34282:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1641,
												"nodeType": "EmitStatement",
												"src": "34277:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1643,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "34368:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1644,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "34378:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34392:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34384:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1645,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34384:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34384:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1649,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "34396:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1650,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "34401:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34410:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1642,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "34348:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34348:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1653,
												"nodeType": "ExpressionStatement",
												"src": "34348:65:0"
											}
										]
									},
									"documentation": {
										"id": 1533,
										"nodeType": "StructuredDocumentation",
										"src": "33274:228:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "33516:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "33535:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "33527:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33527:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "33558:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "33541:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1536,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "33541:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1537,
													"nodeType": "ArrayTypeName",
													"src": "33541:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "33580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "33563:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1539,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "33563:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1540,
													"nodeType": "ArrayTypeName",
													"src": "33563:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33526:62:0"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33606:0:0"
									},
									"scope": 1882,
									"src": "33507:913:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "34649:200:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1666,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1658,
																"src": "34667:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1667,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1660,
																"src": "34676:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "34667:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34686:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1665,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34659:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34659:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1671,
												"nodeType": "ExpressionStatement",
												"src": "34659:71:0"
											},
											{
												"expression": {
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1672,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "34740:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1675,
															"indexExpression": {
																"id": 1673,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1658,
																"src": "34759:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34740:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1676,
														"indexExpression": {
															"id": 1674,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "34766:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "34740:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1677,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "34778:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "34740:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1679,
												"nodeType": "ExpressionStatement",
												"src": "34740:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1681,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "34816:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1682,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "34823:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1683,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "34833:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1680,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "34801:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34801:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1685,
												"nodeType": "EmitStatement",
												"src": "34796:46:0"
											}
										]
									},
									"documentation": {
										"id": 1656,
										"nodeType": "StructuredDocumentation",
										"src": "34426:125:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "34565:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "34592:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "34584:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "34607:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "34599:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34599:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "34622:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "34617:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1661,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34617:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34583:48:0"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34649:0:0"
									},
									"scope": 1882,
									"src": "34556:293:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "35997:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "34855:925:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "35794:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "35832:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "35824:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35824:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "35858:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "35850:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35880:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "35872:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "35909:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "35892:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1695,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "35892:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1696,
													"nodeType": "ArrayTypeName",
													"src": "35892:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "35939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "35922:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1698,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "35922:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1699,
													"nodeType": "ArrayTypeName",
													"src": "35922:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "35969:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "35956:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "35956:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35814:165:0"
									},
									"returnParameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35997:0:0"
									},
									"scope": 1882,
									"src": "35785:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "37143:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "36005:922:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "36941:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "36978:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "36970:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "37004:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "36996:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37026:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "37018:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "37055:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "37038:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1714,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "37038:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1715,
													"nodeType": "ArrayTypeName",
													"src": "37038:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "37085:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "37068:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1717,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "37068:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1718,
													"nodeType": "ArrayTypeName",
													"src": "37068:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "37115:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "37102:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1720,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "37102:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36960:165:0"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37143:0:0"
									},
									"scope": 1882,
									"src": "36932:213:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1787,
										"nodeType": "Block",
										"src": "37344:532:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1740,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "37358:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "37361:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "37358:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37358:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1786,
												"nodeType": "IfStatement",
												"src": "37354:516:0",
												"trueBody": {
													"id": 1785,
													"nodeType": "Block",
													"src": "37375:495:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1767,
																		"nodeType": "Block",
																		"src": "37492:184:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1760,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1756,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1754,
																						"src": "37514:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1757,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 533,
																								"src": "37526:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$533_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1758,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "37543:17:0",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 514,
																							"src": "37526:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1759,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "37561:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "37526:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "37514:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1766,
																				"nodeType": "IfStatement",
																				"src": "37510:152:0",
																				"trueBody": {
																					"id": 1765,
																					"nodeType": "Block",
																					"src": "37571:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1762,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "37600:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1761,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "37593:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1763,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "37593:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1764,
																							"nodeType": "ExpressionStatement",
																							"src": "37593:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1768,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1755,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1754,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "37482:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1768,
																				"src": "37475:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1753,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "37475:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "37474:17:0"
																	},
																	"src": "37466:210:0"
																},
																{
																	"block": {
																		"id": 1776,
																		"nodeType": "Block",
																		"src": "37711:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1773,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1770,
																							"src": "37736:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1772,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "37729:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1774,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "37729:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1775,
																				"nodeType": "ExpressionStatement",
																				"src": "37729:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1777,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1771,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1770,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "37703:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1777,
																				"src": "37689:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1769,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "37689:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "37688:22:0"
																	},
																	"src": "37677:81:0"
																},
																{
																	"block": {
																		"id": 1782,
																		"nodeType": "Block",
																		"src": "37765:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572",
																							"id": 1779,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "37790:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non-ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1778,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "37783:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1780,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "37783:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1781,
																				"nodeType": "ExpressionStatement",
																				"src": "37783:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1783,
																	"nodeType": "TryCatchClause",
																	"src": "37759:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1747,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1727,
																		"src": "37432:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1748,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1729,
																		"src": "37442:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1749,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1733,
																		"src": "37448:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1750,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "37452:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1751,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1737,
																		"src": "37460:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1744,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1731,
																				"src": "37410:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1743,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "37393:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$533_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37393:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$533",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "37414:17:0",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 514,
																	"src": "37393:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37393:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1784,
															"nodeType": "TryStatement",
															"src": "37389:471:0"
														}
													]
												}
											}
										]
									},
									"id": 1788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "37160:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37208:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "37200:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "37234:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "37226:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37256:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "37248:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "37276:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "37268:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "37296:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "37288:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "37325:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "37312:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1736,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "37312:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37190:145:0"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37344:0:0"
									},
									"scope": 1882,
									"src": "37151:725:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "38100:574:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1805,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "38114:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "38117:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "38114:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38114:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1851,
												"nodeType": "IfStatement",
												"src": "38110:558:0",
												"trueBody": {
													"id": 1850,
													"nodeType": "Block",
													"src": "38131:537:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1832,
																		"nodeType": "Block",
																		"src": "38285:189:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1825,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1821,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1819,
																						"src": "38307:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1822,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 533,
																								"src": "38319:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$533_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1823,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "38336:22:0",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 532,
																							"src": "38319:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1824,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "38359:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "38319:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "38307:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1831,
																				"nodeType": "IfStatement",
																				"src": "38303:157:0",
																				"trueBody": {
																					"id": 1830,
																					"nodeType": "Block",
																					"src": "38369:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1827,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "38398:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1826,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "38391:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1828,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "38391:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1829,
																							"nodeType": "ExpressionStatement",
																							"src": "38391:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1833,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1820,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1819,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "38262:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1833,
																				"src": "38255:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1818,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "38255:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "38237:47:0"
																	},
																	"src": "38229:245:0"
																},
																{
																	"block": {
																		"id": 1841,
																		"nodeType": "Block",
																		"src": "38509:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1838,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1835,
																							"src": "38534:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1837,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "38527:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1839,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "38527:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1840,
																				"nodeType": "ExpressionStatement",
																				"src": "38527:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1842,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1836,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1835,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "38501:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1842,
																				"src": "38487:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1834,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "38487:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "38486:22:0"
																	},
																	"src": "38475:81:0"
																},
																{
																	"block": {
																		"id": 1847,
																		"nodeType": "Block",
																		"src": "38563:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572",
																							"id": 1844,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "38588:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non-ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1843,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "38581:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1845,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "38581:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1846,
																				"nodeType": "ExpressionStatement",
																				"src": "38581:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1848,
																	"nodeType": "TryCatchClause",
																	"src": "38557:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1812,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "38193:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1813,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1792,
																		"src": "38203:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1814,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1797,
																		"src": "38209:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1815,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1800,
																		"src": "38214:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1816,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1802,
																		"src": "38223:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1809,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1794,
																				"src": "38166:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1808,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "38149:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$533_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "38149:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$533",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "38170:22:0",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 532,
																	"src": "38149:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38149:79:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1849,
															"nodeType": "TryStatement",
															"src": "38145:513:0"
														}
													]
												}
											}
										]
									},
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "37891:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37944:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "37936:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "37970:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "37962:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37992:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "37984:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "38021:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "38004:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1795,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "38004:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1796,
													"nodeType": "ArrayTypeName",
													"src": "38004:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "38051:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "38034:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1798,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "38034:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1799,
													"nodeType": "ArrayTypeName",
													"src": "38034:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "38081:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "38068:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1801,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38068:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37926:165:0"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38100:0:0"
									},
									"scope": 1882,
									"src": "37882:792:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1880,
										"nodeType": "Block",
										"src": "38764:109:0",
										"statements": [
											{
												"assignments": [
													1865
												],
												"declarations": [
													{
														"constant": false,
														"id": 1865,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "38791:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1880,
														"src": "38774:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1863,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "38774:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1864,
															"nodeType": "ArrayTypeName",
															"src": "38774:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1871,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38813:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1868,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "38799:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1866,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "38803:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1867,
															"nodeType": "ArrayTypeName",
															"src": "38803:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38799:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38774:41:0"
											},
											{
												"expression": {
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1872,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "38825:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1874,
														"indexExpression": {
															"hexValue": "30",
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38831:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38825:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1875,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1855,
														"src": "38836:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38825:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1877,
												"nodeType": "ExpressionStatement",
												"src": "38825:18:0"
											},
											{
												"expression": {
													"id": 1878,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1865,
													"src": "38861:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1860,
												"id": 1879,
												"nodeType": "Return",
												"src": "38854:12:0"
											}
										]
									},
									"id": 1881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "38689:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "38715:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "38707:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38706:17:0"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "38746:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1857,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "38746:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1858,
													"nodeType": "ArrayTypeName",
													"src": "38746:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38745:18:0"
									},
									"scope": 1882,
									"src": "38680:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2011,
							"src": "22336:16539:0",
							"usedErrors": [],
							"usedEvents": [
								550,
								565,
								574,
								581
							]
						},
						{
							"id": 1883,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39053:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1885,
										"name": "ERC1155",
										"nameLocations": [
											"39294:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1882,
										"src": "39294:7:0"
									},
									"id": 1886,
									"nodeType": "InheritanceSpecifier",
									"src": "39294:7:0"
								}
							],
							"canonicalName": "ERC1155Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1884,
								"nodeType": "StructuredDocumentation",
								"src": "39079:177:0",
								"text": " @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use.\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1949,
							"linearizedBaseContracts": [
								1949,
								1882,
								666,
								653,
								494,
								472,
								21
							],
							"name": "ERC1155Burnable",
							"nameLocation": "39275:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1915,
										"nodeType": "Block",
										"src": "39381:212:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1896,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1888,
																	"src": "39412:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1897,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "39423:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "39423:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "39412:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1901,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1888,
																		"src": "39456:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1902,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "39465:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "39465:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1900,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "39439:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39439:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "39412:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39492:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															},
															"value": "ERC1155: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															}
														],
														"id": 1895,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "39391:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39391:159:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1908,
												"nodeType": "ExpressionStatement",
												"src": "39391:159:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1888,
															"src": "39567:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1911,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1890,
															"src": "39576:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1912,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "39580:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1909,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "39561:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39561:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1914,
												"nodeType": "ExpressionStatement",
												"src": "39561:25:0"
											}
										]
									},
									"functionSelector": "f5298aca",
									"id": 1916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "39317:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "39330:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "39322:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "39347:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "39339:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39339:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "39359:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "39351:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39321:44:0"
									},
									"returnParameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39381:0:0"
									},
									"scope": 1949,
									"src": "39308:285:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "39697:219:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1928,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "39728:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1929,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "39739:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "39739:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "39728:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1933,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1918,
																		"src": "39772:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1934,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "39781:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "39781:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1932,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "39755:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39755:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "39728:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39808:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															},
															"value": "ERC1155: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															}
														],
														"id": 1927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "39707:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39707:159:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1940,
												"nodeType": "ExpressionStatement",
												"src": "39707:159:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1942,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "39888:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1943,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "39897:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1944,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1924,
															"src": "39902:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1941,
														"name": "_burnBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "39877:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39877:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1946,
												"nodeType": "ExpressionStatement",
												"src": "39877:32:0"
											}
										]
									},
									"functionSelector": "6b20c454",
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnBatch",
									"nameLocation": "39608:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "39626:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "39618:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "39652:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "39635:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1919,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "39635:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1920,
													"nodeType": "ArrayTypeName",
													"src": "39635:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "39674:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "39657:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1922,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "39657:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1923,
													"nodeType": "ArrayTypeName",
													"src": "39657:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39617:64:0"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39697:0:0"
									},
									"scope": 1949,
									"src": "39599:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2011,
							"src": "39257:661:0",
							"usedErrors": [],
							"usedEvents": [
								550,
								565,
								574,
								581
							]
						},
						{
							"id": 1950,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "39954:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1951,
										"name": "ERC1155",
										"nameLocations": [
											"40003:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1882,
										"src": "40003:7:0"
									},
									"id": 1952,
									"nodeType": "InheritanceSpecifier",
									"src": "40003:7:0"
								},
								{
									"baseName": {
										"id": 1953,
										"name": "ERC1155Burnable",
										"nameLocations": [
											"40012:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1949,
										"src": "40012:15:0"
									},
									"id": 1954,
									"nodeType": "InheritanceSpecifier",
									"src": "40012:15:0"
								},
								{
									"baseName": {
										"id": 1955,
										"name": "Ownable",
										"nameLocations": [
											"40029:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 132,
										"src": "40029:7:0"
									},
									"id": 1956,
									"nodeType": "InheritanceSpecifier",
									"src": "40029:7:0"
								}
							],
							"canonicalName": "DTicket",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2010,
							"linearizedBaseContracts": [
								2010,
								132,
								1949,
								1882,
								666,
								653,
								494,
								472,
								21
							],
							"name": "DTicket",
							"nameLocation": "39992:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "40086:2:0",
										"statements": []
									},
									"id": 1965,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "445469636b6574",
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "40065:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_5372b556c9a011f8d54354700ad459a069817ef1b43edf35b839b350413097fd",
														"typeString": "literal_string \"DTicket\""
													},
													"value": "DTicket"
												}
											],
											"id": 1960,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1958,
												"name": "ERC1155",
												"nameLocations": [
													"40057:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1882,
												"src": "40057:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "40057:18:0"
										},
										{
											"arguments": [],
											"id": 1962,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1961,
												"name": "Ownable",
												"nameLocations": [
													"40076:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 132,
												"src": "40076:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "40076:9:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40054:2:0"
									},
									"returnParameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40086:0:0"
									},
									"scope": 2010,
									"src": "40043:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1985,
										"nodeType": "Block",
										"src": "40209:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1979,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "40225:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1980,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "40234:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1981,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "40238:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1982,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "40246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1978,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "40219:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40219:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1984,
												"nodeType": "ExpressionStatement",
												"src": "40219:32:0"
											}
										]
									},
									"functionSelector": "731133e9",
									"id": 1986,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1976,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1975,
												"name": "onlyOwner",
												"nameLocations": [
													"40195:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "40195:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "40195:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "40103:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "40116:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "40108:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "40133:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "40125:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "40145:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "40137:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "40166:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "40153:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40153:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40107:64:0"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40209:0:0"
									},
									"scope": 2010,
									"src": "40094:164:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2008,
										"nodeType": "Block",
										"src": "40399:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1988,
															"src": "40420:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2003,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "40424:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2004,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1994,
															"src": "40429:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2005,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "40438:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2001,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "40409:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40409:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "40409:34:0"
											}
										]
									},
									"functionSelector": "1f7fdffa",
									"id": 2009,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1999,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1998,
												"name": "onlyOwner",
												"nameLocations": [
													"40385:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "40385:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "40385:9:0"
										}
									],
									"name": "mintBatch",
									"nameLocation": "40273:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40291:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "40283:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40283:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "40312:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "40295:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1989,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "40295:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1990,
													"nodeType": "ArrayTypeName",
													"src": "40295:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "40334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "40317:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1992,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "40317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1993,
													"nodeType": "ArrayTypeName",
													"src": "40317:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "40356:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "40343:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1995,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40343:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40282:79:0"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40399:0:0"
									},
									"scope": 2010,
									"src": "40264:186:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2011,
							"src": "39983:469:0",
							"usedErrors": [],
							"usedEvents": [
								33,
								550,
								565,
								574,
								581
							]
						}
					],
					"src": "108:40344:0"
				},
				"id": 0
			}
		}
	}
}